//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Jun 12 19:49:21 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_begin
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_begin_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_begin_BB__0_1
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_begin
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_gentab
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_crc32_gentab_BB__1_1 default: LEGUP_0
state: LEGUP_F_crc32_gentab_BB__1_1
   %2 = phi i32 [ 0, %0 ], [ %17, %16 ] (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %scevgep = getelementptr [256 x i32]* @crc32_tab, i32 0, i32 %2 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %exitcond1 = icmp eq i32 %2, 256 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   br i1 %exitcond1, label %18, label %3
   Transition: if (%exitcond1): LEGUP_F_crc32_gentab_BB__18_12 default: LEGUP_F_crc32_gentab_BB__3_2
state: LEGUP_F_crc32_gentab_BB__3_2
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__4_3
   %indvar = phi i32 [ %indvar.next, %14 ], [ 0, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %crc.0 = phi i32 [ %crc.1, %14 ], [ %2, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %exitcond = icmp eq i32 %indvar, 8 (endState: LEGUP_F_crc32_gentab_BB__4_3)
   br i1 %exitcond, label %15, label %5
   Transition: if (%exitcond): LEGUP_F_crc32_gentab_BB__15_9 default: LEGUP_F_crc32_gentab_BB__5_4
state: LEGUP_F_crc32_gentab_BB__5_4
   %6 = and i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   %7 = icmp eq i32 %6, 0 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   br i1 %7, label %11, label %8
   Transition: if (%7): LEGUP_F_crc32_gentab_BB__11_6 default: LEGUP_F_crc32_gentab_BB__8_5
state: LEGUP_F_crc32_gentab_BB__8_5
   %9 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   %10 = xor i32 %9, -306674912 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__11_6
   %12 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__11_6)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__13_7
   %crc.1 = phi i32 [ %10, %8 ], [ %12, %11 ] (endState: LEGUP_F_crc32_gentab_BB__13_7)
   br label %14
   Transition: default: LEGUP_F_crc32_gentab_BB__14_8
state: LEGUP_F_crc32_gentab_BB__14_8
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_crc32_gentab_BB__14_8)
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__15_9
   store i32 %crc.0, i32* %scevgep, align 4 (endState: LEGUP_F_crc32_gentab_BB__15_10)
   Transition: default: LEGUP_F_crc32_gentab_BB__15_10
state: LEGUP_F_crc32_gentab_BB__15_10
   br label %16
   Transition: default: LEGUP_F_crc32_gentab_BB__16_11
state: LEGUP_F_crc32_gentab_BB__16_11
   %17 = add nsw i32 %2, 1 (endState: LEGUP_F_crc32_gentab_BB__16_11)
   br label %1
   Transition: default: LEGUP_F_crc32_gentab_BB__1_1
state: LEGUP_F_crc32_gentab_BB__18_12
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 2
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
End Function: crc32_gentab
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_end
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_end_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_end_BB__0_1
   %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str11, i32 0, i32 0), i32 %crc) #3 (endState: LEGUP_F_platform_main_end_BB__0_1)
   ret i32 %crc
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_end
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_byte
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_byte_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_byte_BB__0_1
   %1 = load i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %3 = zext i8 %b to i32 (endState: LEGUP_F_crc32_byte_BB__0_1)
   Transition: default: LEGUP_F_crc32_byte_BB__0_2
state: LEGUP_F_crc32_byte_BB__0_2
   Transition: default: LEGUP_F_crc32_byte_BB__0_3
state: LEGUP_F_crc32_byte_BB__0_3
   %2 = lshr i32 %1, 8 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %.masked = and i32 %1, 255 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %4 = xor i32 %.masked, %3 (endState: LEGUP_F_crc32_byte_BB__0_3)
   Transition: default: LEGUP_F_crc32_byte_BB__0_4
state: LEGUP_F_crc32_byte_BB__0_4
   %5 = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i32 %4 (endState: LEGUP_F_crc32_byte_BB__0_4)
   %6 = load i32* %5, align 4 (endState: LEGUP_F_crc32_byte_BB__0_6)
   Transition: default: LEGUP_F_crc32_byte_BB__0_5
state: LEGUP_F_crc32_byte_BB__0_5
   Transition: default: LEGUP_F_crc32_byte_BB__0_6
state: LEGUP_F_crc32_byte_BB__0_6
   %7 = xor i32 %2, %6 (endState: LEGUP_F_crc32_byte_BB__0_6)
   store i32 %7, i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_7)
   Transition: default: LEGUP_F_crc32_byte_BB__0_7
state: LEGUP_F_crc32_byte_BB__0_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 7
End Function: crc32_byte
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1
   %1 = mul i8 %si1, %si2 (endState: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1
   %1 = add i16 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__0_1
   %1 = icmp eq i16 %si2, 0 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__2_2
   %3 = icmp eq i16 %si1, -32768 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_div_func_int16_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__4_3
   %5 = icmp eq i16 %si2, -1 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5
   %9 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5)
   %10 = sext i16 %si2 to i32 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5)
   %11 = sdiv i32 %9, %10 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_6
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_7
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_8
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_9
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_10
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_11
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_12
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_13
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_14
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_15
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_16
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_17
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_18
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_19
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_20
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_21
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_22
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_23
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_24
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_25
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_26
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_27
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_28
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_29
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_30
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_31
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_32
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_33
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_34
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_35
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_36
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_37
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i16 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38)
   ret i16 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_div_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1
   %1 = sub i8 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1
   %1 = icmp eq i8 %ui2, 0 (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_div_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_3
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__2_2
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_3
   %div = udiv i8 %ui1, %ui2 (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11)
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_4
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_5
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_6
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_7
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_8
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_9
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_10
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
   %.in = phi i8 [ %ui1, %2 ], [ %div, %3 ] (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12)
   ret i8 %.in
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 9
Basic Block: %4 Num States: 1
End Function: safe_div_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__0_1
   %1 = icmp eq i16 %si2, 0 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__2_2
   %3 = icmp eq i16 %si1, -32768 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_mod_func_int16_t_s_s_BB__4_3 default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__4_3
   %5 = icmp eq i16 %si2, -1 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5
   %9 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5)
   %10 = sext i16 %si2 to i32 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5)
   %11 = srem i32 %9, %10 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_6
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_7
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_8
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_9
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_10
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_11
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_12
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_13
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_14
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_15
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_16
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_17
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_18
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_19
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_20
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_21
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_22
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_23
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_24
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_25
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_26
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_27
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_28
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_29
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_30
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_31
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_32
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_33
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_34
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_35
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_36
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_37
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i16 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38)
   ret i16 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_mod_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %2, label %4
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2 default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2
   %3 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   %6 = lshr i32 %5, %right (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
   %8 = phi i32 [ %3, %2 ], [ %6, %4 ] (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   %9 = trunc i32 %8 to i16 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   ret i16 %9
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
End Function: safe_rshift_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_uint32_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_uint32_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__0_1
   %1 = icmp eq i32 %ui2, 0 (endState: LEGUP_F_safe_div_func_uint32_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_div_func_uint32_t_u_u_BB__2_2 default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_3
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__2_2
   br label %5
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__5_36
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_3
   %4 = udiv i32 %ui1, %ui2 (endState: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_35)
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_4
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_5
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_6
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_7
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_8
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_9
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_10
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_11
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_11
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_12
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_12
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_13
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_13
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_14
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_14
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_15
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_15
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_16
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_16
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_17
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_17
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_18
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_18
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_19
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_19
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_20
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_20
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_21
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_21
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_22
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_22
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_23
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_23
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_24
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_24
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_25
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_25
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_26
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_26
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_27
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_27
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_28
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_28
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_29
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_29
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_30
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_30
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_31
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_31
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_32
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_32
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_33
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_33
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_34
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_34
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_35
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__3_35
   br label %5
   Transition: default: LEGUP_F_safe_div_func_uint32_t_u_u_BB__5_36
state: LEGUP_F_safe_div_func_uint32_t_u_u_BB__5_36
   %6 = phi i32 [ %ui1, %2 ], [ %4, %3 ] (endState: LEGUP_F_safe_div_func_uint32_t_u_u_BB__5_36)
   ret i32 %6
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 33
Basic Block: %5 Num States: 1
End Function: safe_div_func_uint32_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint16_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %6 = lshr i32 65535, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4
   %9 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
   %11 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i16 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   ret i16 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint16_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1
   %1 = sub i8 %ui1, %ui2 (endState: LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint16_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__0_1)
   br i1 %1, label %4, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__2_2
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__2_2)
   br i1 %3, label %4, label %6
   Transition: if (%3): LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4
   %7 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4)
   %8 = lshr i32 %7, %right (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5
   %10 = phi i32 [ %5, %4 ], [ %8, %6 ] (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5)
   %11 = trunc i32 %10 to i16 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5)
   ret i16 %11
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %9 Num States: 1
End Function: safe_rshift_func_uint16_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1
   %1 = add i8 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1
   %1 = add i8 %si1, %si2 (endState: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__0_1
   %1 = icmp eq i8 %ui2, 0 (endState: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_mod_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_3
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__2_2
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_3
   %4 = urem i8 %ui1, %ui2 (endState: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_11)
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_4
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_5
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_6
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_7
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_8
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_9
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_10
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_11
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_11
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12
   %.in = phi i8 [ %ui1, %2 ], [ %4, %3 ] (endState: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12)
   ret i8 %.in
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 9
Basic Block: %5 Num States: 1
End Function: safe_mod_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_1
   %1 = mul i8 %ui1, %ui2 (endState: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_2
state: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_2
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint8_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %6 = lshr i32 255, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4
   %9 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
   %11 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i8 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   ret i8 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint8_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1
   %1 = icmp sgt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %2, label %7
   Transition: if (%1): LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2
   %3 = icmp sgt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3
   %5 = sub nsw i32 2147483647, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   %6 = icmp slt i32 %5, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   br i1 %6, label %14, label %7
   Transition: if (%6): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
   %8 = icmp slt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4)
   br i1 %8, label %9, label %15
   Transition: if (%8): LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5
   %10 = icmp slt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5)
   br i1 %10, label %11, label %15
   Transition: if (%10): LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6
   %12 = sub nsw i32 -2147483648, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   %13 = icmp sgt i32 %12, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   br i1 %13, label %14, label %15
   Transition: if (%13): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
   %16 = add nsw i32 %si1, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8)
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
   %18 = phi i32 [ %si1, %14 ], [ %16, %15 ] (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9)
   ret i32 %18
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %17 Num States: 1
End Function: safe_add_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_1_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_1)
   %dt = alloca i8*, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_1)
   %st = alloca i8*, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_2)
   store i8* %d, i8** %dt, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_2)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__0_2
state: LEGUP_F_legup_memcpy_1_BB__0_2
   store i8* %s, i8** %st, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__0_3
state: LEGUP_F_legup_memcpy_1_BB__0_3
   br label %2
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_4
state: LEGUP_F_legup_memcpy_1_BB__2_4
   %3 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__2_6)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_5
state: LEGUP_F_legup_memcpy_1_BB__2_5
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_6
state: LEGUP_F_legup_memcpy_1_BB__2_6
   %4 = add i32 %3, -1 (endState: LEGUP_F_legup_memcpy_1_BB__2_6)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__2_7)
   %5 = icmp eq i32 %3, 0 (endState: LEGUP_F_legup_memcpy_1_BB__2_6)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_7
state: LEGUP_F_legup_memcpy_1_BB__2_7
   br i1 %5, label %12, label %6
   Transition: if (%5): LEGUP_F_legup_memcpy_1_BB__12_14 default: LEGUP_F_legup_memcpy_1_BB__6_8
state: LEGUP_F_legup_memcpy_1_BB__6_8
   %7 = load i8** %st, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   %10 = load i8** %dt, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_9
state: LEGUP_F_legup_memcpy_1_BB__6_9
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_10
state: LEGUP_F_legup_memcpy_1_BB__6_10
   %8 = getelementptr inbounds i8* %7, i32 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   store i8* %8, i8** %st, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_11)
   %9 = load i8* %7, align 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_12)
   %11 = getelementptr inbounds i8* %10, i32 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_10)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_11
state: LEGUP_F_legup_memcpy_1_BB__6_11
   store i8* %11, i8** %dt, align 4 (endState: LEGUP_F_legup_memcpy_1_BB__6_12)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_12
state: LEGUP_F_legup_memcpy_1_BB__6_12
   store i8 %9, i8* %10, align 1 (endState: LEGUP_F_legup_memcpy_1_BB__6_13)
   Transition: default: LEGUP_F_legup_memcpy_1_BB__6_13
state: LEGUP_F_legup_memcpy_1_BB__6_13
   br label %2
   Transition: default: LEGUP_F_legup_memcpy_1_BB__2_4
state: LEGUP_F_legup_memcpy_1_BB__12_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 4
Basic Block: %6 Num States: 6
Basic Block: %12 Num States: 1
End Function: legup_memcpy_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_2
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_2_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_2_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %dt = alloca i16*, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %st = alloca i16*, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_2)
   %2 = bitcast i8* %d to i16* (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   store i16* %2, i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_2)
   %3 = bitcast i8* %s to i16* (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %4 = lshr i32 %n, 1 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__0_2
state: LEGUP_F_legup_memcpy_2_BB__0_2
   store i16* %3, i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__0_3
state: LEGUP_F_legup_memcpy_2_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_4
state: LEGUP_F_legup_memcpy_2_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_5
state: LEGUP_F_legup_memcpy_2_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_6
state: LEGUP_F_legup_memcpy_2_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_7
state: LEGUP_F_legup_memcpy_2_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_2_BB__15_14 default: LEGUP_F_legup_memcpy_2_BB__9_8
state: LEGUP_F_legup_memcpy_2_BB__9_8
   %10 = load i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   %13 = load i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_9
state: LEGUP_F_legup_memcpy_2_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_10
state: LEGUP_F_legup_memcpy_2_BB__9_10
   %11 = getelementptr inbounds i16* %10, i32 1 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   store i16* %11, i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_11)
   %12 = load i16* %10, align 2 (endState: LEGUP_F_legup_memcpy_2_BB__9_12)
   %14 = getelementptr inbounds i16* %13, i32 1 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_11
state: LEGUP_F_legup_memcpy_2_BB__9_11
   store i16* %14, i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_12
state: LEGUP_F_legup_memcpy_2_BB__9_12
   store i16 %12, i16* %13, align 2 (endState: LEGUP_F_legup_memcpy_2_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_13
state: LEGUP_F_legup_memcpy_2_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_4
state: LEGUP_F_legup_memcpy_2_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_2
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_4
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_4_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_4_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %dt = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %st = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %2 = bitcast i8* %d to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32* %2, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %3 = bitcast i8* %s to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %4 = lshr i32 %n, 2 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_2
state: LEGUP_F_legup_memcpy_4_BB__0_2
   store i32* %3, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_3
state: LEGUP_F_legup_memcpy_4_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_5
state: LEGUP_F_legup_memcpy_4_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_6
state: LEGUP_F_legup_memcpy_4_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_7
state: LEGUP_F_legup_memcpy_4_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_4_BB__15_14 default: LEGUP_F_legup_memcpy_4_BB__9_8
state: LEGUP_F_legup_memcpy_4_BB__9_8
   %10 = load i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   %13 = load i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_9
state: LEGUP_F_legup_memcpy_4_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_10
state: LEGUP_F_legup_memcpy_4_BB__9_10
   %11 = getelementptr inbounds i32* %10, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   store i32* %11, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_11)
   %12 = load i32* %10, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   %14 = getelementptr inbounds i32* %13, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_11
state: LEGUP_F_legup_memcpy_4_BB__9_11
   store i32* %14, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_12
state: LEGUP_F_legup_memcpy_4_BB__9_12
   store i32 %12, i32* %13, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_13
state: LEGUP_F_legup_memcpy_4_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_4
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_8bytes
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_8bytes_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_8bytes_BB__0_1
   %1 = trunc i64 %val to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %2 = lshr i64 %val, 8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %3 = trunc i64 %2 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %4 = lshr i64 %val, 16 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %5 = trunc i64 %4 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %6 = lshr i64 %val, 24 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %7 = trunc i64 %6 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %8 = lshr i64 %val, 32 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %9 = trunc i64 %8 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %10 = lshr i64 %val, 40 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %11 = trunc i64 %10 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %12 = lshr i64 %val, 48 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %13 = trunc i64 %12 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %14 = lshr i64 %val, 56 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %15 = trunc i64 %14 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_byte(i8 zeroext %1) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_crc32_8bytes_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_byte(i8 zeroext %3) #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_crc32_8bytes_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   call void @crc32_byte(i8 zeroext %5) #3 (endState: LEGUP_function_call_6)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_crc32_8bytes_BB__0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @crc32_byte(i8 zeroext %7) #3 (endState: LEGUP_function_call_8)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_crc32_8bytes_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @crc32_byte(i8 zeroext %9) #3 (endState: LEGUP_function_call_10)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_crc32_8bytes_BB__0_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   call void @crc32_byte(i8 zeroext %11) #3 (endState: LEGUP_function_call_12)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_crc32_8bytes_BB__0_13
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @crc32_byte(i8 zeroext %13) #3 (endState: LEGUP_function_call_14)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_crc32_8bytes_BB__0_15
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @crc32_byte(i8 zeroext %15) #3 (endState: LEGUP_function_call_16)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_crc32_8bytes_BB__0_17
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
End Function: crc32_8bytes
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_13
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_13_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_13_BB__0_1
   %l_52 = alloca [1 x [1 x [9 x i32]]], align 4 (endState: LEGUP_F_func_13_BB__0_1)
   %1 = bitcast [1 x [1 x [9 x i32]]]* %l_52 to i8* (endState: LEGUP_F_func_13_BB__0_1)
   %2 = getelementptr inbounds [1 x [1 x [9 x i32]]]* %l_52, i32 0, i32 0, i32 0, i32 8 (endState: LEGUP_F_func_13_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_4(i8* %1, i8* bitcast ([1 x [1 x [9 x i32]]]* @func_13.l_52 to i8*), i32 36) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_13_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_func_13_BB__0_3
   %3 = load i32* %2, align 4 (endState: LEGUP_F_func_13_BB__0_5)
   Transition: default: LEGUP_F_func_13_BB__0_4
state: LEGUP_F_func_13_BB__0_4
   Transition: default: LEGUP_F_func_13_BB__0_5
state: LEGUP_F_func_13_BB__0_5
   %4 = add i32 %3, -1 (endState: LEGUP_F_func_13_BB__0_5)
   store i32 %4, i32* %2, align 4 (endState: LEGUP_F_func_13_BB__0_6)
   %5 = trunc i32 %4 to i16 (endState: LEGUP_F_func_13_BB__0_5)
   Transition: default: LEGUP_F_func_13_BB__0_6
state: LEGUP_F_func_13_BB__0_6
   ret i16 %5
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 6
End Function: func_13
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_15
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_func_15_BB__1_1 default: LEGUP_0
state: LEGUP_F_func_15_BB__1_1
   %storemerge = phi i16 [ -1, %0 ], [ %8, %4 ] (endState: LEGUP_F_func_15_BB__1_1)
   store i16 %storemerge, i16* @g_8, align 2 (endState: LEGUP_F_func_15_BB__1_2)
   %2 = icmp ugt i16 %storemerge, 23 (endState: LEGUP_F_func_15_BB__1_1)
   Transition: default: LEGUP_F_func_15_BB__1_2
state: LEGUP_F_func_15_BB__1_2
   br i1 %2, label %3, label %9
   Transition: if (%2): LEGUP_F_func_15_BB__3_3 default: LEGUP_F_func_15_BB__9_9
state: LEGUP_F_func_15_BB__3_3
   br label %4
   Transition: default: LEGUP_F_func_15_BB__4_4
state: LEGUP_F_func_15_BB__4_4
   %5 = load i16* @g_8, align 2 (endState: LEGUP_F_func_15_BB__4_6)
   Transition: default: LEGUP_F_func_15_BB__4_5
state: LEGUP_F_func_15_BB__4_5
   Transition: default: LEGUP_F_func_15_BB__4_6
state: LEGUP_F_func_15_BB__4_6
   %6 = zext i16 %5 to i32 (endState: LEGUP_F_func_15_BB__4_6)
   Transition: default: LEGUP_function_call_7
state: LEGUP_function_call_7
   %7 = call i32 @safe_add_func_int32_t_s_s(i32 %6, i32 1) #3 (endState: LEGUP_function_call_7)
   Transition: if (safe_add_func_int32_t_s_s_finish_final): LEGUP_F_func_15_BB__4_8 default: LEGUP_function_call_7
state: LEGUP_F_func_15_BB__4_8
   %8 = trunc i32 %7 to i16 (endState: LEGUP_F_func_15_BB__4_8)
   br label %1
   Transition: default: LEGUP_F_func_15_BB__1_1
state: LEGUP_F_func_15_BB__9_9
   %10 = load volatile i32* getelementptr inbounds ([4 x i32]* @g_49, i32 0, i32 3), align 4 (endState: LEGUP_F_func_15_BB__9_11)
   Transition: default: LEGUP_F_func_15_BB__9_10
state: LEGUP_F_func_15_BB__9_10
   Transition: default: LEGUP_F_func_15_BB__9_11
state: LEGUP_F_func_15_BB__9_11
   %11 = add i32 %10, 1 (endState: LEGUP_F_func_15_BB__9_11)
   store volatile i32 %11, i32* getelementptr inbounds ([4 x i32]* @g_49, i32 0, i32 3), align 4 (endState: LEGUP_F_func_15_BB__9_12)
   Transition: default: LEGUP_F_func_15_BB__9_12
state: LEGUP_F_func_15_BB__9_12
   br label %12
   Transition: default: LEGUP_F_func_15_BB__12_13
state: LEGUP_F_func_15_BB__12_13
   %13 = phi i32 [ 0, %9 ], [ %21, %20 ] (endState: LEGUP_F_func_15_BB__12_13)
   %exitcond1 = icmp eq i32 %13, 5 (endState: LEGUP_F_func_15_BB__12_13)
   br i1 %exitcond1, label %22, label %14
   Transition: if (%exitcond1): LEGUP_F_func_15_BB__22_21 default: LEGUP_F_func_15_BB__14_14
state: LEGUP_F_func_15_BB__14_14
   br label %15
   Transition: default: LEGUP_F_func_15_BB__15_15
state: LEGUP_F_func_15_BB__15_15
   %indvar = phi i32 [ %indvar.next, %17 ], [ 0, %14 ] (endState: LEGUP_F_func_15_BB__15_15)
   %.0 = phi i32 [ %phitmp, %17 ], [ 0, %14 ] (endState: LEGUP_F_func_15_BB__15_15)
   %exitcond = icmp eq i32 %indvar, 10 (endState: LEGUP_F_func_15_BB__15_15)
   br i1 %exitcond, label %19, label %16
   Transition: if (%exitcond): LEGUP_F_func_15_BB__19_19 default: LEGUP_F_func_15_BB__16_16
state: LEGUP_F_func_15_BB__16_16
   %scevgep2 = getelementptr [5 x [10 x i32]]* @g_7, i32 0, i32 %13, i32 %.0 (endState: LEGUP_F_func_15_BB__16_16)
   store i32 543781278, i32* %scevgep2, align 4 (endState: LEGUP_F_func_15_BB__16_17)
   Transition: default: LEGUP_F_func_15_BB__16_17
state: LEGUP_F_func_15_BB__16_17
   br label %17
   Transition: default: LEGUP_F_func_15_BB__17_18
state: LEGUP_F_func_15_BB__17_18
   %18 = shl nsw i32 %.0, 16 (endState: LEGUP_F_func_15_BB__17_18)
   %sext = add i32 %18, 65536 (endState: LEGUP_F_func_15_BB__17_18)
   %phitmp = ashr exact i32 %sext, 16 (endState: LEGUP_F_func_15_BB__17_18)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_func_15_BB__17_18)
   br label %15
   Transition: default: LEGUP_F_func_15_BB__15_15
state: LEGUP_F_func_15_BB__19_19
   br label %20
   Transition: default: LEGUP_F_func_15_BB__20_20
state: LEGUP_F_func_15_BB__20_20
   %21 = add i32 %13, 1 (endState: LEGUP_F_func_15_BB__20_20)
   br label %12
   Transition: default: LEGUP_F_func_15_BB__12_13
state: LEGUP_F_func_15_BB__22_21
   %23 = sext i16 %p_16 to i32 (endState: LEGUP_F_func_15_BB__22_21)
   ret i32 %23
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 2
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 5
Basic Block: %9 Num States: 4
Basic Block: %12 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %16 Num States: 2
Basic Block: %17 Num States: 1
Basic Block: %19 Num States: 1
Basic Block: %20 Num States: 1
Basic Block: %22 Num States: 1
End Function: func_15
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: transparent_crc
state: LEGUP_0
   Transition: if (start): LEGUP_F_transparent_crc_BB__0_1 default: LEGUP_0
state: LEGUP_F_transparent_crc_BB__0_1
   %1 = icmp eq i32 %flag, 0 (endState: LEGUP_F_transparent_crc_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_8bytes(i64 %val) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_8bytes_finish_final): LEGUP_F_transparent_crc_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_transparent_crc_BB__0_3
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_transparent_crc_BB__6_7 default: LEGUP_F_transparent_crc_BB__2_4
state: LEGUP_F_transparent_crc_BB__2_4
   %3 = load i32* @crc32_context, align 4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   Transition: default: LEGUP_F_transparent_crc_BB__2_5
state: LEGUP_F_transparent_crc_BB__2_5
   Transition: default: LEGUP_F_transparent_crc_BB__2_6
state: LEGUP_F_transparent_crc_BB__2_6
   %4 = xor i32 %3, -1 (endState: LEGUP_F_transparent_crc_BB__2_6)
   %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str12, i32 0, i32 0), i8* %vname, i32 %4) #4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   br label %6
   Transition: default: LEGUP_F_transparent_crc_BB__6_7
state: LEGUP_F_transparent_crc_BB__6_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 3
Basic Block: %6 Num States: 1
End Function: transparent_crc
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_3
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_3_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_3_BB__0_1
   %l_41 = alloca [7 x i8], align 1 (endState: LEGUP_F_func_3_BB__0_1)
   %l_67 = alloca [9 x [8 x [2 x i16]]], align 2 (endState: LEGUP_F_func_3_BB__0_1)
   %l_10 = alloca [7 x i32], align 4 (endState: LEGUP_F_func_3_BB__0_1)
   %1 = getelementptr inbounds [7 x i8]* %l_41, i32 0, i32 0 (endState: LEGUP_F_func_3_BB__0_1)
   %2 = bitcast [9 x [8 x [2 x i16]]]* %l_67 to i8* (endState: LEGUP_F_func_3_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_1(i8* %1, i8* getelementptr inbounds ([7 x i8]* @func_3.l_41, i32 0, i32 0), i32 7) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_1_finish_final): LEGUP_F_func_3_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_func_3_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @legup_memcpy_2(i8* %2, i8* bitcast ([9 x [8 x [2 x i16]]]* @func_3.l_67 to i8*), i32 288) (endState: LEGUP_function_call_4)
   Transition: if (legup_memcpy_2_finish_final): LEGUP_F_func_3_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_func_3_BB__0_5
   br label %3
   Transition: default: LEGUP_F_func_3_BB__3_6
state: LEGUP_F_func_3_BB__3_6
   %indvar1 = phi i32 [ %indvar.next2, %116 ], [ 0, %0 ] (endState: LEGUP_F_func_3_BB__3_6)
   %l_42.0 = phi i32 [ %l_42.1, %116 ], [ -9, %0 ] (endState: LEGUP_F_func_3_BB__3_6)
   %.01 = phi i8 [ 5, %116 ], [ %p_5, %0 ] (endState: LEGUP_F_func_3_BB__3_6)
   %.0 = sub i32 4, %indvar1 (endState: LEGUP_F_func_3_BB__3_6)
   %4 = trunc i32 %.0 to i16 (endState: LEGUP_F_func_3_BB__3_6)
   %exitcond3 = icmp eq i32 %indvar1, 5 (endState: LEGUP_F_func_3_BB__3_6)
   br i1 %exitcond3, label %117, label %5
   Transition: if (%exitcond3): LEGUP_F_func_3_BB__117_102 default: LEGUP_F_func_3_BB__5_7
state: LEGUP_F_func_3_BB__5_7
   %6 = bitcast [7 x i32]* %l_10 to i8* (endState: LEGUP_F_func_3_BB__5_7)
   %7 = getelementptr inbounds [7 x i32]* %l_10, i32 0, i32 5 (endState: LEGUP_F_func_3_BB__5_7)
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @legup_memcpy_4(i8* %6, i8* bitcast ([7 x i32]* @func_3.l_10 to i8*), i32 28) (endState: LEGUP_function_call_8)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_3_BB__5_9 default: LEGUP_function_call_8
state: LEGUP_F_func_3_BB__5_9
   store i16 %4, i16* @g_8, align 2 (endState: LEGUP_F_func_3_BB__5_10)
   store i32 -1769391627, i32* %7, align 4 (endState: LEGUP_F_func_3_BB__5_10)
   Transition: default: LEGUP_F_func_3_BB__5_10
state: LEGUP_F_func_3_BB__5_10
   br label %8
   Transition: default: LEGUP_F_func_3_BB__8_11
state: LEGUP_F_func_3_BB__8_11
   %storemerge = phi i32 [ 0, %5 ], [ %71, %69 ] (endState: LEGUP_F_func_3_BB__8_11)
   store i32 %storemerge, i32* @g_6, align 4 (endState: LEGUP_F_func_3_BB__8_12)
   %9 = icmp ult i32 %storemerge, 5 (endState: LEGUP_F_func_3_BB__8_11)
   Transition: default: LEGUP_F_func_3_BB__8_12
state: LEGUP_F_func_3_BB__8_12
   br i1 %9, label %10, label %72
   Transition: if (%9): LEGUP_F_func_3_BB__10_13 default: LEGUP_F_func_3_BB__72_68
state: LEGUP_F_func_3_BB__10_13
   br i1 true, label %11, label %62
   Transition: if (true): LEGUP_F_func_3_BB__11_14 default: LEGUP_F_func_3_BB__62_55
state: LEGUP_F_func_3_BB__11_14
   %12 = zext i8 %.01 to i16 (endState: LEGUP_F_func_3_BB__11_14)
   %13 = load volatile i32* @g_2, align 4 (endState: LEGUP_F_func_3_BB__11_16)
   %15 = getelementptr inbounds [7 x i32]* %l_10, i32 0, i32 0 (endState: LEGUP_F_func_3_BB__11_14)
   %16 = load i32* %15, align 4 (endState: LEGUP_F_func_3_BB__11_16)
   Transition: default: LEGUP_F_func_3_BB__11_15
state: LEGUP_F_func_3_BB__11_15
   Transition: default: LEGUP_F_func_3_BB__11_16
state: LEGUP_F_func_3_BB__11_16
   %14 = trunc i32 %13 to i8 (endState: LEGUP_F_func_3_BB__11_16)
   %17 = trunc i32 %16 to i16 (endState: LEGUP_F_func_3_BB__11_16)
   Transition: default: LEGUP_function_call_17
state: LEGUP_function_call_17
   %18 = call signext i16 @safe_div_func_int16_t_s_s(i16 signext %17, i16 signext -1) #3 (endState: LEGUP_function_call_17)
   Transition: if (safe_div_func_int16_t_s_s_finish_final): LEGUP_F_func_3_BB__11_18 default: LEGUP_function_call_17
state: LEGUP_F_func_3_BB__11_18
   %19 = load i8* @g_40, align 1 (endState: LEGUP_F_func_3_BB__11_20)
   Transition: default: LEGUP_F_func_3_BB__11_19
state: LEGUP_F_func_3_BB__11_19
   Transition: default: LEGUP_F_func_3_BB__11_20
state: LEGUP_F_func_3_BB__11_20
   %20 = xor i8 %19, 35 (endState: LEGUP_F_func_3_BB__11_20)
   store i8 %20, i8* @g_40, align 1 (endState: LEGUP_F_func_3_BB__11_21)
   %21 = and i8 %20, 1 (endState: LEGUP_F_func_3_BB__11_20)
   Transition: default: LEGUP_F_func_3_BB__11_21
state: LEGUP_F_func_3_BB__11_21
   Transition: default: LEGUP_function_call_22
state: LEGUP_function_call_22
   %22 = call zeroext i8 @safe_mod_func_uint8_t_u_u(i8 zeroext %21, i8 zeroext 64) #3 (endState: LEGUP_function_call_22)
   Transition: if (safe_mod_func_uint8_t_u_u_finish_final): LEGUP_F_func_3_BB__11_23 default: LEGUP_function_call_22
state: LEGUP_F_func_3_BB__11_23
   %23 = and i8 %22, 1 (endState: LEGUP_F_func_3_BB__11_23)
   %24 = load i32* @g_6, align 4 (endState: LEGUP_F_func_3_BB__11_25)
   Transition: default: LEGUP_F_func_3_BB__11_24
state: LEGUP_F_func_3_BB__11_24
   Transition: default: LEGUP_F_func_3_BB__11_25
state: LEGUP_F_func_3_BB__11_25
   %25 = trunc i32 %24 to i8 (endState: LEGUP_F_func_3_BB__11_25)
   Transition: default: LEGUP_function_call_26
state: LEGUP_function_call_26
   %26 = call signext i8 @safe_add_func_int8_t_s_s(i8 signext %23, i8 signext %25) #3 (endState: LEGUP_function_call_26)
   Transition: if (safe_add_func_int8_t_s_s_finish_final): LEGUP_F_func_3_BB__11_27 default: LEGUP_function_call_26
state: LEGUP_F_func_3_BB__11_27
   %27 = icmp eq i8 %26, 0 (endState: LEGUP_F_func_3_BB__11_27)
   br i1 %27, label %32, label %28
   Transition: if (%27): LEGUP_F_func_3_BB__32_31 default: LEGUP_F_func_3_BB__28_28
state: LEGUP_F_func_3_BB__28_28
   %29 = getelementptr inbounds [7 x i32]* %l_10, i32 0, i32 4 (endState: LEGUP_F_func_3_BB__28_28)
   %30 = load i32* %29, align 4 (endState: LEGUP_F_func_3_BB__28_30)
   Transition: default: LEGUP_F_func_3_BB__28_29
state: LEGUP_F_func_3_BB__28_29
   Transition: default: LEGUP_F_func_3_BB__28_30
state: LEGUP_F_func_3_BB__28_30
   %31 = icmp ne i32 %30, 0 (endState: LEGUP_F_func_3_BB__28_30)
   br label %32
   Transition: default: LEGUP_F_func_3_BB__32_31
state: LEGUP_F_func_3_BB__32_31
   %33 = phi i1 [ false, %11 ], [ %31, %28 ] (endState: LEGUP_F_func_3_BB__32_31)
   %34 = zext i1 %33 to i8 (endState: LEGUP_F_func_3_BB__32_31)
   %40 = zext i8 %.01 to i32 (endState: LEGUP_F_func_3_BB__32_31)
   %43 = getelementptr inbounds [7 x i8]* %l_41, i32 0, i32 4 (endState: LEGUP_F_func_3_BB__32_31)
   %47 = trunc i32 %l_42.0 to i8 (endState: LEGUP_F_func_3_BB__32_31)
   %50 = getelementptr inbounds [7 x i32]* %l_10, i32 0, i32 5 (endState: LEGUP_F_func_3_BB__32_31)
   Transition: default: LEGUP_function_call_32
state: LEGUP_function_call_32
   %35 = call zeroext i8 @safe_add_func_uint8_t_u_u(i8 zeroext %34, i8 zeroext -100) #3 (endState: LEGUP_function_call_32)
   Transition: if (safe_add_func_uint8_t_u_u_finish_final): LEGUP_F_func_3_BB__32_33 default: LEGUP_function_call_32
state: LEGUP_F_func_3_BB__32_33
   Transition: default: LEGUP_function_call_34
state: LEGUP_function_call_34
   %36 = call zeroext i16 @safe_rshift_func_uint16_t_u_s(i16 zeroext -7, i32 0) #3 (endState: LEGUP_function_call_34)
   Transition: if (safe_rshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_3_BB__32_35 default: LEGUP_function_call_34
state: LEGUP_F_func_3_BB__32_35
   %37 = load i16* @g_8, align 2 (endState: LEGUP_F_func_3_BB__32_37)
   %44 = load i8* %43, align 1 (endState: LEGUP_F_func_3_BB__32_37)
   Transition: default: LEGUP_F_func_3_BB__32_36
state: LEGUP_F_func_3_BB__32_36
   %46 = load i8* @g_40, align 1 (endState: LEGUP_F_func_3_BB__32_38)
   Transition: default: LEGUP_F_func_3_BB__32_37
state: LEGUP_F_func_3_BB__32_37
   %38 = icmp ugt i16 %36, %37 (endState: LEGUP_F_func_3_BB__32_37)
   %39 = zext i1 %38 to i32 (endState: LEGUP_F_func_3_BB__32_37)
   %41 = icmp ule i32 %39, %40 (endState: LEGUP_F_func_3_BB__32_37)
   %42 = zext i1 %41 to i8 (endState: LEGUP_F_func_3_BB__32_37)
   %45 = or i8 %44, %42 (endState: LEGUP_F_func_3_BB__32_37)
   store i8 %45, i8* %43, align 1 (endState: LEGUP_F_func_3_BB__32_38)
   Transition: default: LEGUP_F_func_3_BB__32_38
state: LEGUP_F_func_3_BB__32_38
   Transition: default: LEGUP_function_call_39
state: LEGUP_function_call_39
   %48 = call zeroext i8 @safe_sub_func_uint8_t_u_u(i8 zeroext %46, i8 zeroext %47) #3 (endState: LEGUP_function_call_39)
   Transition: if (safe_sub_func_uint8_t_u_u_finish_final): LEGUP_F_func_3_BB__32_40 default: LEGUP_function_call_39
state: LEGUP_F_func_3_BB__32_40
   %49 = zext i8 %48 to i16 (endState: LEGUP_F_func_3_BB__32_40)
   %51 = load i32* %50, align 4 (endState: LEGUP_F_func_3_BB__32_42)
   Transition: default: LEGUP_F_func_3_BB__32_41
state: LEGUP_F_func_3_BB__32_41
   Transition: default: LEGUP_F_func_3_BB__32_42
state: LEGUP_F_func_3_BB__32_42
   Transition: default: LEGUP_function_call_43
state: LEGUP_function_call_43
   %52 = call zeroext i16 @safe_rshift_func_uint16_t_u_u(i16 zeroext %49, i32 %51) #3 (endState: LEGUP_function_call_43)
   Transition: if (safe_rshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_3_BB__32_44 default: LEGUP_function_call_43
state: LEGUP_F_func_3_BB__32_44
   %53 = zext i16 %52 to i32 (endState: LEGUP_F_func_3_BB__32_44)
   Transition: default: LEGUP_function_call_45
state: LEGUP_function_call_45
   %54 = call zeroext i16 @safe_lshift_func_uint16_t_u_s(i16 zeroext %18, i32 %53) #3 (endState: LEGUP_function_call_45)
   Transition: if (safe_lshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_3_BB__32_46 default: LEGUP_function_call_45
state: LEGUP_F_func_3_BB__32_46
   %55 = zext i16 %54 to i32 (endState: LEGUP_F_func_3_BB__32_46)
   Transition: default: LEGUP_function_call_47
state: LEGUP_function_call_47
   %56 = call i32 @safe_div_func_uint32_t_u_u(i32 %55, i32 1) #3 (endState: LEGUP_function_call_47)
   Transition: if (safe_div_func_uint32_t_u_u_finish_final): LEGUP_F_func_3_BB__32_48 default: LEGUP_function_call_47
state: LEGUP_F_func_3_BB__32_48
   %57 = trunc i32 %56 to i16 (endState: LEGUP_F_func_3_BB__32_48)
   Transition: default: LEGUP_function_call_49
state: LEGUP_function_call_49
   %58 = call zeroext i16 @safe_rshift_func_uint16_t_u_u(i16 zeroext %57, i32 15) #3 (endState: LEGUP_function_call_49)
   Transition: if (safe_rshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_3_BB__32_50 default: LEGUP_function_call_49
state: LEGUP_F_func_3_BB__32_50
   %59 = load i32* getelementptr inbounds ([5 x [10 x i32]]* @g_7, i32 0, i32 0, i32 6), align 4 (endState: LEGUP_F_func_3_BB__32_52)
   Transition: default: LEGUP_F_func_3_BB__32_51
state: LEGUP_F_func_3_BB__32_51
   Transition: default: LEGUP_F_func_3_BB__32_52
state: LEGUP_F_func_3_BB__32_52
   %60 = trunc i32 %59 to i8 (endState: LEGUP_F_func_3_BB__32_52)
   Transition: default: LEGUP_function_call_53
state: LEGUP_function_call_53
   %61 = call i32 @func_15(i16 signext %12, i8 signext %14, i16 signext %58, i8 zeroext %60) #3 (endState: LEGUP_function_call_53)
   Transition: if (func_15_finish_final): LEGUP_F_func_3_BB__32_54 default: LEGUP_function_call_53
state: LEGUP_F_func_3_BB__32_54
   br label %62
   Transition: default: LEGUP_F_func_3_BB__62_55
state: LEGUP_F_func_3_BB__62_55
   %63 = load i8* @g_40, align 1 (endState: LEGUP_F_func_3_BB__62_57)
   Transition: default: LEGUP_F_func_3_BB__62_56
state: LEGUP_F_func_3_BB__62_56
   Transition: default: LEGUP_F_func_3_BB__62_57
state: LEGUP_F_func_3_BB__62_57
   Transition: default: LEGUP_function_call_58
state: LEGUP_function_call_58
   %64 = call signext i16 @func_13(i8 zeroext %63) #3 (endState: LEGUP_function_call_58)
   Transition: if (func_13_finish_final): LEGUP_F_func_3_BB__62_59 default: LEGUP_function_call_58
state: LEGUP_F_func_3_BB__62_59
   Transition: default: LEGUP_function_call_60
state: LEGUP_function_call_60
   %65 = call signext i16 @safe_mod_func_int16_t_s_s(i16 signext %64, i16 signext %4) #3 (endState: LEGUP_function_call_60)
   Transition: if (safe_mod_func_int16_t_s_s_finish_final): LEGUP_F_func_3_BB__62_61 default: LEGUP_function_call_60
state: LEGUP_F_func_3_BB__62_61
   %66 = trunc i16 %65 to i8 (endState: LEGUP_F_func_3_BB__62_61)
   %67 = load i8* @g_55, align 1 (endState: LEGUP_F_func_3_BB__62_63)
   Transition: default: LEGUP_F_func_3_BB__62_62
state: LEGUP_F_func_3_BB__62_62
   Transition: default: LEGUP_F_func_3_BB__62_63
state: LEGUP_F_func_3_BB__62_63
   %68 = xor i8 %67, %66 (endState: LEGUP_F_func_3_BB__62_63)
   store i8 %68, i8* @g_55, align 1 (endState: LEGUP_F_func_3_BB__62_64)
   Transition: default: LEGUP_F_func_3_BB__62_64
state: LEGUP_F_func_3_BB__62_64
   br label %69
   Transition: default: LEGUP_F_func_3_BB__69_65
state: LEGUP_F_func_3_BB__69_65
   %70 = load i32* @g_6, align 4 (endState: LEGUP_F_func_3_BB__69_67)
   Transition: default: LEGUP_F_func_3_BB__69_66
state: LEGUP_F_func_3_BB__69_66
   Transition: default: LEGUP_F_func_3_BB__69_67
state: LEGUP_F_func_3_BB__69_67
   %71 = add i32 %70, 1 (endState: LEGUP_F_func_3_BB__69_67)
   br label %8
   Transition: default: LEGUP_F_func_3_BB__8_11
state: LEGUP_F_func_3_BB__72_68
   br label %73
   Transition: default: LEGUP_F_func_3_BB__73_69
state: LEGUP_F_func_3_BB__73_69
   %indvar = phi i32 [ %indvar.next, %108 ], [ 0, %72 ] (endState: LEGUP_F_func_3_BB__73_69)
   %l_42.1 = phi i32 [ %114, %108 ], [ %l_42.0, %72 ] (endState: LEGUP_F_func_3_BB__73_69)
   %exitcond = icmp eq i32 %indvar, 5 (endState: LEGUP_F_func_3_BB__73_69)
   br i1 %exitcond, label %115, label %74
   Transition: if (%exitcond): LEGUP_F_func_3_BB__115_100 default: LEGUP_F_func_3_BB__74_70
state: LEGUP_F_func_3_BB__74_70
   %75 = load volatile i32* getelementptr inbounds ([4 x i32]* @g_49, i32 0, i32 3), align 4 (endState: LEGUP_F_func_3_BB__74_72)
   %77 = and i32 %indvar, 20 (endState: LEGUP_F_func_3_BB__74_70)
   store i32 %77, i32* @g_64, align 4 (endState: LEGUP_F_func_3_BB__74_71)
   %78 = icmp eq i32 %77, 0 (endState: LEGUP_F_func_3_BB__74_70)
   Transition: default: LEGUP_F_func_3_BB__74_71
state: LEGUP_F_func_3_BB__74_71
   Transition: default: LEGUP_F_func_3_BB__74_72
state: LEGUP_F_func_3_BB__74_72
   %76 = trunc i32 %75 to i16 (endState: LEGUP_F_func_3_BB__74_72)
   br i1 %78, label %82, label %79
   Transition: if (%78): LEGUP_F_func_3_BB__82_76 default: LEGUP_F_func_3_BB__79_73
state: LEGUP_F_func_3_BB__79_73
   %80 = load i8* @g_55, align 1 (endState: LEGUP_F_func_3_BB__79_75)
   Transition: default: LEGUP_F_func_3_BB__79_74
state: LEGUP_F_func_3_BB__79_74
   Transition: default: LEGUP_F_func_3_BB__79_75
state: LEGUP_F_func_3_BB__79_75
   %81 = icmp eq i8 %80, 0 (endState: LEGUP_F_func_3_BB__79_75)
   br i1 %81, label %82, label %85
   Transition: if (%81): LEGUP_F_func_3_BB__82_76 default: LEGUP_F_func_3_BB__85_79
state: LEGUP_F_func_3_BB__82_76
   %83 = load i32* getelementptr inbounds ([5 x [10 x i32]]* @g_7, i32 0, i32 2, i32 5), align 4 (endState: LEGUP_F_func_3_BB__82_78)
   Transition: default: LEGUP_F_func_3_BB__82_77
state: LEGUP_F_func_3_BB__82_77
   Transition: default: LEGUP_F_func_3_BB__82_78
state: LEGUP_F_func_3_BB__82_78
   %84 = icmp ne i32 %83, 0 (endState: LEGUP_F_func_3_BB__82_78)
   br label %85
   Transition: default: LEGUP_F_func_3_BB__85_79
state: LEGUP_F_func_3_BB__85_79
   %86 = phi i1 [ true, %79 ], [ %84, %82 ] (endState: LEGUP_F_func_3_BB__85_79)
   %87 = icmp eq i32 %indvar1, 4 (endState: LEGUP_F_func_3_BB__85_79)
   br i1 %87, label %88, label %89
   Transition: if (%87): LEGUP_F_func_3_BB__88_80 default: LEGUP_F_func_3_BB__89_81
state: LEGUP_F_func_3_BB__88_80
   br label %89
   Transition: default: LEGUP_F_func_3_BB__89_81
state: LEGUP_F_func_3_BB__89_81
   %90 = icmp sgt i32 %.0, 0 (endState: LEGUP_F_func_3_BB__89_81)
   %91 = zext i1 %90 to i32 (endState: LEGUP_F_func_3_BB__89_81)
   %92 = icmp ult i32 %91, %indvar (endState: LEGUP_F_func_3_BB__89_81)
   Transition: default: LEGUP_F_func_3_BB__89_82
state: LEGUP_F_func_3_BB__89_82
   %93 = xor i1 %86, %92 (endState: LEGUP_F_func_3_BB__89_82)
   %94 = zext i1 %93 to i16 (endState: LEGUP_F_func_3_BB__89_82)
   Transition: default: LEGUP_function_call_83
state: LEGUP_function_call_83
   %95 = call signext i16 @safe_mod_func_int16_t_s_s(i16 signext %76, i16 signext %94) #3 (endState: LEGUP_function_call_83)
   Transition: if (safe_mod_func_int16_t_s_s_finish_final): LEGUP_F_func_3_BB__89_84 default: LEGUP_function_call_83
state: LEGUP_F_func_3_BB__89_84
   %96 = load volatile i32* getelementptr inbounds ([4 x i32]* @g_49, i32 0, i32 3), align 4 (endState: LEGUP_F_func_3_BB__89_86)
   Transition: default: LEGUP_F_func_3_BB__89_85
state: LEGUP_F_func_3_BB__89_85
   Transition: default: LEGUP_F_func_3_BB__89_86
state: LEGUP_F_func_3_BB__89_86
   br i1 true, label %98, label %97
   Transition: if (true): LEGUP_F_func_3_BB__98_88 default: LEGUP_F_func_3_BB__97_87
state: LEGUP_F_func_3_BB__97_87
   br label %98
   Transition: default: LEGUP_F_func_3_BB__98_88
state: LEGUP_F_func_3_BB__98_88
   Transition: default: LEGUP_function_call_89
state: LEGUP_function_call_89
   %99 = call i32 @safe_div_func_uint32_t_u_u(i32 1, i32 -3) #3 (endState: LEGUP_function_call_89)
   Transition: if (safe_div_func_uint32_t_u_u_finish_final): LEGUP_F_func_3_BB__98_90 default: LEGUP_function_call_89
state: LEGUP_F_func_3_BB__98_90
   %100 = trunc i32 %99 to i8 (endState: LEGUP_F_func_3_BB__98_90)
   Transition: default: LEGUP_function_call_91
state: LEGUP_function_call_91
   %101 = call zeroext i8 @safe_lshift_func_uint8_t_u_s(i8 zeroext %100, i32 7) #3 (endState: LEGUP_function_call_91)
   Transition: if (safe_lshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_3_BB__98_92 default: LEGUP_function_call_91
state: LEGUP_F_func_3_BB__98_92
   %102 = zext i8 %101 to i32 (endState: LEGUP_F_func_3_BB__98_92)
   %103 = and i32 %.0, %102 (endState: LEGUP_F_func_3_BB__98_92)
   %104 = trunc i32 %103 to i8 (endState: LEGUP_F_func_3_BB__98_92)
   %105 = load i16* @g_8, align 2 (endState: LEGUP_F_func_3_BB__98_94)
   Transition: default: LEGUP_F_func_3_BB__98_93
state: LEGUP_F_func_3_BB__98_93
   Transition: default: LEGUP_F_func_3_BB__98_94
state: LEGUP_F_func_3_BB__98_94
   %106 = trunc i16 %105 to i8 (endState: LEGUP_F_func_3_BB__98_94)
   Transition: default: LEGUP_function_call_95
state: LEGUP_function_call_95
   %107 = call zeroext i8 @safe_mul_func_uint8_t_u_u(i8 zeroext %104, i8 zeroext %106) #3 (endState: LEGUP_function_call_95)
   Transition: if (safe_mul_func_uint8_t_u_u_finish_final): LEGUP_F_func_3_BB__98_96 default: LEGUP_function_call_95
state: LEGUP_F_func_3_BB__98_96
   br label %108
   Transition: default: LEGUP_F_func_3_BB__108_97
state: LEGUP_F_func_3_BB__108_97
   %109 = zext i8 %107 to i32 (endState: LEGUP_F_func_3_BB__108_97)
   %110 = getelementptr inbounds [7 x i8]* %l_41, i32 0, i32 4 (endState: LEGUP_F_func_3_BB__108_97)
   %111 = load i8* %110, align 1 (endState: LEGUP_F_func_3_BB__108_99)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_func_3_BB__108_97)
   Transition: default: LEGUP_F_func_3_BB__108_98
state: LEGUP_F_func_3_BB__108_98
   Transition: default: LEGUP_F_func_3_BB__108_99
state: LEGUP_F_func_3_BB__108_99
   %112 = sext i8 %111 to i32 (endState: LEGUP_F_func_3_BB__108_99)
   %113 = and i32 %109, %112 (endState: LEGUP_F_func_3_BB__108_99)
   %114 = and i32 %l_42.1, %113 (endState: LEGUP_F_func_3_BB__108_99)
   br label %73
   Transition: default: LEGUP_F_func_3_BB__73_69
state: LEGUP_F_func_3_BB__115_100
   br label %116
   Transition: default: LEGUP_F_func_3_BB__116_101
state: LEGUP_F_func_3_BB__116_101
   %indvar.next2 = add i32 %indvar1, 1 (endState: LEGUP_F_func_3_BB__116_101)
   br label %3
   Transition: default: LEGUP_F_func_3_BB__3_6
state: LEGUP_F_func_3_BB__117_102
   %118 = getelementptr inbounds [9 x [8 x [2 x i16]]]* %l_67, i32 0, i32 5, i32 6, i32 0 (endState: LEGUP_F_func_3_BB__117_102)
   %119 = load i16* %118, align 2 (endState: LEGUP_F_func_3_BB__117_104)
   Transition: default: LEGUP_F_func_3_BB__117_103
state: LEGUP_F_func_3_BB__117_103
   Transition: default: LEGUP_F_func_3_BB__117_104
state: LEGUP_F_func_3_BB__117_104
   ret i16 %119
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 5
Basic Block: %3 Num States: 1
Basic Block: %5 Num States: 4
Basic Block: %8 Num States: 2
Basic Block: %10 Num States: 1
Basic Block: %11 Num States: 14
Basic Block: %28 Num States: 3
Basic Block: %32 Num States: 24
Basic Block: %62 Num States: 10
Basic Block: %69 Num States: 3
Basic Block: %72 Num States: 1
Basic Block: %73 Num States: 1
Basic Block: %74 Num States: 3
Basic Block: %79 Num States: 3
Basic Block: %82 Num States: 3
Basic Block: %85 Num States: 1
Basic Block: %88 Num States: 1
Basic Block: %89 Num States: 6
Basic Block: %97 Num States: 1
Basic Block: %98 Num States: 9
Basic Block: %108 Num States: 3
Basic Block: %115 Num States: 1
Basic Block: %116 Num States: 1
Basic Block: %117 Num States: 3
End Function: func_3
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_1_BB__0_1
   %l_82 = alloca [5 x [1 x i32]], align 4 (endState: LEGUP_F_func_1_BB__0_1)
   %1 = bitcast [5 x [1 x i32]]* %l_82 to i8* (endState: LEGUP_F_func_1_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_4(i8* %1, i8* bitcast ([5 x [1 x i32]]* @func_1.l_82 to i8*), i32 20) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_1_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_func_1_BB__0_3
   %2 = load volatile i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__0_5)
   Transition: default: LEGUP_F_func_1_BB__0_4
state: LEGUP_F_func_1_BB__0_4
   Transition: default: LEGUP_F_func_1_BB__0_5
state: LEGUP_F_func_1_BB__0_5
   %3 = or i32 %2, 405055686 (endState: LEGUP_F_func_1_BB__0_5)
   store volatile i32 %3, i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__0_6)
   Transition: default: LEGUP_F_func_1_BB__0_6
state: LEGUP_F_func_1_BB__0_6
   %4 = load volatile i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__0_8)
   %5 = load i32* @g_6, align 4 (endState: LEGUP_F_func_1_BB__0_8)
   Transition: default: LEGUP_F_func_1_BB__0_7
state: LEGUP_F_func_1_BB__0_7
   Transition: default: LEGUP_F_func_1_BB__0_8
state: LEGUP_F_func_1_BB__0_8
   %6 = trunc i32 %5 to i8 (endState: LEGUP_F_func_1_BB__0_8)
   Transition: default: LEGUP_function_call_9
state: LEGUP_function_call_9
   %7 = call signext i16 @func_3(i32 %4, i8 zeroext %6) #3 (endState: LEGUP_function_call_9)
   Transition: if (func_3_finish_final): LEGUP_F_func_1_BB__0_10 default: LEGUP_function_call_9
state: LEGUP_F_func_1_BB__0_10
   %8 = load i16* @g_78, align 2 (endState: LEGUP_F_func_1_BB__0_12)
   Transition: default: LEGUP_F_func_1_BB__0_11
state: LEGUP_F_func_1_BB__0_11
   Transition: default: LEGUP_F_func_1_BB__0_12
state: LEGUP_F_func_1_BB__0_12
   %9 = icmp eq i16 %8, 0 (endState: LEGUP_F_func_1_BB__0_12)
   br i1 %9, label %10, label %11
   Transition: if (%9): LEGUP_F_func_1_BB__10_13 default: LEGUP_F_func_1_BB__11_14
state: LEGUP_F_func_1_BB__10_13
   br label %11
   Transition: default: LEGUP_F_func_1_BB__11_14
state: LEGUP_F_func_1_BB__11_14
   %15 = getelementptr inbounds [5 x [1 x i32]]* %l_82, i32 0, i32 1, i32 0 (endState: LEGUP_F_func_1_BB__11_14)
   %26 = getelementptr inbounds [5 x [1 x i32]]* %l_82, i32 0, i32 2, i32 0 (endState: LEGUP_F_func_1_BB__11_14)
   Transition: default: LEGUP_function_call_15
state: LEGUP_function_call_15
   %12 = call zeroext i8 @safe_div_func_uint8_t_u_u(i8 zeroext 1, i8 zeroext 1) #3 (endState: LEGUP_function_call_15)
   Transition: if (safe_div_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__11_16 default: LEGUP_function_call_15
state: LEGUP_F_func_1_BB__11_16
   Transition: default: LEGUP_function_call_17
state: LEGUP_function_call_17
   %13 = call signext i8 @safe_sub_func_int8_t_s_s(i8 signext 1, i8 signext 6) #3 (endState: LEGUP_function_call_17)
   Transition: if (safe_sub_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__11_18 default: LEGUP_function_call_17
state: LEGUP_F_func_1_BB__11_18
   %14 = sext i8 %13 to i32 (endState: LEGUP_F_func_1_BB__11_18)
   %16 = load i32* %15, align 4 (endState: LEGUP_F_func_1_BB__11_20)
   Transition: default: LEGUP_F_func_1_BB__11_19
state: LEGUP_F_func_1_BB__11_19
   Transition: default: LEGUP_F_func_1_BB__11_20
state: LEGUP_F_func_1_BB__11_20
   %17 = xor i32 %16, %14 (endState: LEGUP_F_func_1_BB__11_20)
   store i32 %17, i32* %15, align 4 (endState: LEGUP_F_func_1_BB__11_21)
   %18 = trunc i32 %17 to i16 (endState: LEGUP_F_func_1_BB__11_20)
   Transition: default: LEGUP_F_func_1_BB__11_21
state: LEGUP_F_func_1_BB__11_21
   Transition: default: LEGUP_function_call_22
state: LEGUP_function_call_22
   %19 = call signext i16 @safe_div_func_int16_t_s_s(i16 signext -490, i16 signext %18) #3 (endState: LEGUP_function_call_22)
   Transition: if (safe_div_func_int16_t_s_s_finish_final): LEGUP_F_func_1_BB__11_23 default: LEGUP_function_call_22
state: LEGUP_F_func_1_BB__11_23
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   %20 = call zeroext i16 @safe_add_func_uint16_t_u_u(i16 zeroext %19, i16 zeroext 4) #3 (endState: LEGUP_function_call_24)
   Transition: if (safe_add_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__11_25 default: LEGUP_function_call_24
state: LEGUP_F_func_1_BB__11_25
   %21 = load i16* @g_78, align 2 (endState: LEGUP_F_func_1_BB__11_27)
   Transition: default: LEGUP_F_func_1_BB__11_26
state: LEGUP_F_func_1_BB__11_26
   Transition: default: LEGUP_F_func_1_BB__11_27
state: LEGUP_F_func_1_BB__11_27
   %22 = or i16 %20, %21 (endState: LEGUP_F_func_1_BB__11_27)
   %23 = trunc i16 %22 to i8 (endState: LEGUP_F_func_1_BB__11_27)
   %24 = trunc i16 %21 to i8 (endState: LEGUP_F_func_1_BB__11_27)
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   %25 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %23, i8 signext %24) #3 (endState: LEGUP_function_call_28)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__11_29 default: LEGUP_function_call_28
state: LEGUP_F_func_1_BB__11_29
   %27 = load i32* %26, align 4 (endState: LEGUP_F_func_1_BB__11_31)
   Transition: default: LEGUP_F_func_1_BB__11_30
state: LEGUP_F_func_1_BB__11_30
   Transition: default: LEGUP_F_func_1_BB__11_31
state: LEGUP_F_func_1_BB__11_31
   ret i32 %27
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 12
Basic Block: %10 Num States: 1
Basic Block: %11 Num States: 18
End Function: func_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @platform_main_begin() #3 (endState: LEGUP_function_call_2)
   Transition: if (platform_main_begin_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_gentab() #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_gentab_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %1 = call i32 @func_1() #3 (endState: LEGUP_function_call_6)
   Transition: if (func_1_finish_final): LEGUP_F_main_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB__0_7
   %2 = load volatile i32* @g_2, align 4 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   %3 = zext i32 %2 to i64 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @transparent_crc(i64 %3, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_10)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB__0_11
   %4 = load i32* @g_6, align 4 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_F_main_BB__0_12
state: LEGUP_F_main_BB__0_12
   Transition: default: LEGUP_F_main_BB__0_13
state: LEGUP_F_main_BB__0_13
   %5 = zext i32 %4 to i64 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @transparent_crc(i64 %5, i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_14)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_main_BB__0_15
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__6_16
   %7 = phi i32 [ 0, %0 ], [ %20, %19 ] (endState: LEGUP_F_main_BB__6_16)
   %exitcond3 = icmp eq i32 %7, 5 (endState: LEGUP_F_main_BB__6_16)
   br i1 %exitcond3, label %21, label %8
   Transition: if (%exitcond3): LEGUP_F_main_BB__21_29 default: LEGUP_F_main_BB__8_17
state: LEGUP_F_main_BB__8_17
   br label %9
   Transition: default: LEGUP_F_main_BB__9_18
state: LEGUP_F_main_BB__9_18
   %10 = phi i32 [ 0, %8 ], [ %17, %16 ] (endState: LEGUP_F_main_BB__9_18)
   %exitcond1 = icmp eq i32 %10, 10 (endState: LEGUP_F_main_BB__9_18)
   br i1 %exitcond1, label %18, label %11
   Transition: if (%exitcond1): LEGUP_F_main_BB__18_27 default: LEGUP_F_main_BB__11_19
state: LEGUP_F_main_BB__11_19
   %scevgep2 = getelementptr [5 x [10 x i32]]* @g_7, i32 0, i32 %7, i32 %10 (endState: LEGUP_F_main_BB__11_19)
   %12 = load i32* %scevgep2, align 4 (endState: LEGUP_F_main_BB__11_21)
   Transition: default: LEGUP_F_main_BB__11_20
state: LEGUP_F_main_BB__11_20
   Transition: default: LEGUP_F_main_BB__11_21
state: LEGUP_F_main_BB__11_21
   %13 = sext i32 %12 to i64 (endState: LEGUP_F_main_BB__11_21)
   Transition: default: LEGUP_function_call_22
state: LEGUP_function_call_22
   call void @transparent_crc(i64 %13, i8* getelementptr inbounds ([10 x i8]* @.str2, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_22)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__11_23 default: LEGUP_function_call_22
state: LEGUP_F_main_BB__11_23
   br i1 false, label %14, label %15
   Transition: if (false): LEGUP_F_main_BB__14_24 default: LEGUP_F_main_BB__15_25
state: LEGUP_F_main_BB__14_24
   br label %15
   Transition: default: LEGUP_F_main_BB__15_25
state: LEGUP_F_main_BB__15_25
   br label %16
   Transition: default: LEGUP_F_main_BB__16_26
state: LEGUP_F_main_BB__16_26
   %17 = add nsw i32 %10, 1 (endState: LEGUP_F_main_BB__16_26)
   br label %9
   Transition: default: LEGUP_F_main_BB__9_18
state: LEGUP_F_main_BB__18_27
   br label %19
   Transition: default: LEGUP_F_main_BB__19_28
state: LEGUP_F_main_BB__19_28
   %20 = add nsw i32 %7, 1 (endState: LEGUP_F_main_BB__19_28)
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__21_29
   %22 = load i16* @g_8, align 2 (endState: LEGUP_F_main_BB__21_31)
   Transition: default: LEGUP_F_main_BB__21_30
state: LEGUP_F_main_BB__21_30
   Transition: default: LEGUP_F_main_BB__21_31
state: LEGUP_F_main_BB__21_31
   %23 = zext i16 %22 to i64 (endState: LEGUP_F_main_BB__21_31)
   Transition: default: LEGUP_function_call_32
state: LEGUP_function_call_32
   call void @transparent_crc(i64 %23, i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_32)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__21_33 default: LEGUP_function_call_32
state: LEGUP_F_main_BB__21_33
   %24 = load i8* @g_40, align 1 (endState: LEGUP_F_main_BB__21_35)
   Transition: default: LEGUP_F_main_BB__21_34
state: LEGUP_F_main_BB__21_34
   Transition: default: LEGUP_F_main_BB__21_35
state: LEGUP_F_main_BB__21_35
   %25 = sext i8 %24 to i64 (endState: LEGUP_F_main_BB__21_35)
   Transition: default: LEGUP_function_call_36
state: LEGUP_function_call_36
   call void @transparent_crc(i64 %25, i8* getelementptr inbounds ([5 x i8]* @.str5, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_36)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__21_37 default: LEGUP_function_call_36
state: LEGUP_F_main_BB__21_37
   br label %26
   Transition: default: LEGUP_F_main_BB__26_38
state: LEGUP_F_main_BB__26_38
   %27 = phi i32 [ 0, %21 ], [ %34, %33 ] (endState: LEGUP_F_main_BB__26_38)
   %exitcond = icmp eq i32 %27, 4 (endState: LEGUP_F_main_BB__26_38)
   br i1 %exitcond, label %35, label %28
   Transition: if (%exitcond): LEGUP_F_main_BB__35_47 default: LEGUP_F_main_BB__28_39
state: LEGUP_F_main_BB__28_39
   %scevgep = getelementptr [4 x i32]* @g_49, i32 0, i32 %27 (endState: LEGUP_F_main_BB__28_39)
   %29 = load volatile i32* %scevgep, align 4 (endState: LEGUP_F_main_BB__28_41)
   Transition: default: LEGUP_F_main_BB__28_40
state: LEGUP_F_main_BB__28_40
   Transition: default: LEGUP_F_main_BB__28_41
state: LEGUP_F_main_BB__28_41
   %30 = zext i32 %29 to i64 (endState: LEGUP_F_main_BB__28_41)
   Transition: default: LEGUP_function_call_42
state: LEGUP_function_call_42
   call void @transparent_crc(i64 %30, i8* getelementptr inbounds ([8 x i8]* @.str6, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_42)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__28_43 default: LEGUP_function_call_42
state: LEGUP_F_main_BB__28_43
   br i1 false, label %31, label %32
   Transition: if (false): LEGUP_F_main_BB__31_44 default: LEGUP_F_main_BB__32_45
state: LEGUP_F_main_BB__31_44
   br label %32
   Transition: default: LEGUP_F_main_BB__32_45
state: LEGUP_F_main_BB__32_45
   br label %33
   Transition: default: LEGUP_F_main_BB__33_46
state: LEGUP_F_main_BB__33_46
   %34 = add nsw i32 %27, 1 (endState: LEGUP_F_main_BB__33_46)
   br label %26
   Transition: default: LEGUP_F_main_BB__26_38
state: LEGUP_F_main_BB__35_47
   %36 = load i8* @g_55, align 1 (endState: LEGUP_F_main_BB__35_49)
   Transition: default: LEGUP_F_main_BB__35_48
state: LEGUP_F_main_BB__35_48
   Transition: default: LEGUP_F_main_BB__35_49
state: LEGUP_F_main_BB__35_49
   %37 = zext i8 %36 to i64 (endState: LEGUP_F_main_BB__35_49)
   Transition: default: LEGUP_function_call_50
state: LEGUP_function_call_50
   call void @transparent_crc(i64 %37, i8* getelementptr inbounds ([5 x i8]* @.str8, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_50)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__35_51 default: LEGUP_function_call_50
state: LEGUP_F_main_BB__35_51
   %38 = load i32* @g_64, align 4 (endState: LEGUP_F_main_BB__35_53)
   Transition: default: LEGUP_F_main_BB__35_52
state: LEGUP_F_main_BB__35_52
   Transition: default: LEGUP_F_main_BB__35_53
state: LEGUP_F_main_BB__35_53
   %39 = sext i32 %38 to i64 (endState: LEGUP_F_main_BB__35_53)
   Transition: default: LEGUP_function_call_54
state: LEGUP_function_call_54
   call void @transparent_crc(i64 %39, i8* getelementptr inbounds ([5 x i8]* @.str9, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_54)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__35_55 default: LEGUP_function_call_54
state: LEGUP_F_main_BB__35_55
   %40 = load i16* @g_78, align 2 (endState: LEGUP_F_main_BB__35_57)
   Transition: default: LEGUP_F_main_BB__35_56
state: LEGUP_F_main_BB__35_56
   Transition: default: LEGUP_F_main_BB__35_57
state: LEGUP_F_main_BB__35_57
   %41 = zext i16 %40 to i64 (endState: LEGUP_F_main_BB__35_57)
   Transition: default: LEGUP_function_call_58
state: LEGUP_function_call_58
   call void @transparent_crc(i64 %41, i8* getelementptr inbounds ([5 x i8]* @.str10, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_58)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__35_59 default: LEGUP_function_call_58
state: LEGUP_F_main_BB__35_59
   %42 = load i32* @crc32_context, align 4 (endState: LEGUP_F_main_BB__35_61)
   Transition: default: LEGUP_F_main_BB__35_60
state: LEGUP_F_main_BB__35_60
   Transition: default: LEGUP_F_main_BB__35_61
state: LEGUP_F_main_BB__35_61
   %43 = xor i32 %42, -1 (endState: LEGUP_F_main_BB__35_61)
   Transition: default: LEGUP_function_call_62
state: LEGUP_function_call_62
   %44 = call i32 @platform_main_end(i32 %43, i32 0) #3 (endState: LEGUP_function_call_62)
   Transition: if (platform_main_end_finish_final): LEGUP_F_main_BB__35_63 default: LEGUP_function_call_62
state: LEGUP_F_main_BB__35_63
   ret i32 %44
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 15
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %11 Num States: 5
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
Basic Block: %19 Num States: 1
Basic Block: %21 Num States: 9
Basic Block: %26 Num States: 1
Basic Block: %28 Num States: 5
Basic Block: %31 Num States: 1
Basic Block: %32 Num States: 1
Basic Block: %33 Num States: 1
Basic Block: %35 Num States: 17
End Function: main
--------------------------------------------------------------------------------

