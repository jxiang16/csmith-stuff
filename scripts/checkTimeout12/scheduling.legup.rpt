//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Jun 13 18:44:46 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_begin
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_begin_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_begin_BB__0_1
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_begin
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_gentab
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_crc32_gentab_BB__1_1 default: LEGUP_0
state: LEGUP_F_crc32_gentab_BB__1_1
   %2 = phi i32 [ 0, %0 ], [ %17, %16 ] (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %scevgep = getelementptr [256 x i32]* @crc32_tab, i32 0, i32 %2 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %exitcond1 = icmp eq i32 %2, 256 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   br i1 %exitcond1, label %18, label %3
   Transition: if (%exitcond1): LEGUP_F_crc32_gentab_BB__18_12 default: LEGUP_F_crc32_gentab_BB__3_2
state: LEGUP_F_crc32_gentab_BB__3_2
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__4_3
   %indvar = phi i32 [ %indvar.next, %14 ], [ 0, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %crc.0 = phi i32 [ %crc.1, %14 ], [ %2, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %exitcond = icmp eq i32 %indvar, 8 (endState: LEGUP_F_crc32_gentab_BB__4_3)
   br i1 %exitcond, label %15, label %5
   Transition: if (%exitcond): LEGUP_F_crc32_gentab_BB__15_9 default: LEGUP_F_crc32_gentab_BB__5_4
state: LEGUP_F_crc32_gentab_BB__5_4
   %6 = and i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   %7 = icmp eq i32 %6, 0 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   br i1 %7, label %11, label %8
   Transition: if (%7): LEGUP_F_crc32_gentab_BB__11_6 default: LEGUP_F_crc32_gentab_BB__8_5
state: LEGUP_F_crc32_gentab_BB__8_5
   %9 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   %10 = xor i32 %9, -306674912 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__11_6
   %12 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__11_6)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__13_7
   %crc.1 = phi i32 [ %10, %8 ], [ %12, %11 ] (endState: LEGUP_F_crc32_gentab_BB__13_7)
   br label %14
   Transition: default: LEGUP_F_crc32_gentab_BB__14_8
state: LEGUP_F_crc32_gentab_BB__14_8
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_crc32_gentab_BB__14_8)
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__15_9
   store i32 %crc.0, i32* %scevgep, align 4 (endState: LEGUP_F_crc32_gentab_BB__15_10)
   Transition: default: LEGUP_F_crc32_gentab_BB__15_10
state: LEGUP_F_crc32_gentab_BB__15_10
   br label %16
   Transition: default: LEGUP_F_crc32_gentab_BB__16_11
state: LEGUP_F_crc32_gentab_BB__16_11
   %17 = add nsw i32 %2, 1 (endState: LEGUP_F_crc32_gentab_BB__16_11)
   br label %1
   Transition: default: LEGUP_F_crc32_gentab_BB__1_1
state: LEGUP_F_crc32_gentab_BB__18_12
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 2
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
End Function: crc32_gentab
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_end
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_end_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_end_BB__0_1
   %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str7, i32 0, i32 0), i32 %crc) #3 (endState: LEGUP_F_platform_main_end_BB__0_1)
   ret i32 %crc
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_end
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_byte
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_byte_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_byte_BB__0_1
   %1 = load i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %3 = zext i8 %b to i32 (endState: LEGUP_F_crc32_byte_BB__0_1)
   Transition: default: LEGUP_F_crc32_byte_BB__0_2
state: LEGUP_F_crc32_byte_BB__0_2
   Transition: default: LEGUP_F_crc32_byte_BB__0_3
state: LEGUP_F_crc32_byte_BB__0_3
   %2 = lshr i32 %1, 8 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %.masked = and i32 %1, 255 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %4 = xor i32 %.masked, %3 (endState: LEGUP_F_crc32_byte_BB__0_3)
   Transition: default: LEGUP_F_crc32_byte_BB__0_4
state: LEGUP_F_crc32_byte_BB__0_4
   %5 = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i32 %4 (endState: LEGUP_F_crc32_byte_BB__0_4)
   %6 = load i32* %5, align 4 (endState: LEGUP_F_crc32_byte_BB__0_6)
   Transition: default: LEGUP_F_crc32_byte_BB__0_5
state: LEGUP_F_crc32_byte_BB__0_5
   Transition: default: LEGUP_F_crc32_byte_BB__0_6
state: LEGUP_F_crc32_byte_BB__0_6
   %7 = xor i32 %2, %6 (endState: LEGUP_F_crc32_byte_BB__0_6)
   store i32 %7, i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_7)
   Transition: default: LEGUP_F_crc32_byte_BB__0_7
state: LEGUP_F_crc32_byte_BB__0_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 7
End Function: crc32_byte
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1
   %1 = sub i16 %ui1, %ui2 (endState: LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1
   %1 = mul i8 %si1, %si2 (endState: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1
   %1 = icmp sgt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %2, label %7
   Transition: if (%1): LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2
   %3 = icmp sgt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3
   %5 = sub nsw i32 2147483647, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   %6 = icmp slt i32 %5, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   br i1 %6, label %14, label %7
   Transition: if (%6): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
   %8 = icmp slt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4)
   br i1 %8, label %9, label %15
   Transition: if (%8): LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5
   %10 = icmp slt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5)
   br i1 %10, label %11, label %15
   Transition: if (%10): LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6
   %12 = sub nsw i32 -2147483648, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   %13 = icmp sgt i32 %12, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   br i1 %13, label %14, label %15
   Transition: if (%13): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
   %16 = add nsw i32 %si1, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8)
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
   %18 = phi i32 [ %si1, %14 ], [ %16, %15 ] (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9)
   ret i32 %18
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %17 Num States: 1
End Function: safe_add_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_13
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_13_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_13_BB__0_1
   ret i32 1209876222
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: func_13
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1
   %1 = sub i8 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1
   %1 = icmp eq i32 %si2, 0 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
   %3 = icmp eq i32 %si1, -2147483648 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3
   %5 = icmp eq i32 %si2, -1 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3)
   br i1 %5, label %6, label %7
   Transition: if (%5): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
   %8 = sdiv i32 %si1, %si2 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37)
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
   %10 = phi i32 [ %si1, %6 ], [ %8, %7 ] (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38)
   ret i32 %10
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %7 Num States: 33
Basic Block: %9 Num States: 1
End Function: safe_div_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2
   %3 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   %4 = lshr i32 255, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   %5 = icmp sgt i32 %3, %4 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3
   %7 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4
   %9 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4)
   %10 = shl i32 %9, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5)
   %13 = trunc i32 %12 to i8 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5)
   ret i8 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_lshift_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_25
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_25_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_25_BB__0_1
   ret i16 %p_30
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: func_25
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1
   %1 = icmp eq i8 %si2, 0 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2
   %3 = icmp eq i8 %si1, -128 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3
   %5 = icmp eq i8 %si2, -1 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
   %9 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5)
   %10 = sext i8 %si2 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5)
   %11 = sdiv i32 %9, %10 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_6
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_7
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_8
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_9
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_10
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_11
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_12
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_13
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_14
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_15
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_16
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_17
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_18
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_19
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_20
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_21
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_22
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_23
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_24
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_25
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_26
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_27
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_28
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_29
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_30
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_31
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_32
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_33
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_34
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_35
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_36
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i8 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38)
   ret i8 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_div_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1
   %1 = icmp slt i16 %left, 0 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %6, label %4
   Transition: if (%3): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4)
   br label %11
   Transition: default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5
   %9 = sext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5)
   %10 = ashr i32 %9, %right (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5)
   br label %11
   Transition: default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6)
   %13 = trunc i32 %12 to i16 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6)
   ret i16 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_rshift_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1
   %1 = add i8 %si1, %si2 (endState: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1
   %1 = icmp eq i8 %ui2, 0 (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_div_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_3
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__2_2
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_3
   %div = udiv i8 %ui1, %ui2 (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11)
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_4
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_5
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_6
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_7
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_8
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_9
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_10
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
   %.in = phi i8 [ %ui1, %2 ], [ %div, %3 ] (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12)
   ret i8 %.in
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 9
Basic Block: %4 Num States: 1
End Function: safe_div_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1
   %1 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %2 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %3 = and i32 %2, -2147483648 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %4 = xor i32 %3, %si1 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %5 = sub nsw i32 %4, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %6 = xor i32 %5, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %7 = and i32 %1, %6 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %8 = icmp slt i32 %7, 0 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   br i1 %8, label %9, label %10
   Transition: if (%8): LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2 default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
   %11 = sub nsw i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3)
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
   %13 = phi i32 [ %si1, %9 ], [ %11, %10 ] (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4)
   ret i32 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
End Function: safe_sub_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_uint32_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_uint32_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__0_1
   %1 = icmp eq i32 %ui2, 0 (endState: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_mod_func_uint32_t_u_u_BB__2_2 default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_3
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__2_2
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_3
   %4 = urem i32 %ui1, %ui2 (endState: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_35)
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_4
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_5
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_6
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_7
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_8
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_9
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_10
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_11
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_11
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_12
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_12
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_13
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_13
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_14
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_14
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_15
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_15
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_16
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_16
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_17
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_17
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_18
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_18
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_19
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_19
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_20
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_20
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_21
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_21
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_22
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_22
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_23
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_23
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_24
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_24
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_25
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_25
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_26
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_26
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_27
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_27
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_28
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_28
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_29
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_29
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_30
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_30
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_31
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_31
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_32
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_32
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_33
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_33
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_34
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_34
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_35
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_35
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36
   %6 = phi i32 [ %ui1, %2 ], [ %4, %3 ] (endState: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36)
   ret i32 %6
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 33
Basic Block: %5 Num States: 1
End Function: safe_mod_func_uint32_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1
   %1 = icmp slt i8 %left, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %10, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %10, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %10, label %6
   Transition: if (%5): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   %8 = lshr i32 127, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   %9 = icmp sgt i32 %7, %8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   br i1 %9, label %10, label %12
   Transition: if (%9): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5
   %11 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6
   %13 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6)
   %14 = shl i32 %13, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
   %16 = phi i32 [ %11, %10 ], [ %14, %12 ] (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7)
   %17 = trunc i32 %16 to i8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7)
   ret i8 %17
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %15 Num States: 1
End Function: safe_lshift_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2
   %3 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   %4 = lshr i32 65535, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   %5 = icmp sgt i32 %3, %4 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3
   %7 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4
   %9 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4)
   %10 = shl i32 %9, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5)
   %13 = trunc i32 %12 to i16 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5)
   ret i16 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_lshift_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__0_1
   %1 = icmp slt i16 %left, 0 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %10, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %10, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__4_3
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %10, label %6
   Transition: if (%5): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4)
   %8 = lshr i32 32767, %right (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4)
   %9 = icmp sgt i32 %7, %8 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4)
   br i1 %9, label %10, label %12
   Transition: if (%9): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5
   %11 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6
   %13 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6)
   %14 = shl i32 %13, %right (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7
   %16 = phi i32 [ %11, %10 ], [ %14, %12 ] (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7)
   %17 = trunc i32 %16 to i16 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7)
   ret i16 %17
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %15 Num States: 1
End Function: safe_lshift_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_1
   %1 = mul i16 %si1, %si2 (endState: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_2
state: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_2
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int8_t_s_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__0_1
   %1 = icmp slt i8 %left, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__2_2
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__2_2
   %3 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3
   %5 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3)
   %6 = lshr i32 127, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4
   %9 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5
   %11 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6)
   %15 = trunc i32 %14 to i8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6)
   ret i8 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_int8_t_s_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1
   %1 = add i8 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %4
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2
   %3 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3)
   %6 = lshr i32 %5, %right (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
   %8 = phi i32 [ %3, %2 ], [ %6, %4 ] (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4)
   %9 = trunc i32 %8 to i8 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4)
   ret i8 %9
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
End Function: safe_rshift_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %2, label %4
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2 default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2
   %3 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   %6 = lshr i32 %5, %right (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
   %8 = phi i32 [ %3, %2 ], [ %6, %4 ] (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   %9 = trunc i32 %8 to i16 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   ret i16 %9
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
End Function: safe_rshift_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_2
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_2_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_2_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %dt = alloca i16*, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %st = alloca i16*, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_2)
   %2 = bitcast i8* %d to i16* (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   store i16* %2, i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_2)
   %3 = bitcast i8* %s to i16* (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %4 = lshr i32 %n, 1 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__0_2
state: LEGUP_F_legup_memcpy_2_BB__0_2
   store i16* %3, i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__0_3
state: LEGUP_F_legup_memcpy_2_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_4
state: LEGUP_F_legup_memcpy_2_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_5
state: LEGUP_F_legup_memcpy_2_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_6
state: LEGUP_F_legup_memcpy_2_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_7
state: LEGUP_F_legup_memcpy_2_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_2_BB__15_14 default: LEGUP_F_legup_memcpy_2_BB__9_8
state: LEGUP_F_legup_memcpy_2_BB__9_8
   %10 = load i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   %13 = load i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_9
state: LEGUP_F_legup_memcpy_2_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_10
state: LEGUP_F_legup_memcpy_2_BB__9_10
   %11 = getelementptr inbounds i16* %10, i32 1 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   store i16* %11, i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_11)
   %12 = load i16* %10, align 2 (endState: LEGUP_F_legup_memcpy_2_BB__9_12)
   %14 = getelementptr inbounds i16* %13, i32 1 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_11
state: LEGUP_F_legup_memcpy_2_BB__9_11
   store i16* %14, i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_12
state: LEGUP_F_legup_memcpy_2_BB__9_12
   store i16 %12, i16* %13, align 2 (endState: LEGUP_F_legup_memcpy_2_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_13
state: LEGUP_F_legup_memcpy_2_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_4
state: LEGUP_F_legup_memcpy_2_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_2
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_4
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_4_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_4_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %dt = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %st = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %2 = bitcast i8* %d to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32* %2, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %3 = bitcast i8* %s to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %4 = lshr i32 %n, 2 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_2
state: LEGUP_F_legup_memcpy_4_BB__0_2
   store i32* %3, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_3
state: LEGUP_F_legup_memcpy_4_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_5
state: LEGUP_F_legup_memcpy_4_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_6
state: LEGUP_F_legup_memcpy_4_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_7
state: LEGUP_F_legup_memcpy_4_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_4_BB__15_14 default: LEGUP_F_legup_memcpy_4_BB__9_8
state: LEGUP_F_legup_memcpy_4_BB__9_8
   %10 = load i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   %13 = load i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_9
state: LEGUP_F_legup_memcpy_4_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_10
state: LEGUP_F_legup_memcpy_4_BB__9_10
   %11 = getelementptr inbounds i32* %10, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   store i32* %11, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_11)
   %12 = load i32* %10, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   %14 = getelementptr inbounds i32* %13, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_11
state: LEGUP_F_legup_memcpy_4_BB__9_11
   store i32* %14, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_12
state: LEGUP_F_legup_memcpy_4_BB__9_12
   store i32 %12, i32* %13, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_13
state: LEGUP_F_legup_memcpy_4_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_4
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_8bytes
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_8bytes_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_8bytes_BB__0_1
   %1 = trunc i64 %val to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %2 = lshr i64 %val, 8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %3 = trunc i64 %2 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %4 = lshr i64 %val, 16 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %5 = trunc i64 %4 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %6 = lshr i64 %val, 24 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %7 = trunc i64 %6 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %8 = lshr i64 %val, 32 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %9 = trunc i64 %8 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %10 = lshr i64 %val, 40 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %11 = trunc i64 %10 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %12 = lshr i64 %val, 48 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %13 = trunc i64 %12 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %14 = lshr i64 %val, 56 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %15 = trunc i64 %14 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_byte(i8 zeroext %1) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_crc32_8bytes_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_byte(i8 zeroext %3) #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_crc32_8bytes_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   call void @crc32_byte(i8 zeroext %5) #3 (endState: LEGUP_function_call_6)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_crc32_8bytes_BB__0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @crc32_byte(i8 zeroext %7) #3 (endState: LEGUP_function_call_8)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_crc32_8bytes_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @crc32_byte(i8 zeroext %9) #3 (endState: LEGUP_function_call_10)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_crc32_8bytes_BB__0_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   call void @crc32_byte(i8 zeroext %11) #3 (endState: LEGUP_function_call_12)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_crc32_8bytes_BB__0_13
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @crc32_byte(i8 zeroext %13) #3 (endState: LEGUP_function_call_14)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_crc32_8bytes_BB__0_15
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @crc32_byte(i8 zeroext %15) #3 (endState: LEGUP_function_call_16)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_crc32_8bytes_BB__0_17
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
End Function: crc32_8bytes
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_7
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_7_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_7_BB__0_1
   %l_51 = alloca [8 x i16], align 2 (endState: LEGUP_F_func_7_BB__0_1)
   %l_76 = alloca [2 x [8 x i32]], align 4 (endState: LEGUP_F_func_7_BB__0_1)
   %1 = bitcast [8 x i16]* %l_51 to i8* (endState: LEGUP_F_func_7_BB__0_1)
   %2 = bitcast [2 x [8 x i32]]* %l_76 to i8* (endState: LEGUP_F_func_7_BB__0_1)
   %3 = add i16 %p_9, -1 (endState: LEGUP_F_func_7_BB__0_1)
   %4 = icmp ult i16 %3, 6 (endState: LEGUP_F_func_7_BB__0_1)
   %5 = zext i1 %4 to i32 (endState: LEGUP_F_func_7_BB__0_1)
   %13 = getelementptr inbounds [8 x i16]* %l_51, i32 0, i32 4 (endState: LEGUP_F_func_7_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_2(i8* %1, i8* bitcast ([8 x i16]* @func_7.l_51 to i8*), i32 16) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_2_finish_final): LEGUP_F_func_7_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_func_7_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @legup_memcpy_4(i8* %2, i8* bitcast ([2 x [8 x i32]]* @func_7.l_76 to i8*), i32 64) (endState: LEGUP_function_call_4)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_7_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_func_7_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %6 = call signext i8 @safe_lshift_func_int8_t_s_s(i8 signext 6, i32 %5) #3 (endState: LEGUP_function_call_6)
   Transition: if (safe_lshift_func_int8_t_s_s_finish_final): LEGUP_F_func_7_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_func_7_BB__0_7
   %7 = zext i8 %6 to i32 (endState: LEGUP_F_func_7_BB__0_7)
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   %8 = call signext i8 @safe_lshift_func_int8_t_s_u(i8 signext -1, i32 0) #3 (endState: LEGUP_function_call_8)
   Transition: if (safe_lshift_func_int8_t_s_u_finish_final): LEGUP_F_func_7_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_func_7_BB__0_9
   %9 = sext i8 %8 to i16 (endState: LEGUP_F_func_7_BB__0_9)
   %10 = load i32* getelementptr inbounds ([7 x i32]* @g_38, i32 0, i32 2), align 4 (endState: LEGUP_F_func_7_BB__0_11)
   Transition: default: LEGUP_F_func_7_BB__0_10
state: LEGUP_F_func_7_BB__0_10
   Transition: default: LEGUP_F_func_7_BB__0_11
state: LEGUP_F_func_7_BB__0_11
   %11 = trunc i32 %10 to i8 (endState: LEGUP_F_func_7_BB__0_11)
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   %12 = call zeroext i8 @safe_rshift_func_uint8_t_u_u(i8 zeroext %11, i32 0) #3 (endState: LEGUP_function_call_12)
   Transition: if (safe_rshift_func_uint8_t_u_u_finish_final): LEGUP_F_func_7_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_func_7_BB__0_13
   %14 = load i16* %13, align 2 (endState: LEGUP_F_func_7_BB__0_15)
   Transition: default: LEGUP_F_func_7_BB__0_14
state: LEGUP_F_func_7_BB__0_14
   Transition: default: LEGUP_F_func_7_BB__0_15
state: LEGUP_F_func_7_BB__0_15
   %15 = trunc i16 %14 to i8 (endState: LEGUP_F_func_7_BB__0_15)
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   %16 = call zeroext i8 @safe_add_func_uint8_t_u_u(i8 zeroext %12, i8 zeroext %15) #3 (endState: LEGUP_function_call_16)
   Transition: if (safe_add_func_uint8_t_u_u_finish_final): LEGUP_F_func_7_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_func_7_BB__0_17
   %17 = zext i8 %16 to i16 (endState: LEGUP_F_func_7_BB__0_17)
   Transition: default: LEGUP_function_call_18
state: LEGUP_function_call_18
   %18 = call signext i16 @safe_mul_func_int16_t_s_s(i16 signext %9, i16 signext %17) #3 (endState: LEGUP_function_call_18)
   Transition: if (safe_mul_func_int16_t_s_s_finish_final): LEGUP_F_func_7_BB__0_19 default: LEGUP_function_call_18
state: LEGUP_F_func_7_BB__0_19
   Transition: default: LEGUP_function_call_20
state: LEGUP_function_call_20
   %19 = call signext i16 @safe_lshift_func_int16_t_s_s(i16 signext %18, i32 10) #3 (endState: LEGUP_function_call_20)
   Transition: if (safe_lshift_func_int16_t_s_s_finish_final): LEGUP_F_func_7_BB__0_21 default: LEGUP_function_call_20
state: LEGUP_F_func_7_BB__0_21
   %20 = zext i16 %19 to i32 (endState: LEGUP_F_func_7_BB__0_21)
   %21 = load i32* getelementptr inbounds ([7 x i32]* @g_38, i32 0, i32 2), align 4 (endState: LEGUP_F_func_7_BB__0_23)
   Transition: default: LEGUP_F_func_7_BB__0_22
state: LEGUP_F_func_7_BB__0_22
   Transition: default: LEGUP_F_func_7_BB__0_23
state: LEGUP_F_func_7_BB__0_23
   br i1 true, label %23, label %22
   Transition: if (true): LEGUP_F_func_7_BB__23_25 default: LEGUP_F_func_7_BB__22_24
state: LEGUP_F_func_7_BB__22_24
   br label %23
   Transition: default: LEGUP_F_func_7_BB__23_25
state: LEGUP_F_func_7_BB__23_25
   %p_10.not = and i32 %p_10, -2 (endState: LEGUP_F_func_7_BB__23_25)
   %24 = xor i32 %p_10.not, -2 (endState: LEGUP_F_func_7_BB__23_25)
   %25 = icmp slt i32 %24, 26199 (endState: LEGUP_F_func_7_BB__23_25)
   %26 = zext i1 %25 to i32 (endState: LEGUP_F_func_7_BB__23_25)
   %27 = icmp eq i32 %26, %p_10 (endState: LEGUP_F_func_7_BB__23_25)
   %28 = zext i1 %27 to i32 (endState: LEGUP_F_func_7_BB__23_25)
   %29 = icmp sge i32 %28, %p_10 (endState: LEGUP_F_func_7_BB__23_25)
   %30 = zext i1 %29 to i32 (endState: LEGUP_F_func_7_BB__23_25)
   %31 = and i32 %21, %30 (endState: LEGUP_F_func_7_BB__23_25)
   %32 = icmp eq i32 %31, 0 (endState: LEGUP_F_func_7_BB__23_25)
   br i1 %32, label %34, label %33
   Transition: if (%32): LEGUP_F_func_7_BB__34_27 default: LEGUP_F_func_7_BB__33_26
state: LEGUP_F_func_7_BB__33_26
   br label %34
   Transition: default: LEGUP_F_func_7_BB__34_27
state: LEGUP_F_func_7_BB__34_27
   %35 = phi i16 [ -10, %23 ], [ -9, %33 ] (endState: LEGUP_F_func_7_BB__34_27)
   %42 = getelementptr inbounds [2 x [8 x i32]]* %l_76, i32 0, i32 0, i32 3 (endState: LEGUP_F_func_7_BB__34_27)
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   %36 = call zeroext i16 @safe_rshift_func_uint16_t_u_u(i16 zeroext %35, i32 14) #3 (endState: LEGUP_function_call_28)
   Transition: if (safe_rshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_7_BB__34_29 default: LEGUP_function_call_28
state: LEGUP_F_func_7_BB__34_29
   %37 = load i32* @g_37, align 4 (endState: LEGUP_F_func_7_BB__34_31)
   Transition: default: LEGUP_F_func_7_BB__34_30
state: LEGUP_F_func_7_BB__34_30
   Transition: default: LEGUP_F_func_7_BB__34_31
state: LEGUP_F_func_7_BB__34_31
   %38 = trunc i32 %37 to i8 (endState: LEGUP_F_func_7_BB__34_31)
   Transition: default: LEGUP_function_call_32
state: LEGUP_function_call_32
   %39 = call zeroext i8 @safe_add_func_uint8_t_u_u(i8 zeroext %38, i8 zeroext 0) #3 (endState: LEGUP_function_call_32)
   Transition: if (safe_add_func_uint8_t_u_u_finish_final): LEGUP_F_func_7_BB__34_33 default: LEGUP_function_call_32
state: LEGUP_F_func_7_BB__34_33
   %40 = zext i8 %39 to i32 (endState: LEGUP_F_func_7_BB__34_33)
   %41 = and i32 %20, %40 (endState: LEGUP_F_func_7_BB__34_33)
   %43 = load i32* %42, align 4 (endState: LEGUP_F_func_7_BB__34_35)
   Transition: default: LEGUP_F_func_7_BB__34_34
state: LEGUP_F_func_7_BB__34_34
   Transition: default: LEGUP_F_func_7_BB__34_35
state: LEGUP_F_func_7_BB__34_35
   %44 = xor i32 %43, %41 (endState: LEGUP_F_func_7_BB__34_35)
   store i32 %44, i32* %42, align 4 (endState: LEGUP_F_func_7_BB__34_36)
   %45 = trunc i32 %44 to i16 (endState: LEGUP_F_func_7_BB__34_35)
   Transition: default: LEGUP_F_func_7_BB__34_36
state: LEGUP_F_func_7_BB__34_36
   Transition: default: LEGUP_function_call_37
state: LEGUP_function_call_37
   %46 = call zeroext i16 @safe_lshift_func_uint16_t_u_u(i16 zeroext %45, i32 12) #3 (endState: LEGUP_function_call_37)
   Transition: if (safe_lshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_7_BB__34_38 default: LEGUP_function_call_37
state: LEGUP_F_func_7_BB__34_38
   %47 = icmp eq i16 %46, 0 (endState: LEGUP_F_func_7_BB__34_38)
   br i1 %47, label %48, label %52
   Transition: if (%47): LEGUP_F_func_7_BB__48_39 default: LEGUP_F_func_7_BB__52_42
state: LEGUP_F_func_7_BB__48_39
   %49 = getelementptr inbounds [8 x i16]* %l_51, i32 0, i32 2 (endState: LEGUP_F_func_7_BB__48_39)
   %50 = load i16* %49, align 2 (endState: LEGUP_F_func_7_BB__48_41)
   Transition: default: LEGUP_F_func_7_BB__48_40
state: LEGUP_F_func_7_BB__48_40
   Transition: default: LEGUP_F_func_7_BB__48_41
state: LEGUP_F_func_7_BB__48_41
   %51 = icmp ne i16 %50, 0 (endState: LEGUP_F_func_7_BB__48_41)
   br label %52
   Transition: default: LEGUP_F_func_7_BB__52_42
state: LEGUP_F_func_7_BB__52_42
   %53 = phi i1 [ true, %34 ], [ %51, %48 ] (endState: LEGUP_F_func_7_BB__52_42)
   %54 = zext i1 %53 to i32 (endState: LEGUP_F_func_7_BB__52_42)
   %55 = icmp sge i32 %54, %p_10 (endState: LEGUP_F_func_7_BB__52_42)
   %56 = zext i1 %55 to i32 (endState: LEGUP_F_func_7_BB__52_42)
   %57 = xor i32 %56, %p_10 (endState: LEGUP_F_func_7_BB__52_42)
   %58 = icmp ult i32 %57, -1805883725 (endState: LEGUP_F_func_7_BB__52_42)
   %59 = zext i1 %58 to i32 (endState: LEGUP_F_func_7_BB__52_42)
   %60 = load i32* @g_77, align 4 (endState: LEGUP_F_func_7_BB__52_44)
   %62 = load i32* getelementptr inbounds ([7 x i32]* @g_38, i32 0, i32 0), align 4 (endState: LEGUP_F_func_7_BB__52_44)
   %73 = zext i16 %3 to i32 (endState: LEGUP_F_func_7_BB__52_42)
   %77 = getelementptr inbounds [8 x i16]* %l_51, i32 0, i32 5 (endState: LEGUP_F_func_7_BB__52_42)
   Transition: default: LEGUP_F_func_7_BB__52_43
state: LEGUP_F_func_7_BB__52_43
   Transition: default: LEGUP_F_func_7_BB__52_44
state: LEGUP_F_func_7_BB__52_44
   %61 = and i32 %60, %59 (endState: LEGUP_F_func_7_BB__52_44)
   store i32 %61, i32* @g_77, align 4 (endState: LEGUP_F_func_7_BB__52_45)
   Transition: default: LEGUP_F_func_7_BB__52_45
state: LEGUP_F_func_7_BB__52_45
   Transition: default: LEGUP_function_call_46
state: LEGUP_function_call_46
   %63 = call i32 @safe_sub_func_int32_t_s_s(i32 %61, i32 %62) #3 (endState: LEGUP_function_call_46)
   Transition: if (safe_sub_func_int32_t_s_s_finish_final): LEGUP_F_func_7_BB__52_47 default: LEGUP_function_call_46
state: LEGUP_F_func_7_BB__52_47
   %64 = and i32 %7, %63 (endState: LEGUP_F_func_7_BB__52_47)
   %65 = trunc i32 %64 to i8 (endState: LEGUP_F_func_7_BB__52_47)
   Transition: default: LEGUP_function_call_48
state: LEGUP_function_call_48
   %66 = call signext i8 @safe_add_func_int8_t_s_s(i8 signext %65, i8 signext -1) #3 (endState: LEGUP_function_call_48)
   Transition: if (safe_add_func_int8_t_s_s_finish_final): LEGUP_F_func_7_BB__52_49 default: LEGUP_function_call_48
state: LEGUP_F_func_7_BB__52_49
   %67 = zext i8 %66 to i32 (endState: LEGUP_F_func_7_BB__52_49)
   %68 = and i32 %67, 7 (endState: LEGUP_F_func_7_BB__52_49)
   %69 = icmp ne i32 %68, %p_10 (endState: LEGUP_F_func_7_BB__52_49)
   %70 = zext i1 %69 to i32 (endState: LEGUP_F_func_7_BB__52_49)
   %71 = load volatile i32* @g_22, align 4 (endState: LEGUP_F_func_7_BB__52_51)
   Transition: default: LEGUP_F_func_7_BB__52_50
state: LEGUP_F_func_7_BB__52_50
   Transition: default: LEGUP_F_func_7_BB__52_51
state: LEGUP_F_func_7_BB__52_51
   Transition: default: LEGUP_function_call_52
state: LEGUP_function_call_52
   %72 = call i32 @safe_mod_func_uint32_t_u_u(i32 %70, i32 %71) #3 (endState: LEGUP_function_call_52)
   Transition: if (safe_mod_func_uint32_t_u_u_finish_final): LEGUP_F_func_7_BB__52_53 default: LEGUP_function_call_52
state: LEGUP_F_func_7_BB__52_53
   %74 = load i32* getelementptr inbounds ([7 x i32]* @g_38, i32 0, i32 2), align 4 (endState: LEGUP_F_func_7_BB__52_55)
   Transition: default: LEGUP_F_func_7_BB__52_54
state: LEGUP_F_func_7_BB__52_54
   Transition: default: LEGUP_F_func_7_BB__52_55
state: LEGUP_F_func_7_BB__52_55
   Transition: default: LEGUP_function_call_56
state: LEGUP_function_call_56
   %75 = call i32 @safe_sub_func_int32_t_s_s(i32 %73, i32 %74) #3 (endState: LEGUP_function_call_56)
   Transition: if (safe_sub_func_int32_t_s_s_finish_final): LEGUP_F_func_7_BB__52_57 default: LEGUP_function_call_56
state: LEGUP_F_func_7_BB__52_57
   %76 = trunc i32 %75 to i8 (endState: LEGUP_F_func_7_BB__52_57)
   %78 = load i16* %77, align 2 (endState: LEGUP_F_func_7_BB__52_59)
   Transition: default: LEGUP_F_func_7_BB__52_58
state: LEGUP_F_func_7_BB__52_58
   Transition: default: LEGUP_F_func_7_BB__52_59
state: LEGUP_F_func_7_BB__52_59
   %79 = trunc i16 %78 to i8 (endState: LEGUP_F_func_7_BB__52_59)
   Transition: default: LEGUP_function_call_60
state: LEGUP_function_call_60
   %80 = call zeroext i8 @safe_div_func_uint8_t_u_u(i8 zeroext %76, i8 zeroext %79) #3 (endState: LEGUP_function_call_60)
   Transition: if (safe_div_func_uint8_t_u_u_finish_final): LEGUP_F_func_7_BB__52_61 default: LEGUP_function_call_60
state: LEGUP_F_func_7_BB__52_61
   %81 = icmp eq i8 %80, 0 (endState: LEGUP_F_func_7_BB__52_61)
   br i1 %81, label %83, label %82
   Transition: if (%81): LEGUP_F_func_7_BB__83_63 default: LEGUP_F_func_7_BB__82_62
state: LEGUP_F_func_7_BB__82_62
   br label %83
   Transition: default: LEGUP_F_func_7_BB__83_63
state: LEGUP_F_func_7_BB__83_63
   %84 = phi i16 [ 0, %52 ], [ 1, %82 ] (endState: LEGUP_F_func_7_BB__83_63)
   store i16 %84, i16* getelementptr inbounds ([6 x i16]* @g_78, i32 0, i32 2), align 2 (endState: LEGUP_F_func_7_BB__83_64)
   %85 = trunc i16 %3 to i8 (endState: LEGUP_F_func_7_BB__83_63)
   Transition: default: LEGUP_F_func_7_BB__83_64
state: LEGUP_F_func_7_BB__83_64
   ret i8 %85
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 23
Basic Block: %22 Num States: 1
Basic Block: %23 Num States: 1
Basic Block: %33 Num States: 1
Basic Block: %34 Num States: 12
Basic Block: %48 Num States: 3
Basic Block: %52 Num States: 20
Basic Block: %82 Num States: 1
Basic Block: %83 Num States: 2
End Function: func_7
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_1_BB__0_1
   %l_4 = alloca [7 x i16], align 2 (endState: LEGUP_F_func_1_BB__0_1)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__1_2
   %2 = phi i32 [ 0, %0 ], [ %5, %4 ] (endState: LEGUP_F_func_1_BB__1_2)
   %exitcond = icmp eq i32 %2, 7 (endState: LEGUP_F_func_1_BB__1_2)
   br i1 %exitcond, label %6, label %3
   Transition: if (%exitcond): LEGUP_F_func_1_BB__6_6 default: LEGUP_F_func_1_BB__3_3
state: LEGUP_F_func_1_BB__3_3
   %scevgep = getelementptr [7 x i16]* %l_4, i32 0, i32 %2 (endState: LEGUP_F_func_1_BB__3_3)
   store i16 -28672, i16* %scevgep, align 2 (endState: LEGUP_F_func_1_BB__3_4)
   Transition: default: LEGUP_F_func_1_BB__3_4
state: LEGUP_F_func_1_BB__3_4
   br label %4
   Transition: default: LEGUP_F_func_1_BB__4_5
state: LEGUP_F_func_1_BB__4_5
   %5 = add nsw i32 %2, 1 (endState: LEGUP_F_func_1_BB__4_5)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__6_6
   %7 = getelementptr inbounds [7 x i16]* %l_4, i32 0, i32 2 (endState: LEGUP_F_func_1_BB__6_6)
   %8 = load i16* %7, align 2 (endState: LEGUP_F_func_1_BB__6_8)
   %14 = getelementptr inbounds [7 x i16]* %l_4, i32 0, i32 2 (endState: LEGUP_F_func_1_BB__6_6)
   %18 = getelementptr inbounds [7 x i16]* %l_4, i32 0, i32 2 (endState: LEGUP_F_func_1_BB__6_6)
   %23 = getelementptr inbounds [7 x i16]* %l_4, i32 0, i32 6 (endState: LEGUP_F_func_1_BB__6_6)
   Transition: default: LEGUP_F_func_1_BB__6_7
state: LEGUP_F_func_1_BB__6_7
   Transition: default: LEGUP_F_func_1_BB__6_8
state: LEGUP_F_func_1_BB__6_8
   Transition: default: LEGUP_function_call_9
state: LEGUP_function_call_9
   %9 = call i32 @safe_div_func_int32_t_s_s(i32 -4, i32 9) #3 (endState: LEGUP_function_call_9)
   Transition: if (safe_div_func_int32_t_s_s_finish_final): LEGUP_F_func_1_BB__6_10 default: LEGUP_function_call_9
state: LEGUP_F_func_1_BB__6_10
   %10 = trunc i32 %9 to i8 (endState: LEGUP_F_func_1_BB__6_10)
   %11 = load volatile i32* @g_22, align 4 (endState: LEGUP_F_func_1_BB__6_12)
   Transition: default: LEGUP_F_func_1_BB__6_11
state: LEGUP_F_func_1_BB__6_11
   Transition: default: LEGUP_F_func_1_BB__6_12
state: LEGUP_F_func_1_BB__6_12
   %12 = trunc i32 %11 to i8 (endState: LEGUP_F_func_1_BB__6_12)
   Transition: default: LEGUP_function_call_13
state: LEGUP_function_call_13
   %13 = call signext i8 @safe_sub_func_int8_t_s_s(i8 signext %10, i8 signext %12) #3 (endState: LEGUP_function_call_13)
   Transition: if (safe_sub_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__6_14 default: LEGUP_function_call_13
state: LEGUP_F_func_1_BB__6_14
   %15 = load i16* %14, align 2 (endState: LEGUP_F_func_1_BB__6_16)
   Transition: default: LEGUP_F_func_1_BB__6_15
state: LEGUP_F_func_1_BB__6_15
   Transition: default: LEGUP_F_func_1_BB__6_16
state: LEGUP_F_func_1_BB__6_16
   %16 = trunc i16 %15 to i8 (endState: LEGUP_F_func_1_BB__6_16)
   Transition: default: LEGUP_function_call_17
state: LEGUP_function_call_17
   %17 = call zeroext i8 @safe_lshift_func_uint8_t_u_u(i8 zeroext %16, i32 5) #3 (endState: LEGUP_function_call_17)
   Transition: if (safe_lshift_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__6_18 default: LEGUP_function_call_17
state: LEGUP_F_func_1_BB__6_18
   %19 = load i16* %18, align 2 (endState: LEGUP_F_func_1_BB__6_20)
   Transition: default: LEGUP_F_func_1_BB__6_19
state: LEGUP_F_func_1_BB__6_19
   Transition: default: LEGUP_F_func_1_BB__6_20
state: LEGUP_F_func_1_BB__6_20
   %20 = trunc i16 %19 to i8 (endState: LEGUP_F_func_1_BB__6_20)
   Transition: default: LEGUP_function_call_21
state: LEGUP_function_call_21
   %21 = call signext i8 @safe_add_func_int8_t_s_s(i8 signext -108, i8 signext %20) #3 (endState: LEGUP_function_call_21)
   Transition: if (safe_add_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__6_22 default: LEGUP_function_call_21
state: LEGUP_F_func_1_BB__6_22
   %22 = sext i8 %21 to i16 (endState: LEGUP_F_func_1_BB__6_22)
   %24 = load i16* %23, align 2 (endState: LEGUP_F_func_1_BB__6_24)
   Transition: default: LEGUP_F_func_1_BB__6_23
state: LEGUP_F_func_1_BB__6_23
   Transition: default: LEGUP_F_func_1_BB__6_24
state: LEGUP_F_func_1_BB__6_24
   %25 = zext i16 %24 to i32 (endState: LEGUP_F_func_1_BB__6_24)
   Transition: default: LEGUP_function_call_25
state: LEGUP_function_call_25
   %26 = call signext i16 @safe_rshift_func_int16_t_s_s(i16 signext %22, i32 %25) #3 (endState: LEGUP_function_call_25)
   Transition: if (safe_rshift_func_int16_t_s_s_finish_final): LEGUP_F_func_1_BB__6_26 default: LEGUP_function_call_25
state: LEGUP_F_func_1_BB__6_26
   %27 = icmp eq i16 %26, 0 (endState: LEGUP_F_func_1_BB__6_26)
   br i1 %27, label %29, label %28
   Transition: if (%27): LEGUP_F_func_1_BB__29_28 default: LEGUP_F_func_1_BB__28_27
state: LEGUP_F_func_1_BB__28_27
   br label %29
   Transition: default: LEGUP_F_func_1_BB__29_28
state: LEGUP_F_func_1_BB__29_28
   %30 = phi i8 [ 0, %6 ], [ 1, %28 ] (endState: LEGUP_F_func_1_BB__29_28)
   %31 = load i32* @g_37, align 4 (endState: LEGUP_F_func_1_BB__29_30)
   %48 = getelementptr inbounds [7 x i16]* %l_4, i32 0, i32 6 (endState: LEGUP_F_func_1_BB__29_28)
   Transition: default: LEGUP_F_func_1_BB__29_29
state: LEGUP_F_func_1_BB__29_29
   Transition: default: LEGUP_F_func_1_BB__29_30
state: LEGUP_F_func_1_BB__29_30
   %32 = trunc i32 %31 to i8 (endState: LEGUP_F_func_1_BB__29_30)
   Transition: default: LEGUP_function_call_31
state: LEGUP_function_call_31
   %33 = call signext i8 @safe_div_func_int8_t_s_s(i8 signext %30, i8 signext %32) #3 (endState: LEGUP_function_call_31)
   Transition: if (safe_div_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__29_32 default: LEGUP_function_call_31
state: LEGUP_F_func_1_BB__29_32
   %34 = sext i8 %33 to i32 (endState: LEGUP_F_func_1_BB__29_32)
   %35 = load i32* @g_37, align 4 (endState: LEGUP_F_func_1_BB__29_34)
   %39 = load i32* @g_37, align 4 (endState: LEGUP_F_func_1_BB__29_34)
   Transition: default: LEGUP_F_func_1_BB__29_33
state: LEGUP_F_func_1_BB__29_33
   Transition: default: LEGUP_F_func_1_BB__29_34
state: LEGUP_F_func_1_BB__29_34
   %36 = or i32 %34, %35 (endState: LEGUP_F_func_1_BB__29_34)
   store i32 %36, i32* getelementptr inbounds ([7 x i32]* @g_38, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__29_35)
   %37 = or i32 %36, 1 (endState: LEGUP_F_func_1_BB__29_34)
   %38 = trunc i32 %37 to i8 (endState: LEGUP_F_func_1_BB__29_34)
   %40 = trunc i32 %39 to i8 (endState: LEGUP_F_func_1_BB__29_34)
   %41 = trunc i32 %39 to i16 (endState: LEGUP_F_func_1_BB__29_34)
   Transition: default: LEGUP_F_func_1_BB__29_35
state: LEGUP_F_func_1_BB__29_35
   Transition: default: LEGUP_function_call_36
state: LEGUP_function_call_36
   %42 = call signext i16 @func_25(i8 signext %38, i32 7, i8 zeroext %40, i32 %39, i16 signext %41) #3 (endState: LEGUP_function_call_36)
   Transition: if (func_25_finish_final): LEGUP_F_func_1_BB__29_37 default: LEGUP_function_call_36
state: LEGUP_F_func_1_BB__29_37
   %43 = load i32* @g_37, align 4 (endState: LEGUP_F_func_1_BB__29_39)
   Transition: default: LEGUP_F_func_1_BB__29_38
state: LEGUP_F_func_1_BB__29_38
   Transition: default: LEGUP_F_func_1_BB__29_39
state: LEGUP_F_func_1_BB__29_39
   %44 = trunc i32 %43 to i8 (endState: LEGUP_F_func_1_BB__29_39)
   Transition: default: LEGUP_function_call_40
state: LEGUP_function_call_40
   %45 = call i32 @func_13(i16 zeroext 1, i16 signext %42, i8 signext %44) #3 (endState: LEGUP_function_call_40)
   Transition: if (func_13_finish_final): LEGUP_F_func_1_BB__29_41 default: LEGUP_function_call_40
state: LEGUP_F_func_1_BB__29_41
   %46 = load i32* @g_37, align 4 (endState: LEGUP_F_func_1_BB__29_43)
   Transition: default: LEGUP_F_func_1_BB__29_42
state: LEGUP_F_func_1_BB__29_42
   Transition: default: LEGUP_F_func_1_BB__29_43
state: LEGUP_F_func_1_BB__29_43
   Transition: default: LEGUP_function_call_44
state: LEGUP_function_call_44
   %47 = call i32 @safe_add_func_int32_t_s_s(i32 %45, i32 %46) #3 (endState: LEGUP_function_call_44)
   Transition: if (safe_add_func_int32_t_s_s_finish_final): LEGUP_F_func_1_BB__29_45 default: LEGUP_function_call_44
state: LEGUP_F_func_1_BB__29_45
   %49 = load i16* %48, align 2 (endState: LEGUP_F_func_1_BB__29_47)
   Transition: default: LEGUP_F_func_1_BB__29_46
state: LEGUP_F_func_1_BB__29_46
   Transition: default: LEGUP_F_func_1_BB__29_47
state: LEGUP_F_func_1_BB__29_47
   Transition: default: LEGUP_function_call_48
state: LEGUP_function_call_48
   %50 = call zeroext i8 @func_7(i16 zeroext -1, i16 zeroext %49, i32 7) #3 (endState: LEGUP_function_call_48)
   Transition: if (func_7_finish_final): LEGUP_F_func_1_BB__29_49 default: LEGUP_function_call_48
state: LEGUP_F_func_1_BB__29_49
   Transition: default: LEGUP_function_call_50
state: LEGUP_function_call_50
   %51 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext 70, i8 signext %50) #3 (endState: LEGUP_function_call_50)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__29_51 default: LEGUP_function_call_50
state: LEGUP_F_func_1_BB__29_51
   %52 = sext i8 %51 to i16 (endState: LEGUP_F_func_1_BB__29_51)
   Transition: default: LEGUP_function_call_52
state: LEGUP_function_call_52
   %53 = call zeroext i16 @safe_sub_func_uint16_t_u_u(i16 zeroext %8, i16 zeroext %52) #3 (endState: LEGUP_function_call_52)
   Transition: if (safe_sub_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__29_53 default: LEGUP_function_call_52
state: LEGUP_F_func_1_BB__29_53
   %54 = zext i16 %53 to i32 (endState: LEGUP_F_func_1_BB__29_53)
   %55 = or i32 %54, 7 (endState: LEGUP_F_func_1_BB__29_53)
   store i32 %55, i32* @g_79, align 4 (endState: LEGUP_F_func_1_BB__29_54)
   %56 = load i32* getelementptr inbounds ([7 x i32]* @g_38, i32 0, i32 5), align 4 (endState: LEGUP_F_func_1_BB__29_55)
   Transition: default: LEGUP_F_func_1_BB__29_54
state: LEGUP_F_func_1_BB__29_54
   Transition: default: LEGUP_F_func_1_BB__29_55
state: LEGUP_F_func_1_BB__29_55
   ret i32 %56
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 2
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 21
Basic Block: %28 Num States: 1
Basic Block: %29 Num States: 28
End Function: func_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: transparent_crc
state: LEGUP_0
   Transition: if (start): LEGUP_F_transparent_crc_BB__0_1 default: LEGUP_0
state: LEGUP_F_transparent_crc_BB__0_1
   %1 = icmp eq i32 %flag, 0 (endState: LEGUP_F_transparent_crc_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_8bytes(i64 %val) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_8bytes_finish_final): LEGUP_F_transparent_crc_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_transparent_crc_BB__0_3
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_transparent_crc_BB__6_7 default: LEGUP_F_transparent_crc_BB__2_4
state: LEGUP_F_transparent_crc_BB__2_4
   %3 = load i32* @crc32_context, align 4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   Transition: default: LEGUP_F_transparent_crc_BB__2_5
state: LEGUP_F_transparent_crc_BB__2_5
   Transition: default: LEGUP_F_transparent_crc_BB__2_6
state: LEGUP_F_transparent_crc_BB__2_6
   %4 = xor i32 %3, -1 (endState: LEGUP_F_transparent_crc_BB__2_6)
   %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str8, i32 0, i32 0), i8* %vname, i32 %4) #4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   br label %6
   Transition: default: LEGUP_F_transparent_crc_BB__6_7
state: LEGUP_F_transparent_crc_BB__6_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 3
Basic Block: %6 Num States: 1
End Function: transparent_crc
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @platform_main_begin() #3 (endState: LEGUP_function_call_2)
   Transition: if (platform_main_begin_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_gentab() #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_gentab_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %1 = call i32 @func_1() #3 (endState: LEGUP_function_call_6)
   Transition: if (func_1_finish_final): LEGUP_F_main_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB__0_7
   %2 = load volatile i32* @g_22, align 4 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   %3 = sext i32 %2 to i64 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @transparent_crc(i64 %3, i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_10)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB__0_11
   %4 = load i32* @g_37, align 4 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_F_main_BB__0_12
state: LEGUP_F_main_BB__0_12
   Transition: default: LEGUP_F_main_BB__0_13
state: LEGUP_F_main_BB__0_13
   %5 = zext i32 %4 to i64 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @transparent_crc(i64 %5, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_14)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_main_BB__0_15
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__6_16
   %7 = phi i32 [ 0, %0 ], [ %14, %13 ] (endState: LEGUP_F_main_BB__6_16)
   %exitcond1 = icmp eq i32 %7, 7 (endState: LEGUP_F_main_BB__6_16)
   br i1 %exitcond1, label %15, label %8
   Transition: if (%exitcond1): LEGUP_F_main_BB__15_25 default: LEGUP_F_main_BB__8_17
state: LEGUP_F_main_BB__8_17
   %scevgep2 = getelementptr [7 x i32]* @g_38, i32 0, i32 %7 (endState: LEGUP_F_main_BB__8_17)
   %9 = load i32* %scevgep2, align 4 (endState: LEGUP_F_main_BB__8_19)
   Transition: default: LEGUP_F_main_BB__8_18
state: LEGUP_F_main_BB__8_18
   Transition: default: LEGUP_F_main_BB__8_19
state: LEGUP_F_main_BB__8_19
   %10 = zext i32 %9 to i64 (endState: LEGUP_F_main_BB__8_19)
   Transition: default: LEGUP_function_call_20
state: LEGUP_function_call_20
   call void @transparent_crc(i64 %10, i8* getelementptr inbounds ([8 x i8]* @.str2, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_20)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__8_21 default: LEGUP_function_call_20
state: LEGUP_F_main_BB__8_21
   br i1 false, label %11, label %12
   Transition: if (false): LEGUP_F_main_BB__11_22 default: LEGUP_F_main_BB__12_23
state: LEGUP_F_main_BB__11_22
   br label %12
   Transition: default: LEGUP_F_main_BB__12_23
state: LEGUP_F_main_BB__12_23
   br label %13
   Transition: default: LEGUP_F_main_BB__13_24
state: LEGUP_F_main_BB__13_24
   %14 = add nsw i32 %7, 1 (endState: LEGUP_F_main_BB__13_24)
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__15_25
   %16 = load i32* @g_77, align 4 (endState: LEGUP_F_main_BB__15_27)
   Transition: default: LEGUP_F_main_BB__15_26
state: LEGUP_F_main_BB__15_26
   Transition: default: LEGUP_F_main_BB__15_27
state: LEGUP_F_main_BB__15_27
   %17 = sext i32 %16 to i64 (endState: LEGUP_F_main_BB__15_27)
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   call void @transparent_crc(i64 %17, i8* getelementptr inbounds ([5 x i8]* @.str4, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_28)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__15_29 default: LEGUP_function_call_28
state: LEGUP_F_main_BB__15_29
   br label %18
   Transition: default: LEGUP_F_main_BB__18_30
state: LEGUP_F_main_BB__18_30
   %19 = phi i32 [ 0, %15 ], [ %26, %25 ] (endState: LEGUP_F_main_BB__18_30)
   %exitcond = icmp eq i32 %19, 6 (endState: LEGUP_F_main_BB__18_30)
   br i1 %exitcond, label %27, label %20
   Transition: if (%exitcond): LEGUP_F_main_BB__27_39 default: LEGUP_F_main_BB__20_31
state: LEGUP_F_main_BB__20_31
   %scevgep = getelementptr [6 x i16]* @g_78, i32 0, i32 %19 (endState: LEGUP_F_main_BB__20_31)
   %21 = load i16* %scevgep, align 2 (endState: LEGUP_F_main_BB__20_33)
   Transition: default: LEGUP_F_main_BB__20_32
state: LEGUP_F_main_BB__20_32
   Transition: default: LEGUP_F_main_BB__20_33
state: LEGUP_F_main_BB__20_33
   %22 = zext i16 %21 to i64 (endState: LEGUP_F_main_BB__20_33)
   Transition: default: LEGUP_function_call_34
state: LEGUP_function_call_34
   call void @transparent_crc(i64 %22, i8* getelementptr inbounds ([8 x i8]* @.str5, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_34)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__20_35 default: LEGUP_function_call_34
state: LEGUP_F_main_BB__20_35
   br i1 false, label %23, label %24
   Transition: if (false): LEGUP_F_main_BB__23_36 default: LEGUP_F_main_BB__24_37
state: LEGUP_F_main_BB__23_36
   br label %24
   Transition: default: LEGUP_F_main_BB__24_37
state: LEGUP_F_main_BB__24_37
   br label %25
   Transition: default: LEGUP_F_main_BB__25_38
state: LEGUP_F_main_BB__25_38
   %26 = add nsw i32 %19, 1 (endState: LEGUP_F_main_BB__25_38)
   br label %18
   Transition: default: LEGUP_F_main_BB__18_30
state: LEGUP_F_main_BB__27_39
   %28 = load i32* @g_79, align 4 (endState: LEGUP_F_main_BB__27_41)
   Transition: default: LEGUP_F_main_BB__27_40
state: LEGUP_F_main_BB__27_40
   Transition: default: LEGUP_F_main_BB__27_41
state: LEGUP_F_main_BB__27_41
   %29 = sext i32 %28 to i64 (endState: LEGUP_F_main_BB__27_41)
   Transition: default: LEGUP_function_call_42
state: LEGUP_function_call_42
   call void @transparent_crc(i64 %29, i8* getelementptr inbounds ([5 x i8]* @.str6, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_42)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__27_43 default: LEGUP_function_call_42
state: LEGUP_F_main_BB__27_43
   %30 = load i32* @crc32_context, align 4 (endState: LEGUP_F_main_BB__27_45)
   Transition: default: LEGUP_F_main_BB__27_44
state: LEGUP_F_main_BB__27_44
   Transition: default: LEGUP_F_main_BB__27_45
state: LEGUP_F_main_BB__27_45
   %31 = xor i32 %30, -1 (endState: LEGUP_F_main_BB__27_45)
   Transition: default: LEGUP_function_call_46
state: LEGUP_function_call_46
   %32 = call i32 @platform_main_end(i32 %31, i32 0) #3 (endState: LEGUP_function_call_46)
   Transition: if (platform_main_end_finish_final): LEGUP_F_main_BB__27_47 default: LEGUP_function_call_46
state: LEGUP_F_main_BB__27_47
   ret i32 %32
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 15
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 5
Basic Block: %11 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %15 Num States: 5
Basic Block: %18 Num States: 1
Basic Block: %20 Num States: 5
Basic Block: %23 Num States: 1
Basic Block: %24 Num States: 1
Basic Block: %25 Num States: 1
Basic Block: %27 Num States: 9
End Function: main
--------------------------------------------------------------------------------

