//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Fri Jun 16 17:57:19 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_begin
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_begin_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_begin_BB__0_1
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_begin
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_gentab
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_crc32_gentab_BB__1_1 default: LEGUP_0
state: LEGUP_F_crc32_gentab_BB__1_1
   %2 = phi i32 [ 0, %0 ], [ %17, %16 ] (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %scevgep = getelementptr [256 x i32]* @crc32_tab, i32 0, i32 %2 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %exitcond1 = icmp eq i32 %2, 256 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   br i1 %exitcond1, label %18, label %3
   Transition: if (%exitcond1): LEGUP_F_crc32_gentab_BB__18_12 default: LEGUP_F_crc32_gentab_BB__3_2
state: LEGUP_F_crc32_gentab_BB__3_2
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__4_3
   %indvar = phi i32 [ %indvar.next, %14 ], [ 0, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %crc.0 = phi i32 [ %crc.1, %14 ], [ %2, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %exitcond = icmp eq i32 %indvar, 8 (endState: LEGUP_F_crc32_gentab_BB__4_3)
   br i1 %exitcond, label %15, label %5
   Transition: if (%exitcond): LEGUP_F_crc32_gentab_BB__15_9 default: LEGUP_F_crc32_gentab_BB__5_4
state: LEGUP_F_crc32_gentab_BB__5_4
   %6 = and i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   %7 = icmp eq i32 %6, 0 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   br i1 %7, label %11, label %8
   Transition: if (%7): LEGUP_F_crc32_gentab_BB__11_6 default: LEGUP_F_crc32_gentab_BB__8_5
state: LEGUP_F_crc32_gentab_BB__8_5
   %9 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   %10 = xor i32 %9, -306674912 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__11_6
   %12 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__11_6)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__13_7
   %crc.1 = phi i32 [ %10, %8 ], [ %12, %11 ] (endState: LEGUP_F_crc32_gentab_BB__13_7)
   br label %14
   Transition: default: LEGUP_F_crc32_gentab_BB__14_8
state: LEGUP_F_crc32_gentab_BB__14_8
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_crc32_gentab_BB__14_8)
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__15_9
   store i32 %crc.0, i32* %scevgep, align 4 (endState: LEGUP_F_crc32_gentab_BB__15_10)
   Transition: default: LEGUP_F_crc32_gentab_BB__15_10
state: LEGUP_F_crc32_gentab_BB__15_10
   br label %16
   Transition: default: LEGUP_F_crc32_gentab_BB__16_11
state: LEGUP_F_crc32_gentab_BB__16_11
   %17 = add nsw i32 %2, 1 (endState: LEGUP_F_crc32_gentab_BB__16_11)
   br label %1
   Transition: default: LEGUP_F_crc32_gentab_BB__1_1
state: LEGUP_F_crc32_gentab_BB__18_12
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 2
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
End Function: crc32_gentab
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_end
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_end_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_end_BB__0_1
   %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str8, i32 0, i32 0), i32 %crc) #3 (endState: LEGUP_F_platform_main_end_BB__0_1)
   ret i32 %crc
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_end
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_byte
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_byte_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_byte_BB__0_1
   %1 = load i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %3 = zext i8 %b to i32 (endState: LEGUP_F_crc32_byte_BB__0_1)
   Transition: default: LEGUP_F_crc32_byte_BB__0_2
state: LEGUP_F_crc32_byte_BB__0_2
   Transition: default: LEGUP_F_crc32_byte_BB__0_3
state: LEGUP_F_crc32_byte_BB__0_3
   %2 = lshr i32 %1, 8 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %.masked = and i32 %1, 255 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %4 = xor i32 %.masked, %3 (endState: LEGUP_F_crc32_byte_BB__0_3)
   Transition: default: LEGUP_F_crc32_byte_BB__0_4
state: LEGUP_F_crc32_byte_BB__0_4
   %5 = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i32 %4 (endState: LEGUP_F_crc32_byte_BB__0_4)
   %6 = load i32* %5, align 4 (endState: LEGUP_F_crc32_byte_BB__0_6)
   Transition: default: LEGUP_F_crc32_byte_BB__0_5
state: LEGUP_F_crc32_byte_BB__0_5
   Transition: default: LEGUP_F_crc32_byte_BB__0_6
state: LEGUP_F_crc32_byte_BB__0_6
   %7 = xor i32 %2, %6 (endState: LEGUP_F_crc32_byte_BB__0_6)
   store i32 %7, i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_7)
   Transition: default: LEGUP_F_crc32_byte_BB__0_7
state: LEGUP_F_crc32_byte_BB__0_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 7
End Function: crc32_byte
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1
   %1 = add i16 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_11
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_11_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_11_BB__0_1
   ret i16 %p_12
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: func_11
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1
   %1 = sub i16 %ui1, %ui2 (endState: LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_uint32_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_uint32_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__0_1
   %1 = icmp eq i32 %ui2, 0 (endState: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_mod_func_uint32_t_u_u_BB__2_2 default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_3
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__2_2
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_3
   %4 = urem i32 %ui1, %ui2 (endState: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_35)
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_4
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_5
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_6
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_7
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_8
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_9
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_10
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_11
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_11
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_12
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_12
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_13
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_13
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_14
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_14
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_15
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_15
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_16
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_16
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_17
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_17
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_18
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_18
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_19
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_19
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_20
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_20
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_21
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_21
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_22
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_22
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_23
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_23
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_24
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_24
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_25
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_25
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_26
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_26
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_27
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_27
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_28
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_28
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_29
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_29
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_30
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_30
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_31
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_31
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_32
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_32
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_33
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_33
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_34
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_34
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_35
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__3_35
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36
state: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36
   %6 = phi i32 [ %ui1, %2 ], [ %4, %3 ] (endState: LEGUP_F_safe_mod_func_uint32_t_u_u_BB__5_36)
   ret i32 %6
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 33
Basic Block: %5 Num States: 1
End Function: safe_mod_func_uint32_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_1
   %1 = mul i16 %ui1, %ui2 (endState: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_2
state: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_2
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint8_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1)
   br i1 %1, label %4, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2)
   br i1 %3, label %4, label %6
   Transition: if (%3): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4
   %7 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4)
   %8 = lshr i32 %7, %right (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
   %10 = phi i32 [ %5, %4 ], [ %8, %6 ] (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5)
   %11 = trunc i32 %10 to i8 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5)
   ret i8 %11
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %9 Num States: 1
End Function: safe_rshift_func_uint8_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__0_1
   %1 = icmp eq i16 %ui2, 0 (endState: LEGUP_F_safe_div_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_div_func_uint16_t_u_u_BB__2_2 default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_3
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__2_2
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_3
   %div = udiv i16 %ui1, %ui2 (endState: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_19)
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_4
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_5
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_6
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_7
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_8
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_9
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_10
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_11
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_11
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_12
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_12
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_13
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_13
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_14
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_14
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_15
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_15
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_16
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_16
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_17
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_17
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_18
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_18
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_19
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_19
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20
   %.in = phi i16 [ %ui1, %2 ], [ %div, %3 ] (endState: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20)
   ret i16 %.in
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 17
Basic Block: %4 Num States: 1
End Function: safe_div_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint16_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %6 = lshr i32 65535, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4
   %9 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
   %11 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i16 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   ret i16 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint16_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_int8_t_s_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_int8_t_s_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__0_1
   %1 = icmp slt i8 %left, 0 (endState: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__0_1)
   br i1 %1, label %4, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_int8_t_s_u_BB__4_3 default: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__2_2
state: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__2_2
   %3 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__2_2)
   br i1 %3, label %4, label %6
   Transition: if (%3): LEGUP_F_safe_rshift_func_int8_t_s_u_BB__4_3 default: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__6_4
state: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__4_3
   %5 = sext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__4_3)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__9_5
state: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__6_4
   %7 = sext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__6_4)
   %8 = ashr i32 %7, %right (endState: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__6_4)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__9_5
state: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__9_5
   %10 = phi i32 [ %5, %4 ], [ %8, %6 ] (endState: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__9_5)
   %11 = trunc i32 %10 to i8 (endState: LEGUP_F_safe_rshift_func_int8_t_s_u_BB__9_5)
   ret i8 %11
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %9 Num States: 1
End Function: safe_rshift_func_int8_t_s_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_39
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_39_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_39_BB__0_1
   %1 = load volatile i8* @g_51, align 1 (endState: LEGUP_F_func_39_BB__0_3)
   Transition: default: LEGUP_F_func_39_BB__0_2
state: LEGUP_F_func_39_BB__0_2
   Transition: default: LEGUP_F_func_39_BB__0_3
state: LEGUP_F_func_39_BB__0_3
   %2 = add i8 %1, -1 (endState: LEGUP_F_func_39_BB__0_3)
   store volatile i8 %2, i8* @g_51, align 1 (endState: LEGUP_F_func_39_BB__0_4)
   Transition: default: LEGUP_F_func_39_BB__0_4
state: LEGUP_F_func_39_BB__0_4
   ret i8 99
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 4
End Function: func_39
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1
   %1 = add i8 %si1, %si2 (endState: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1
   %1 = icmp eq i32 %si2, 0 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
   %3 = icmp eq i32 %si1, -2147483648 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3
   %5 = icmp eq i32 %si2, -1 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3)
   br i1 %5, label %6, label %7
   Transition: if (%5): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
   %8 = sdiv i32 %si1, %si2 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37)
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
   %10 = phi i32 [ %si1, %6 ], [ %8, %7 ] (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38)
   ret i32 %10
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %7 Num States: 33
Basic Block: %9 Num States: 1
End Function: safe_div_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint8_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %6 = lshr i32 255, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4
   %9 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
   %11 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i8 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   ret i8 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint8_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %4
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2
   %3 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3)
   %6 = lshr i32 %5, %right (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
   %8 = phi i32 [ %3, %2 ], [ %6, %4 ] (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4)
   %9 = trunc i32 %8 to i8 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4)
   ret i8 %9
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
End Function: safe_rshift_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int16_t_s_s_BB__0_1
   %1 = add i16 %si1, %si2 (endState: LEGUP_F_safe_add_func_int16_t_s_s_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %2, label %4
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2 default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2
   %3 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   %6 = lshr i32 %5, %right (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
   %8 = phi i32 [ %3, %2 ], [ %6, %4 ] (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   %9 = trunc i32 %8 to i16 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   ret i16 %9
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
End Function: safe_rshift_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2
   %3 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   %4 = lshr i32 255, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   %5 = icmp sgt i32 %3, %4 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3
   %7 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4
   %9 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4)
   %10 = shl i32 %9, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5)
   %13 = trunc i32 %12 to i8 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5)
   ret i8 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_lshift_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1
   %1 = sub i16 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1
   %1 = icmp eq i8 %si2, 0 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2
   %3 = icmp eq i8 %si1, -128 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3
   %5 = icmp eq i8 %si2, -1 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
   %9 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5)
   %10 = sext i8 %si2 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5)
   %11 = sdiv i32 %9, %10 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_6
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_7
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_8
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_9
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_10
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_11
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_12
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_13
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_14
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_15
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_16
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_17
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_18
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_19
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_20
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_21
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_22
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_23
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_24
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_25
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_26
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_27
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_28
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_29
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_30
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_31
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_32
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_33
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_34
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_35
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_36
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i8 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38)
   ret i8 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_div_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1
   %1 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %2 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %3 = and i32 %2, -2147483648 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %4 = xor i32 %3, %si1 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %5 = sub nsw i32 %4, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %6 = xor i32 %5, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %7 = and i32 %1, %6 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %8 = icmp slt i32 %7, 0 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   br i1 %8, label %9, label %10
   Transition: if (%8): LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2 default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
   %11 = sub nsw i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3)
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
   %13 = phi i32 [ %si1, %9 ], [ %11, %10 ] (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4)
   ret i32 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
End Function: safe_sub_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1
   %1 = icmp sgt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %2, label %7
   Transition: if (%1): LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2
   %3 = icmp sgt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3
   %5 = sub nsw i32 2147483647, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   %6 = icmp slt i32 %5, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   br i1 %6, label %14, label %7
   Transition: if (%6): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
   %8 = icmp slt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4)
   br i1 %8, label %9, label %15
   Transition: if (%8): LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5
   %10 = icmp slt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5)
   br i1 %10, label %11, label %15
   Transition: if (%10): LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6
   %12 = sub nsw i32 -2147483648, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   %13 = icmp sgt i32 %12, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   br i1 %13, label %14, label %15
   Transition: if (%13): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
   %16 = add nsw i32 %si1, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8)
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
   %18 = phi i32 [ %si1, %14 ], [ %16, %15 ] (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9)
   ret i32 %18
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %17 Num States: 1
End Function: safe_add_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_unary_minus_func_int16_t_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_unary_minus_func_int16_t_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_unary_minus_func_int16_t_s_BB__0_1
   %1 = sub i16 0, %si (endState: LEGUP_F_safe_unary_minus_func_int16_t_s_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_unary_minus_func_int16_t_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint32_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1
   %1 = add i32 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1)
   ret i32 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint32_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1
   %1 = icmp slt i8 %left, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %10, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %10, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %10, label %6
   Transition: if (%5): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   %8 = lshr i32 127, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   %9 = icmp sgt i32 %7, %8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   br i1 %9, label %10, label %12
   Transition: if (%9): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5
   %11 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6
   %13 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6)
   %14 = shl i32 %13, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
   %16 = phi i32 [ %11, %10 ], [ %14, %12 ] (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7)
   %17 = trunc i32 %16 to i8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7)
   ret i8 %17
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %15 Num States: 1
End Function: safe_lshift_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int8_t_s_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__0_1
   %1 = icmp slt i8 %left, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__2_2
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__2_2
   %3 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3
   %5 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3)
   %6 = lshr i32 127, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4
   %9 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5
   %11 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6
state: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6)
   %15 = trunc i32 %14 to i8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_u_BB__13_6)
   ret i8 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_int8_t_s_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1
   %1 = icmp slt i16 %left, 0 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %6, label %4
   Transition: if (%3): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4)
   br label %11
   Transition: default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5
   %9 = sext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5)
   %10 = ashr i32 %9, %right (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5)
   br label %11
   Transition: default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6)
   %13 = trunc i32 %12 to i16 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6)
   ret i16 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_rshift_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2
   %3 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   %4 = lshr i32 65535, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   %5 = icmp sgt i32 %3, %4 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3
   %7 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4
   %9 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4)
   %10 = shl i32 %9, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5)
   %13 = trunc i32 %12 to i16 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5)
   ret i16 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_lshift_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_1
   %1 = mul i8 %ui1, %ui2 (endState: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_2
state: LEGUP_F_safe_mul_func_uint8_t_u_u_BB__0_2
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1
   %1 = mul i8 %si1, %si2 (endState: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__0_1
   %1 = icmp slt i16 %left, 0 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %10, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %10, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__4_3
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %10, label %6
   Transition: if (%5): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4)
   %8 = lshr i32 32767, %right (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4)
   %9 = icmp sgt i32 %7, %8 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__6_4)
   br i1 %9, label %10, label %12
   Transition: if (%9): LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5
   %11 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__10_5)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6
   %13 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6)
   %14 = shl i32 %13, %right (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__12_6)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7
   %16 = phi i32 [ %11, %10 ], [ %14, %12 ] (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7)
   %17 = trunc i32 %16 to i16 (endState: LEGUP_F_safe_lshift_func_int16_t_s_s_BB__15_7)
   ret i16 %17
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %15 Num States: 1
End Function: safe_lshift_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__0_1
   %1 = icmp eq i16 %si2, 0 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__2_2
   %3 = icmp eq i16 %si1, -32768 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_div_func_int16_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__4_3
   %5 = icmp eq i16 %si2, -1 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5
   %9 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5)
   %10 = sext i16 %si2 to i32 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_5)
   %11 = sdiv i32 %9, %10 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_6
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_7
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_8
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_9
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_10
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_11
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_12
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_13
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_14
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_15
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_16
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_17
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_18
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_19
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_20
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_21
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_22
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_23
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_24
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_25
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_26
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_27
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_28
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_29
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_30
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_31
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_32
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_33
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_34
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_35
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_36
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_37
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i16 (endState: LEGUP_F_safe_div_func_int16_t_s_s_BB__12_38)
   ret i16 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_div_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_4
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_4_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_4_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %dt = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %st = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %2 = bitcast i8* %d to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32* %2, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %3 = bitcast i8* %s to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %4 = lshr i32 %n, 2 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_2
state: LEGUP_F_legup_memcpy_4_BB__0_2
   store i32* %3, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_3
state: LEGUP_F_legup_memcpy_4_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_5
state: LEGUP_F_legup_memcpy_4_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_6
state: LEGUP_F_legup_memcpy_4_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_7
state: LEGUP_F_legup_memcpy_4_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_4_BB__15_14 default: LEGUP_F_legup_memcpy_4_BB__9_8
state: LEGUP_F_legup_memcpy_4_BB__9_8
   %10 = load i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   %13 = load i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_9
state: LEGUP_F_legup_memcpy_4_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_10
state: LEGUP_F_legup_memcpy_4_BB__9_10
   %11 = getelementptr inbounds i32* %10, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   store i32* %11, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_11)
   %12 = load i32* %10, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   %14 = getelementptr inbounds i32* %13, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_11
state: LEGUP_F_legup_memcpy_4_BB__9_11
   store i32* %14, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_12
state: LEGUP_F_legup_memcpy_4_BB__9_12
   store i32 %12, i32* %13, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_13
state: LEGUP_F_legup_memcpy_4_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_4
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_8bytes
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_8bytes_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_8bytes_BB__0_1
   %1 = trunc i64 %val to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %2 = lshr i64 %val, 8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %3 = trunc i64 %2 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %4 = lshr i64 %val, 16 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %5 = trunc i64 %4 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %6 = lshr i64 %val, 24 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %7 = trunc i64 %6 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %8 = lshr i64 %val, 32 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %9 = trunc i64 %8 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %10 = lshr i64 %val, 40 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %11 = trunc i64 %10 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %12 = lshr i64 %val, 48 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %13 = trunc i64 %12 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %14 = lshr i64 %val, 56 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %15 = trunc i64 %14 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_byte(i8 zeroext %1) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_crc32_8bytes_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_byte(i8 zeroext %3) #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_crc32_8bytes_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   call void @crc32_byte(i8 zeroext %5) #3 (endState: LEGUP_function_call_6)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_crc32_8bytes_BB__0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @crc32_byte(i8 zeroext %7) #3 (endState: LEGUP_function_call_8)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_crc32_8bytes_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @crc32_byte(i8 zeroext %9) #3 (endState: LEGUP_function_call_10)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_crc32_8bytes_BB__0_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   call void @crc32_byte(i8 zeroext %11) #3 (endState: LEGUP_function_call_12)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_crc32_8bytes_BB__0_13
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @crc32_byte(i8 zeroext %13) #3 (endState: LEGUP_function_call_14)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_crc32_8bytes_BB__0_15
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @crc32_byte(i8 zeroext %15) #3 (endState: LEGUP_function_call_16)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_crc32_8bytes_BB__0_17
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
End Function: crc32_8bytes
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_32
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_32_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_32_BB__0_1
   store i32 -4, i32* @g_59, align 4 (endState: LEGUP_F_func_32_BB__0_2)
   Transition: default: LEGUP_F_func_32_BB__0_2
state: LEGUP_F_func_32_BB__0_2
   br i1 false, label %1, label %6
   Transition: if (false): LEGUP_F_func_32_BB__1_3 default: LEGUP_F_func_32_BB__6_8
state: LEGUP_F_func_32_BB__1_3
   br i1 undef, label %2, label %3
   Transition: if (undef): LEGUP_F_func_32_BB__2_4 default: LEGUP_F_func_32_BB__3_5
state: LEGUP_F_func_32_BB__2_4
   br label %3
   Transition: default: LEGUP_F_func_32_BB__3_5
state: LEGUP_F_func_32_BB__3_5
   br i1 undef, label %4, label %5
   Transition: if (undef): LEGUP_F_func_32_BB__4_6 default: LEGUP_F_func_32_BB__5_7
state: LEGUP_F_func_32_BB__4_6
   br label %5
   Transition: default: LEGUP_F_func_32_BB__5_7
state: LEGUP_F_func_32_BB__5_7
   br label %6
   Transition: default: LEGUP_F_func_32_BB__6_8
state: LEGUP_F_func_32_BB__6_8
   Transition: default: LEGUP_function_call_9
state: LEGUP_function_call_9
   %7 = call signext i8 @safe_lshift_func_int8_t_s_s(i8 signext 106, i32 5) #3 (endState: LEGUP_function_call_9)
   Transition: if (safe_lshift_func_int8_t_s_s_finish_final): LEGUP_F_func_32_BB__6_10 default: LEGUP_function_call_9
state: LEGUP_F_func_32_BB__6_10
   %8 = sext i8 %7 to i32 (endState: LEGUP_F_func_32_BB__6_10)
   %9 = load i16* @g_55, align 2 (endState: LEGUP_F_func_32_BB__6_12)
   Transition: default: LEGUP_F_func_32_BB__6_11
state: LEGUP_F_func_32_BB__6_11
   Transition: default: LEGUP_F_func_32_BB__6_12
state: LEGUP_F_func_32_BB__6_12
   %10 = sext i16 %9 to i32 (endState: LEGUP_F_func_32_BB__6_12)
   Transition: default: LEGUP_function_call_13
state: LEGUP_function_call_13
   %11 = call signext i8 @safe_lshift_func_int8_t_s_u(i8 signext 0, i32 7) #3 (endState: LEGUP_function_call_13)
   Transition: if (safe_lshift_func_int8_t_s_u_finish_final): LEGUP_F_func_32_BB__6_14 default: LEGUP_function_call_13
state: LEGUP_F_func_32_BB__6_14
   %12 = sext i8 %11 to i32 (endState: LEGUP_F_func_32_BB__6_14)
   %13 = icmp sgt i32 %10, %12 (endState: LEGUP_F_func_32_BB__6_14)
   %14 = zext i1 %13 to i32 (endState: LEGUP_F_func_32_BB__6_14)
   %15 = icmp eq i32 %8, %14 (endState: LEGUP_F_func_32_BB__6_14)
   br i1 %15, label %16, label %65
   Transition: if (%15): LEGUP_F_func_32_BB__16_15 default: LEGUP_F_func_32_BB__65_55
state: LEGUP_F_func_32_BB__16_15
   %17 = load i16* @g_55, align 2 (endState: LEGUP_F_func_32_BB__16_17)
   %19 = load i32* @g_59, align 4 (endState: LEGUP_F_func_32_BB__16_17)
   Transition: default: LEGUP_F_func_32_BB__16_16
state: LEGUP_F_func_32_BB__16_16
   Transition: default: LEGUP_F_func_32_BB__16_17
state: LEGUP_F_func_32_BB__16_17
   %18 = sext i16 %17 to i32 (endState: LEGUP_F_func_32_BB__16_17)
   %20 = trunc i32 %19 to i16 (endState: LEGUP_F_func_32_BB__16_17)
   %21 = trunc i32 %19 to i16 (endState: LEGUP_F_func_32_BB__16_17)
   Transition: default: LEGUP_function_call_18
state: LEGUP_function_call_18
   %22 = call zeroext i16 @safe_mul_func_uint16_t_u_u(i16 zeroext %20, i16 zeroext %21) #3 (endState: LEGUP_function_call_18)
   Transition: if (safe_mul_func_uint16_t_u_u_finish_final): LEGUP_F_func_32_BB__16_19 default: LEGUP_function_call_18
state: LEGUP_F_func_32_BB__16_19
   %23 = icmp eq i16 %22, 0 (endState: LEGUP_F_func_32_BB__16_19)
   br i1 %23, label %43, label %24
   Transition: if (%23): LEGUP_F_func_32_BB__43_37 default: LEGUP_F_func_32_BB__24_20
state: LEGUP_F_func_32_BB__24_20
   %25 = sext i8 %p_33 to i16 (endState: LEGUP_F_func_32_BB__24_20)
   Transition: default: LEGUP_function_call_21
state: LEGUP_function_call_21
   %26 = call signext i16 @safe_div_func_int16_t_s_s(i16 signext -6, i16 signext %25) #3 (endState: LEGUP_function_call_21)
   Transition: if (safe_div_func_int16_t_s_s_finish_final): LEGUP_F_func_32_BB__24_22 default: LEGUP_function_call_21
state: LEGUP_F_func_32_BB__24_22
   %27 = trunc i16 %26 to i8 (endState: LEGUP_F_func_32_BB__24_22)
   Transition: default: LEGUP_function_call_23
state: LEGUP_function_call_23
   %28 = call signext i8 @safe_rshift_func_int8_t_s_u(i8 signext %27, i32 -8) #3 (endState: LEGUP_function_call_23)
   Transition: if (safe_rshift_func_int8_t_s_u_finish_final): LEGUP_F_func_32_BB__24_24 default: LEGUP_function_call_23
state: LEGUP_F_func_32_BB__24_24
   br i1 true, label %29, label %30
   Transition: if (true): LEGUP_F_func_32_BB__29_25 default: LEGUP_F_func_32_BB__30_26
state: LEGUP_F_func_32_BB__29_25
   br label %30
   Transition: default: LEGUP_F_func_32_BB__30_26
state: LEGUP_F_func_32_BB__30_26
   %31 = phi i16 [ 0, %24 ], [ 1, %29 ] (endState: LEGUP_F_func_32_BB__30_26)
   %32 = sext i16 %p_34 to i32 (endState: LEGUP_F_func_32_BB__30_26)
   Transition: default: LEGUP_function_call_27
state: LEGUP_function_call_27
   %33 = call signext i16 @safe_lshift_func_int16_t_s_s(i16 signext %31, i32 %32) #3 (endState: LEGUP_function_call_27)
   Transition: if (safe_lshift_func_int16_t_s_s_finish_final): LEGUP_F_func_32_BB__30_28 default: LEGUP_function_call_27
state: LEGUP_F_func_32_BB__30_28
   %34 = load i16* @g_81, align 2 (endState: LEGUP_F_func_32_BB__30_30)
   Transition: default: LEGUP_F_func_32_BB__30_29
state: LEGUP_F_func_32_BB__30_29
   Transition: default: LEGUP_F_func_32_BB__30_30
state: LEGUP_F_func_32_BB__30_30
   %35 = zext i16 %34 to i32 (endState: LEGUP_F_func_32_BB__30_30)
   %36 = zext i16 %34 to i32 (endState: LEGUP_F_func_32_BB__30_30)
   Transition: default: LEGUP_function_call_31
state: LEGUP_function_call_31
   %37 = call i32 @safe_add_func_uint32_t_u_u(i32 %35, i32 %36) #3 (endState: LEGUP_function_call_31)
   Transition: if (safe_add_func_uint32_t_u_u_finish_final): LEGUP_F_func_32_BB__30_32 default: LEGUP_function_call_31
state: LEGUP_F_func_32_BB__30_32
   %38 = load i32* @g_54, align 4 (endState: LEGUP_F_func_32_BB__30_34)
   Transition: default: LEGUP_F_func_32_BB__30_33
state: LEGUP_F_func_32_BB__30_33
   Transition: default: LEGUP_F_func_32_BB__30_34
state: LEGUP_F_func_32_BB__30_34
   %39 = xor i32 %37, %38 (endState: LEGUP_F_func_32_BB__30_34)
   %40 = trunc i32 %39 to i8 (endState: LEGUP_F_func_32_BB__30_34)
   Transition: default: LEGUP_function_call_35
state: LEGUP_function_call_35
   %41 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %40, i8 signext 1) #3 (endState: LEGUP_function_call_35)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_32_BB__30_36 default: LEGUP_function_call_35
state: LEGUP_F_func_32_BB__30_36
   %42 = icmp ugt i8 %41, 7 (endState: LEGUP_F_func_32_BB__30_36)
   br label %43
   Transition: default: LEGUP_F_func_32_BB__43_37
state: LEGUP_F_func_32_BB__43_37
   %44 = phi i1 [ false, %16 ], [ %42, %30 ] (endState: LEGUP_F_func_32_BB__43_37)
   %45 = zext i1 %44 to i8 (endState: LEGUP_F_func_32_BB__43_37)
   %46 = load i32* @g_54, align 4 (endState: LEGUP_F_func_32_BB__43_39)
   %56 = sext i16 %p_35 to i32 (endState: LEGUP_F_func_32_BB__43_37)
   Transition: default: LEGUP_F_func_32_BB__43_38
state: LEGUP_F_func_32_BB__43_38
   Transition: default: LEGUP_F_func_32_BB__43_39
state: LEGUP_F_func_32_BB__43_39
   %47 = trunc i32 %46 to i8 (endState: LEGUP_F_func_32_BB__43_39)
   Transition: default: LEGUP_function_call_40
state: LEGUP_function_call_40
   %48 = call zeroext i8 @safe_mul_func_uint8_t_u_u(i8 zeroext %45, i8 zeroext %47) #3 (endState: LEGUP_function_call_40)
   Transition: if (safe_mul_func_uint8_t_u_u_finish_final): LEGUP_F_func_32_BB__43_41 default: LEGUP_function_call_40
state: LEGUP_F_func_32_BB__43_41
   %49 = zext i8 %48 to i32 (endState: LEGUP_F_func_32_BB__43_41)
   store i32 %49, i32* @g_119, align 4 (endState: LEGUP_F_func_32_BB__43_42)
   %50 = icmp ugt i8 %48, 1 (endState: LEGUP_F_func_32_BB__43_41)
   %51 = zext i1 %50 to i16 (endState: LEGUP_F_func_32_BB__43_41)
   Transition: default: LEGUP_F_func_32_BB__43_42
state: LEGUP_F_func_32_BB__43_42
   Transition: default: LEGUP_function_call_43
state: LEGUP_function_call_43
   %52 = call zeroext i16 @safe_lshift_func_uint16_t_u_u(i16 zeroext %51, i32 11) #3 (endState: LEGUP_function_call_43)
   Transition: if (safe_lshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_32_BB__43_44 default: LEGUP_function_call_43
state: LEGUP_F_func_32_BB__43_44
   Transition: default: LEGUP_function_call_45
state: LEGUP_function_call_45
   %53 = call zeroext i16 @safe_rshift_func_uint16_t_u_u(i16 zeroext %52, i32 4) #3 (endState: LEGUP_function_call_45)
   Transition: if (safe_rshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_32_BB__43_46 default: LEGUP_function_call_45
state: LEGUP_F_func_32_BB__43_46
   %54 = icmp ult i16 %53, 2 (endState: LEGUP_F_func_32_BB__43_46)
   %55 = zext i1 %54 to i32 (endState: LEGUP_F_func_32_BB__43_46)
   %57 = icmp sge i32 %55, %56 (endState: LEGUP_F_func_32_BB__43_46)
   %58 = zext i1 %57 to i32 (endState: LEGUP_F_func_32_BB__43_46)
   Transition: default: LEGUP_function_call_47
state: LEGUP_function_call_47
   %59 = call i32 @safe_mod_func_uint32_t_u_u(i32 %58, i32 1613989556) #3 (endState: LEGUP_function_call_47)
   Transition: if (safe_mod_func_uint32_t_u_u_finish_final): LEGUP_F_func_32_BB__43_48 default: LEGUP_function_call_47
state: LEGUP_F_func_32_BB__43_48
   %60 = icmp ne i32 %18, %59 (endState: LEGUP_F_func_32_BB__43_48)
   %61 = zext i1 %60 to i16 (endState: LEGUP_F_func_32_BB__43_48)
   Transition: default: LEGUP_function_call_49
state: LEGUP_function_call_49
   %62 = call signext i16 @safe_rshift_func_int16_t_s_s(i16 signext %61, i32 2) #3 (endState: LEGUP_function_call_49)
   Transition: if (safe_rshift_func_int16_t_s_s_finish_final): LEGUP_F_func_32_BB__43_50 default: LEGUP_function_call_49
state: LEGUP_F_func_32_BB__43_50
   %63 = load i32* @g_3, align 4 (endState: LEGUP_F_func_32_BB__43_52)
   Transition: default: LEGUP_F_func_32_BB__43_51
state: LEGUP_F_func_32_BB__43_51
   Transition: default: LEGUP_F_func_32_BB__43_52
state: LEGUP_F_func_32_BB__43_52
   Transition: default: LEGUP_function_call_53
state: LEGUP_function_call_53
   %64 = call i32 @safe_add_func_uint32_t_u_u(i32 %63, i32 255) #3 (endState: LEGUP_function_call_53)
   Transition: if (safe_add_func_uint32_t_u_u_finish_final): LEGUP_F_func_32_BB__43_54 default: LEGUP_function_call_53
state: LEGUP_F_func_32_BB__43_54
   br label %65
   Transition: default: LEGUP_F_func_32_BB__65_55
state: LEGUP_F_func_32_BB__65_55
   Transition: default: LEGUP_function_call_56
state: LEGUP_function_call_56
   %66 = call i32 @safe_add_func_uint32_t_u_u(i32 1, i32 -4) #3 (endState: LEGUP_function_call_56)
   Transition: if (safe_add_func_uint32_t_u_u_finish_final): LEGUP_F_func_32_BB__65_57 default: LEGUP_function_call_56
state: LEGUP_F_func_32_BB__65_57
   %67 = trunc i32 %66 to i16 (endState: LEGUP_F_func_32_BB__65_57)
   Transition: default: LEGUP_function_call_58
state: LEGUP_function_call_58
   %68 = call zeroext i16 @safe_mul_func_uint16_t_u_u(i16 zeroext %67, i16 zeroext %p_34) #3 (endState: LEGUP_function_call_58)
   Transition: if (safe_mul_func_uint16_t_u_u_finish_final): LEGUP_F_func_32_BB__65_59 default: LEGUP_function_call_58
state: LEGUP_F_func_32_BB__65_59
   %69 = load i32* @g_119, align 4 (endState: LEGUP_F_func_32_BB__65_61)
   Transition: default: LEGUP_F_func_32_BB__65_60
state: LEGUP_F_func_32_BB__65_60
   Transition: default: LEGUP_F_func_32_BB__65_61
state: LEGUP_F_func_32_BB__65_61
   %70 = trunc i32 %69 to i8 (endState: LEGUP_F_func_32_BB__65_61)
   ret i8 %70
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
Basic Block: %1 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %6 Num States: 7
Basic Block: %16 Num States: 5
Basic Block: %24 Num States: 5
Basic Block: %29 Num States: 1
Basic Block: %30 Num States: 11
Basic Block: %43 Num States: 18
Basic Block: %65 Num States: 7
End Function: func_32
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_1_BB__0_1
   %l_31 = alloca [6 x [3 x [6 x i32]]], align 4 (endState: LEGUP_F_func_1_BB__0_1)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__1_2
   %storemerge = phi i32 [ 0, %0 ], [ %73, %71 ] (endState: LEGUP_F_func_1_BB__1_2)
   %l_4.0 = phi i16 [ 5100, %0 ], [ %24, %71 ] (endState: LEGUP_F_func_1_BB__1_2)
   store i32 %storemerge, i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__1_3)
   %2 = icmp eq i32 %storemerge, 54 (endState: LEGUP_F_func_1_BB__1_2)
   Transition: default: LEGUP_F_func_1_BB__1_3
state: LEGUP_F_func_1_BB__1_3
   br i1 %2, label %74, label %3
   Transition: if (%2): LEGUP_F_func_1_BB__74_74 default: LEGUP_F_func_1_BB__3_4
state: LEGUP_F_func_1_BB__3_4
   %4 = bitcast [6 x [3 x [6 x i32]]]* %l_31 to i8* (endState: LEGUP_F_func_1_BB__3_4)
   Transition: default: LEGUP_function_call_5
state: LEGUP_function_call_5
   call void @legup_memcpy_4(i8* %4, i8* bitcast ([6 x [3 x [6 x i32]]]* @func_1.l_31 to i8*), i32 432) (endState: LEGUP_function_call_5)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_1_BB__3_6 default: LEGUP_function_call_5
state: LEGUP_F_func_1_BB__3_6
   Transition: default: LEGUP_function_call_7
state: LEGUP_function_call_7
   %5 = call zeroext i16 @func_11(i16 zeroext -1) #3 (endState: LEGUP_function_call_7)
   Transition: if (func_11_finish_final): LEGUP_F_func_1_BB__3_8 default: LEGUP_function_call_7
state: LEGUP_F_func_1_BB__3_8
   Transition: default: LEGUP_function_call_9
state: LEGUP_function_call_9
   %6 = call zeroext i16 @func_11(i16 zeroext 5100) #3 (endState: LEGUP_function_call_9)
   Transition: if (func_11_finish_final): LEGUP_F_func_1_BB__3_10 default: LEGUP_function_call_9
state: LEGUP_F_func_1_BB__3_10
   %7 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__3_12)
   Transition: default: LEGUP_F_func_1_BB__3_11
state: LEGUP_F_func_1_BB__3_11
   Transition: default: LEGUP_F_func_1_BB__3_12
state: LEGUP_F_func_1_BB__3_12
   %8 = trunc i32 %7 to i16 (endState: LEGUP_F_func_1_BB__3_12)
   %9 = icmp eq i32 %7, 0 (endState: LEGUP_F_func_1_BB__3_12)
   br i1 %9, label %11, label %10
   Transition: if (%9): LEGUP_F_func_1_BB__11_14 default: LEGUP_F_func_1_BB__10_13
state: LEGUP_F_func_1_BB__10_13
   br label %11
   Transition: default: LEGUP_F_func_1_BB__11_14
state: LEGUP_F_func_1_BB__11_14
   %12 = phi i32 [ 0, %3 ], [ 1, %10 ] (endState: LEGUP_F_func_1_BB__11_14)
   %13 = or i32 %7, %12 (endState: LEGUP_F_func_1_BB__11_14)
   %14 = trunc i32 %13 to i16 (endState: LEGUP_F_func_1_BB__11_14)
   Transition: default: LEGUP_function_call_15
state: LEGUP_function_call_15
   %15 = call zeroext i16 @safe_mul_func_uint16_t_u_u(i16 zeroext %14, i16 zeroext %l_4.0) #3 (endState: LEGUP_function_call_15)
   Transition: if (safe_mul_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__11_16 default: LEGUP_function_call_15
state: LEGUP_F_func_1_BB__11_16
   %16 = zext i16 %15 to i32 (endState: LEGUP_F_func_1_BB__11_16)
   Transition: default: LEGUP_function_call_17
state: LEGUP_function_call_17
   %17 = call i32 @safe_mod_func_uint32_t_u_u(i32 %7, i32 %16) #3 (endState: LEGUP_function_call_17)
   Transition: if (safe_mod_func_uint32_t_u_u_finish_final): LEGUP_F_func_1_BB__11_18 default: LEGUP_function_call_17
state: LEGUP_F_func_1_BB__11_18
   Transition: default: LEGUP_function_call_19
state: LEGUP_function_call_19
   %18 = call zeroext i16 @safe_sub_func_uint16_t_u_u(i16 zeroext %8, i16 zeroext 0) #3 (endState: LEGUP_function_call_19)
   Transition: if (safe_sub_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__11_20 default: LEGUP_function_call_19
state: LEGUP_F_func_1_BB__11_20
   %19 = icmp eq i16 %18, 0 (endState: LEGUP_F_func_1_BB__11_20)
   br i1 %19, label %20, label %21
   Transition: if (%19): LEGUP_F_func_1_BB__20_21 default: LEGUP_F_func_1_BB__21_22
state: LEGUP_F_func_1_BB__20_21
   br label %21
   Transition: default: LEGUP_F_func_1_BB__21_22
state: LEGUP_F_func_1_BB__21_22
   %22 = phi i16 [ 1, %11 ], [ 0, %20 ] (endState: LEGUP_F_func_1_BB__21_22)
   %23 = xor i16 %6, %22 (endState: LEGUP_F_func_1_BB__21_22)
   %27 = getelementptr inbounds [6 x [3 x [6 x i32]]]* %l_31, i32 0, i32 4, i32 2, i32 5 (endState: LEGUP_F_func_1_BB__21_22)
   Transition: default: LEGUP_function_call_23
state: LEGUP_function_call_23
   %24 = call zeroext i16 @safe_add_func_uint16_t_u_u(i16 zeroext %5, i16 zeroext %23) #3 (endState: LEGUP_function_call_23)
   Transition: if (safe_add_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__21_24 default: LEGUP_function_call_23
state: LEGUP_F_func_1_BB__21_24
   %25 = zext i16 %24 to i32 (endState: LEGUP_F_func_1_BB__21_24)
   %26 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__21_26)
   %28 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__21_26)
   %30 = trunc i16 %24 to i8 (endState: LEGUP_F_func_1_BB__21_24)
   Transition: default: LEGUP_F_func_1_BB__21_25
state: LEGUP_F_func_1_BB__21_25
   Transition: default: LEGUP_F_func_1_BB__21_26
state: LEGUP_F_func_1_BB__21_26
   store i32 %26, i32* %27, align 4 (endState: LEGUP_F_func_1_BB__21_27)
   %29 = trunc i32 %28 to i8 (endState: LEGUP_F_func_1_BB__21_26)
   Transition: default: LEGUP_F_func_1_BB__21_27
state: LEGUP_F_func_1_BB__21_27
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   %31 = call zeroext i8 @safe_lshift_func_uint8_t_u_s(i8 zeroext %30, i32 1) #3 (endState: LEGUP_function_call_28)
   Transition: if (safe_lshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_1_BB__21_29 default: LEGUP_function_call_28
state: LEGUP_F_func_1_BB__21_29
   %32 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__21_31)
   Transition: default: LEGUP_F_func_1_BB__21_30
state: LEGUP_F_func_1_BB__21_30
   Transition: default: LEGUP_F_func_1_BB__21_31
state: LEGUP_F_func_1_BB__21_31
   %33 = icmp eq i32 %32, 0 (endState: LEGUP_F_func_1_BB__21_31)
   br i1 %33, label %34, label %35
   Transition: if (%33): LEGUP_F_func_1_BB__34_32 default: LEGUP_F_func_1_BB__35_33
state: LEGUP_F_func_1_BB__34_32
   br label %35
   Transition: default: LEGUP_F_func_1_BB__35_33
state: LEGUP_F_func_1_BB__35_33
   Transition: default: LEGUP_function_call_34
state: LEGUP_function_call_34
   %36 = call i32 @safe_div_func_int32_t_s_s(i32 %28, i32 1) #3 (endState: LEGUP_function_call_34)
   Transition: if (safe_div_func_int32_t_s_s_finish_final): LEGUP_F_func_1_BB__35_35 default: LEGUP_function_call_34
state: LEGUP_F_func_1_BB__35_35
   %37 = trunc i32 %36 to i8 (endState: LEGUP_F_func_1_BB__35_35)
   %38 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__35_37)
   Transition: default: LEGUP_F_func_1_BB__35_36
state: LEGUP_F_func_1_BB__35_36
   Transition: default: LEGUP_F_func_1_BB__35_37
state: LEGUP_F_func_1_BB__35_37
   %39 = trunc i32 %38 to i8 (endState: LEGUP_F_func_1_BB__35_37)
   Transition: default: LEGUP_function_call_38
state: LEGUP_function_call_38
   %40 = call signext i8 @safe_add_func_int8_t_s_s(i8 signext %37, i8 signext %39) #3 (endState: LEGUP_function_call_38)
   Transition: if (safe_add_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__35_39 default: LEGUP_function_call_38
state: LEGUP_F_func_1_BB__35_39
   %41 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__35_41)
   Transition: default: LEGUP_F_func_1_BB__35_40
state: LEGUP_F_func_1_BB__35_40
   Transition: default: LEGUP_F_func_1_BB__35_41
state: LEGUP_F_func_1_BB__35_41
   %42 = trunc i32 %41 to i16 (endState: LEGUP_F_func_1_BB__35_41)
   %43 = trunc i32 %41 to i16 (endState: LEGUP_F_func_1_BB__35_41)
   Transition: default: LEGUP_function_call_42
state: LEGUP_function_call_42
   %44 = call zeroext i8 @func_39(i8 zeroext %29, i16 zeroext %42, i16 signext %43) #3 (endState: LEGUP_function_call_42)
   Transition: if (func_39_finish_final): LEGUP_F_func_1_BB__35_43 default: LEGUP_function_call_42
state: LEGUP_F_func_1_BB__35_43
   %45 = xor i8 %44, -9 (endState: LEGUP_F_func_1_BB__35_43)
   %46 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__35_45)
   Transition: default: LEGUP_F_func_1_BB__35_44
state: LEGUP_F_func_1_BB__35_44
   Transition: default: LEGUP_F_func_1_BB__35_45
state: LEGUP_F_func_1_BB__35_45
   Transition: default: LEGUP_function_call_46
state: LEGUP_function_call_46
   %47 = call signext i8 @safe_rshift_func_int8_t_s_u(i8 signext %45, i32 %46) #3 (endState: LEGUP_function_call_46)
   Transition: if (safe_rshift_func_int8_t_s_u_finish_final): LEGUP_F_func_1_BB__35_47 default: LEGUP_function_call_46
state: LEGUP_F_func_1_BB__35_47
   %48 = sext i8 %47 to i16 (endState: LEGUP_F_func_1_BB__35_47)
   %49 = and i16 %48, -10715 (endState: LEGUP_F_func_1_BB__35_47)
   Transition: default: LEGUP_function_call_48
state: LEGUP_function_call_48
   %50 = call zeroext i8 @func_32(i8 signext -1, i16 signext %49, i16 signext -1, i32 %25) #3 (endState: LEGUP_function_call_48)
   Transition: if (func_32_finish_final): LEGUP_F_func_1_BB__35_49 default: LEGUP_function_call_48
state: LEGUP_F_func_1_BB__35_49
   %51 = zext i8 %50 to i32 (endState: LEGUP_F_func_1_BB__35_49)
   %52 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__35_51)
   %57 = load i16* @g_55, align 2 (endState: LEGUP_F_func_1_BB__35_51)
   Transition: default: LEGUP_F_func_1_BB__35_50
state: LEGUP_F_func_1_BB__35_50
   Transition: default: LEGUP_F_func_1_BB__35_51
state: LEGUP_F_func_1_BB__35_51
   %53 = icmp eq i32 %51, %52 (endState: LEGUP_F_func_1_BB__35_51)
   %54 = zext i1 %53 to i32 (endState: LEGUP_F_func_1_BB__35_51)
   %55 = or i32 %26, %54 (endState: LEGUP_F_func_1_BB__35_51)
   %56 = trunc i32 %55 to i16 (endState: LEGUP_F_func_1_BB__35_51)
   Transition: default: LEGUP_function_call_52
state: LEGUP_function_call_52
   %58 = call zeroext i16 @safe_sub_func_uint16_t_u_u(i16 zeroext %56, i16 zeroext %57) #3 (endState: LEGUP_function_call_52)
   Transition: if (safe_sub_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__35_53 default: LEGUP_function_call_52
state: LEGUP_F_func_1_BB__35_53
   Transition: default: LEGUP_function_call_54
state: LEGUP_function_call_54
   %59 = call zeroext i16 @safe_lshift_func_uint16_t_u_s(i16 zeroext 5100, i32 15) #3 (endState: LEGUP_function_call_54)
   Transition: if (safe_lshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_1_BB__35_55 default: LEGUP_function_call_54
state: LEGUP_F_func_1_BB__35_55
   %60 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__35_57)
   Transition: default: LEGUP_F_func_1_BB__35_56
state: LEGUP_F_func_1_BB__35_56
   Transition: default: LEGUP_F_func_1_BB__35_57
state: LEGUP_F_func_1_BB__35_57
   %61 = trunc i32 %60 to i16 (endState: LEGUP_F_func_1_BB__35_57)
   Transition: default: LEGUP_function_call_58
state: LEGUP_function_call_58
   %62 = call zeroext i16 @safe_sub_func_uint16_t_u_u(i16 zeroext %59, i16 zeroext %61) #3 (endState: LEGUP_function_call_58)
   Transition: if (safe_sub_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__35_59 default: LEGUP_function_call_58
state: LEGUP_F_func_1_BB__35_59
   Transition: default: LEGUP_function_call_60
state: LEGUP_function_call_60
   %63 = call zeroext i16 @safe_div_func_uint16_t_u_u(i16 zeroext %62, i16 zeroext -1) #3 (endState: LEGUP_function_call_60)
   Transition: if (safe_div_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__35_61 default: LEGUP_function_call_60
state: LEGUP_F_func_1_BB__35_61
   %64 = load i32* @g_54, align 4 (endState: LEGUP_F_func_1_BB__35_63)
   Transition: default: LEGUP_F_func_1_BB__35_62
state: LEGUP_F_func_1_BB__35_62
   Transition: default: LEGUP_F_func_1_BB__35_63
state: LEGUP_F_func_1_BB__35_63
   Transition: default: LEGUP_function_call_64
state: LEGUP_function_call_64
   %65 = call zeroext i8 @safe_rshift_func_uint8_t_u_s(i8 zeroext 25, i32 %64) #3 (endState: LEGUP_function_call_64)
   Transition: if (safe_rshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_1_BB__35_65 default: LEGUP_function_call_64
state: LEGUP_F_func_1_BB__35_65
   %66 = icmp eq i8 %65, 0 (endState: LEGUP_F_func_1_BB__35_65)
   %67 = zext i1 %66 to i16 (endState: LEGUP_F_func_1_BB__35_65)
   Transition: default: LEGUP_function_call_66
state: LEGUP_function_call_66
   %68 = call zeroext i16 @func_11(i16 zeroext %67) #3 (endState: LEGUP_function_call_66)
   Transition: if (func_11_finish_final): LEGUP_F_func_1_BB__35_67 default: LEGUP_function_call_66
state: LEGUP_F_func_1_BB__35_67
   %69 = load i16* @g_123, align 2 (endState: LEGUP_F_func_1_BB__35_69)
   Transition: default: LEGUP_F_func_1_BB__35_68
state: LEGUP_F_func_1_BB__35_68
   Transition: default: LEGUP_F_func_1_BB__35_69
state: LEGUP_F_func_1_BB__35_69
   %70 = and i16 %69, %68 (endState: LEGUP_F_func_1_BB__35_69)
   store i16 %70, i16* @g_123, align 2 (endState: LEGUP_F_func_1_BB__35_70)
   Transition: default: LEGUP_F_func_1_BB__35_70
state: LEGUP_F_func_1_BB__35_70
   br label %71
   Transition: default: LEGUP_F_func_1_BB__71_71
state: LEGUP_F_func_1_BB__71_71
   %72 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__71_73)
   Transition: default: LEGUP_F_func_1_BB__71_72
state: LEGUP_F_func_1_BB__71_72
   Transition: default: LEGUP_F_func_1_BB__71_73
state: LEGUP_F_func_1_BB__71_73
   %73 = add i32 %72, 1 (endState: LEGUP_F_func_1_BB__71_73)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__74_74
   %75 = load i16* @g_81, align 2 (endState: LEGUP_F_func_1_BB__74_76)
   Transition: default: LEGUP_F_func_1_BB__74_75
state: LEGUP_F_func_1_BB__74_75
   Transition: default: LEGUP_F_func_1_BB__74_76
state: LEGUP_F_func_1_BB__74_76
   %76 = zext i16 %75 to i32 (endState: LEGUP_F_func_1_BB__74_76)
   ret i32 %76
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 2
Basic Block: %3 Num States: 9
Basic Block: %10 Num States: 1
Basic Block: %11 Num States: 7
Basic Block: %20 Num States: 1
Basic Block: %21 Num States: 10
Basic Block: %34 Num States: 1
Basic Block: %35 Num States: 38
Basic Block: %71 Num States: 3
Basic Block: %74 Num States: 3
End Function: func_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: transparent_crc
state: LEGUP_0
   Transition: if (start): LEGUP_F_transparent_crc_BB__0_1 default: LEGUP_0
state: LEGUP_F_transparent_crc_BB__0_1
   %1 = icmp eq i32 %flag, 0 (endState: LEGUP_F_transparent_crc_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_8bytes(i64 %val) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_8bytes_finish_final): LEGUP_F_transparent_crc_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_transparent_crc_BB__0_3
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_transparent_crc_BB__6_7 default: LEGUP_F_transparent_crc_BB__2_4
state: LEGUP_F_transparent_crc_BB__2_4
   %3 = load i32* @crc32_context, align 4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   Transition: default: LEGUP_F_transparent_crc_BB__2_5
state: LEGUP_F_transparent_crc_BB__2_5
   Transition: default: LEGUP_F_transparent_crc_BB__2_6
state: LEGUP_F_transparent_crc_BB__2_6
   %4 = xor i32 %3, -1 (endState: LEGUP_F_transparent_crc_BB__2_6)
   %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str9, i32 0, i32 0), i8* %vname, i32 %4) #4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   br label %6
   Transition: default: LEGUP_F_transparent_crc_BB__6_7
state: LEGUP_F_transparent_crc_BB__6_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %2 Num States: 3
Basic Block: %6 Num States: 1
Basic Block: %0 Num States: 3
End Function: transparent_crc
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @platform_main_begin() #3 (endState: LEGUP_function_call_2)
   Transition: if (platform_main_begin_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_gentab() #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_gentab_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %1 = call i32 @func_1() #3 (endState: LEGUP_function_call_6)
   Transition: if (func_1_finish_final): LEGUP_F_main_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB__0_7
   %2 = load i32* @g_3, align 4 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   %3 = zext i32 %2 to i64 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @transparent_crc(i64 %3, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_10)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB__0_11
   %4 = load volatile i8* @g_51, align 1 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_F_main_BB__0_12
state: LEGUP_F_main_BB__0_12
   Transition: default: LEGUP_F_main_BB__0_13
state: LEGUP_F_main_BB__0_13
   %5 = zext i8 %4 to i64 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @transparent_crc(i64 %5, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_14)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_main_BB__0_15
   %6 = load i32* @g_54, align 4 (endState: LEGUP_F_main_BB__0_17)
   Transition: default: LEGUP_F_main_BB__0_16
state: LEGUP_F_main_BB__0_16
   Transition: default: LEGUP_F_main_BB__0_17
state: LEGUP_F_main_BB__0_17
   %7 = sext i32 %6 to i64 (endState: LEGUP_F_main_BB__0_17)
   Transition: default: LEGUP_function_call_18
state: LEGUP_function_call_18
   call void @transparent_crc(i64 %7, i8* getelementptr inbounds ([5 x i8]* @.str2, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_18)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_19 default: LEGUP_function_call_18
state: LEGUP_F_main_BB__0_19
   %8 = load i16* @g_55, align 2 (endState: LEGUP_F_main_BB__0_21)
   Transition: default: LEGUP_F_main_BB__0_20
state: LEGUP_F_main_BB__0_20
   Transition: default: LEGUP_F_main_BB__0_21
state: LEGUP_F_main_BB__0_21
   %9 = sext i16 %8 to i64 (endState: LEGUP_F_main_BB__0_21)
   Transition: default: LEGUP_function_call_22
state: LEGUP_function_call_22
   call void @transparent_crc(i64 %9, i8* getelementptr inbounds ([5 x i8]* @.str3, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_22)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_23 default: LEGUP_function_call_22
state: LEGUP_F_main_BB__0_23
   %10 = load i32* @g_59, align 4 (endState: LEGUP_F_main_BB__0_25)
   Transition: default: LEGUP_F_main_BB__0_24
state: LEGUP_F_main_BB__0_24
   Transition: default: LEGUP_F_main_BB__0_25
state: LEGUP_F_main_BB__0_25
   %11 = sext i32 %10 to i64 (endState: LEGUP_F_main_BB__0_25)
   Transition: default: LEGUP_function_call_26
state: LEGUP_function_call_26
   call void @transparent_crc(i64 %11, i8* getelementptr inbounds ([5 x i8]* @.str4, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_26)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_27 default: LEGUP_function_call_26
state: LEGUP_F_main_BB__0_27
   %12 = load i16* @g_81, align 2 (endState: LEGUP_F_main_BB__0_29)
   Transition: default: LEGUP_F_main_BB__0_28
state: LEGUP_F_main_BB__0_28
   Transition: default: LEGUP_F_main_BB__0_29
state: LEGUP_F_main_BB__0_29
   %13 = zext i16 %12 to i64 (endState: LEGUP_F_main_BB__0_29)
   Transition: default: LEGUP_function_call_30
state: LEGUP_function_call_30
   call void @transparent_crc(i64 %13, i8* getelementptr inbounds ([5 x i8]* @.str5, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_30)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_31 default: LEGUP_function_call_30
state: LEGUP_F_main_BB__0_31
   %14 = load i32* @g_119, align 4 (endState: LEGUP_F_main_BB__0_33)
   Transition: default: LEGUP_F_main_BB__0_32
state: LEGUP_F_main_BB__0_32
   Transition: default: LEGUP_F_main_BB__0_33
state: LEGUP_F_main_BB__0_33
   %15 = sext i32 %14 to i64 (endState: LEGUP_F_main_BB__0_33)
   Transition: default: LEGUP_function_call_34
state: LEGUP_function_call_34
   call void @transparent_crc(i64 %15, i8* getelementptr inbounds ([6 x i8]* @.str6, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_34)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_35 default: LEGUP_function_call_34
state: LEGUP_F_main_BB__0_35
   %16 = load i16* @g_123, align 2 (endState: LEGUP_F_main_BB__0_37)
   Transition: default: LEGUP_F_main_BB__0_36
state: LEGUP_F_main_BB__0_36
   Transition: default: LEGUP_F_main_BB__0_37
state: LEGUP_F_main_BB__0_37
   %17 = sext i16 %16 to i64 (endState: LEGUP_F_main_BB__0_37)
   Transition: default: LEGUP_function_call_38
state: LEGUP_function_call_38
   call void @transparent_crc(i64 %17, i8* getelementptr inbounds ([6 x i8]* @.str7, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_38)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_39 default: LEGUP_function_call_38
state: LEGUP_F_main_BB__0_39
   %18 = load i32* @crc32_context, align 4 (endState: LEGUP_F_main_BB__0_41)
   Transition: default: LEGUP_F_main_BB__0_40
state: LEGUP_F_main_BB__0_40
   Transition: default: LEGUP_F_main_BB__0_41
state: LEGUP_F_main_BB__0_41
   %19 = xor i32 %18, -1 (endState: LEGUP_F_main_BB__0_41)
   Transition: default: LEGUP_function_call_42
state: LEGUP_function_call_42
   %20 = call i32 @platform_main_end(i32 %19, i32 0) #3 (endState: LEGUP_function_call_42)
   Transition: if (platform_main_end_finish_final): LEGUP_F_main_BB__0_43 default: LEGUP_function_call_42
state: LEGUP_F_main_BB__0_43
   ret i32 %20
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 43
End Function: main
--------------------------------------------------------------------------------

