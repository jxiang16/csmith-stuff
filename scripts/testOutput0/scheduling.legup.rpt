//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Jun 12 20:22:33 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_begin
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_begin_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_begin_BB__0_1
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_begin
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_gentab
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_crc32_gentab_BB__1_1 default: LEGUP_0
state: LEGUP_F_crc32_gentab_BB__1_1
   %2 = phi i32 [ 0, %0 ], [ %17, %16 ] (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %scevgep = getelementptr [256 x i32]* @crc32_tab, i32 0, i32 %2 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %exitcond1 = icmp eq i32 %2, 256 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   br i1 %exitcond1, label %18, label %3
   Transition: if (%exitcond1): LEGUP_F_crc32_gentab_BB__18_12 default: LEGUP_F_crc32_gentab_BB__3_2
state: LEGUP_F_crc32_gentab_BB__3_2
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__4_3
   %indvar = phi i32 [ %indvar.next, %14 ], [ 0, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %crc.0 = phi i32 [ %crc.1, %14 ], [ %2, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %exitcond = icmp eq i32 %indvar, 8 (endState: LEGUP_F_crc32_gentab_BB__4_3)
   br i1 %exitcond, label %15, label %5
   Transition: if (%exitcond): LEGUP_F_crc32_gentab_BB__15_9 default: LEGUP_F_crc32_gentab_BB__5_4
state: LEGUP_F_crc32_gentab_BB__5_4
   %6 = and i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   %7 = icmp eq i32 %6, 0 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   br i1 %7, label %11, label %8
   Transition: if (%7): LEGUP_F_crc32_gentab_BB__11_6 default: LEGUP_F_crc32_gentab_BB__8_5
state: LEGUP_F_crc32_gentab_BB__8_5
   %9 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   %10 = xor i32 %9, -306674912 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__11_6
   %12 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__11_6)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__13_7
   %crc.1 = phi i32 [ %10, %8 ], [ %12, %11 ] (endState: LEGUP_F_crc32_gentab_BB__13_7)
   br label %14
   Transition: default: LEGUP_F_crc32_gentab_BB__14_8
state: LEGUP_F_crc32_gentab_BB__14_8
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_crc32_gentab_BB__14_8)
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__15_9
   store i32 %crc.0, i32* %scevgep, align 4 (endState: LEGUP_F_crc32_gentab_BB__15_10)
   Transition: default: LEGUP_F_crc32_gentab_BB__15_10
state: LEGUP_F_crc32_gentab_BB__15_10
   br label %16
   Transition: default: LEGUP_F_crc32_gentab_BB__16_11
state: LEGUP_F_crc32_gentab_BB__16_11
   %17 = add nsw i32 %2, 1 (endState: LEGUP_F_crc32_gentab_BB__16_11)
   br label %1
   Transition: default: LEGUP_F_crc32_gentab_BB__1_1
state: LEGUP_F_crc32_gentab_BB__18_12
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 2
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
End Function: crc32_gentab
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_end
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_end_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_end_BB__0_1
   %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str6, i32 0, i32 0), i32 %crc) #3 (endState: LEGUP_F_platform_main_end_BB__0_1)
   ret i32 %crc
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_end
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_byte
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_byte_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_byte_BB__0_1
   %1 = load i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %3 = zext i8 %b to i32 (endState: LEGUP_F_crc32_byte_BB__0_1)
   Transition: default: LEGUP_F_crc32_byte_BB__0_2
state: LEGUP_F_crc32_byte_BB__0_2
   Transition: default: LEGUP_F_crc32_byte_BB__0_3
state: LEGUP_F_crc32_byte_BB__0_3
   %2 = lshr i32 %1, 8 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %.masked = and i32 %1, 255 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %4 = xor i32 %.masked, %3 (endState: LEGUP_F_crc32_byte_BB__0_3)
   Transition: default: LEGUP_F_crc32_byte_BB__0_4
state: LEGUP_F_crc32_byte_BB__0_4
   %5 = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i32 %4 (endState: LEGUP_F_crc32_byte_BB__0_4)
   %6 = load i32* %5, align 4 (endState: LEGUP_F_crc32_byte_BB__0_6)
   Transition: default: LEGUP_F_crc32_byte_BB__0_5
state: LEGUP_F_crc32_byte_BB__0_5
   Transition: default: LEGUP_F_crc32_byte_BB__0_6
state: LEGUP_F_crc32_byte_BB__0_6
   %7 = xor i32 %2, %6 (endState: LEGUP_F_crc32_byte_BB__0_6)
   store i32 %7, i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_7)
   Transition: default: LEGUP_F_crc32_byte_BB__0_7
state: LEGUP_F_crc32_byte_BB__0_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 7
End Function: crc32_byte
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1
   %1 = icmp eq i8 %ui2, 0 (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_div_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_3
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__2_2
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_3
   %div = udiv i8 %ui1, %ui2 (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11)
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_4
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_5
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_6
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_7
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_8
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_9
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_10
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__3_11
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
state: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12
   %.in = phi i8 [ %ui1, %2 ], [ %div, %3 ] (endState: LEGUP_F_safe_div_func_uint8_t_u_u_BB__4_12)
   ret i8 %.in
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 9
Basic Block: %4 Num States: 1
End Function: safe_div_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_13
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_13_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_13_BB__0_1
   %1 = load i32* @g_6, align 4 (endState: LEGUP_F_func_13_BB__0_3)
   Transition: default: LEGUP_F_func_13_BB__0_2
state: LEGUP_F_func_13_BB__0_2
   Transition: default: LEGUP_F_func_13_BB__0_3
state: LEGUP_F_func_13_BB__0_3
   ret i32 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
End Function: func_13
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_17
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_17_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_17_BB__0_1
   ret i32 %p_19
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: func_17
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint32_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1
   %1 = add i32 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1)
   ret i32 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint32_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %4
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2
   %3 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__2_2)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3)
   %6 = lshr i32 %5, %right (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__4_3)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4
   %8 = phi i32 [ %3, %2 ], [ %6, %4 ] (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4)
   %9 = trunc i32 %8 to i8 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_u_BB__7_4)
   ret i8 %9
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
End Function: safe_rshift_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1
   %1 = add i8 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_4
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_4_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_4_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %dt = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %st = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %2 = bitcast i8* %d to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32* %2, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %3 = bitcast i8* %s to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %4 = lshr i32 %n, 2 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_2
state: LEGUP_F_legup_memcpy_4_BB__0_2
   store i32* %3, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_3
state: LEGUP_F_legup_memcpy_4_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_5
state: LEGUP_F_legup_memcpy_4_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_6
state: LEGUP_F_legup_memcpy_4_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_7
state: LEGUP_F_legup_memcpy_4_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_4_BB__15_14 default: LEGUP_F_legup_memcpy_4_BB__9_8
state: LEGUP_F_legup_memcpy_4_BB__9_8
   %10 = load i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   %13 = load i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_9
state: LEGUP_F_legup_memcpy_4_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_10
state: LEGUP_F_legup_memcpy_4_BB__9_10
   %11 = getelementptr inbounds i32* %10, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   store i32* %11, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_11)
   %12 = load i32* %10, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   %14 = getelementptr inbounds i32* %13, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_11
state: LEGUP_F_legup_memcpy_4_BB__9_11
   store i32* %14, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_12
state: LEGUP_F_legup_memcpy_4_BB__9_12
   store i32 %12, i32* %13, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_13
state: LEGUP_F_legup_memcpy_4_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_4
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_1_BB__0_1
   %l_12 = alloca [3 x i16], align 2 (endState: LEGUP_F_func_1_BB__0_1)
   %l_26 = alloca [1 x [9 x i32]], align 4 (endState: LEGUP_F_func_1_BB__0_1)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__1_2
   %2 = phi i32 [ 0, %0 ], [ %5, %4 ] (endState: LEGUP_F_func_1_BB__1_2)
   %exitcond = icmp eq i32 %2, 3 (endState: LEGUP_F_func_1_BB__1_2)
   br i1 %exitcond, label %6, label %3
   Transition: if (%exitcond): LEGUP_F_func_1_BB__6_6 default: LEGUP_F_func_1_BB__3_3
state: LEGUP_F_func_1_BB__3_3
   %scevgep = getelementptr [3 x i16]* %l_12, i32 0, i32 %2 (endState: LEGUP_F_func_1_BB__3_3)
   store i16 9015, i16* %scevgep, align 2 (endState: LEGUP_F_func_1_BB__3_4)
   Transition: default: LEGUP_F_func_1_BB__3_4
state: LEGUP_F_func_1_BB__3_4
   br label %4
   Transition: default: LEGUP_F_func_1_BB__4_5
state: LEGUP_F_func_1_BB__4_5
   %5 = add nsw i32 %2, 1 (endState: LEGUP_F_func_1_BB__4_5)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__6_6
   br label %7
   Transition: default: LEGUP_F_func_1_BB__7_7
state: LEGUP_F_func_1_BB__7_7
   %storemerge = phi i32 [ 24, %6 ], [ %35, %33 ] (endState: LEGUP_F_func_1_BB__7_7)
   %l_30.0 = phi i16 [ 0, %6 ], [ %l_30.1, %33 ] (endState: LEGUP_F_func_1_BB__7_7)
   store i32 %storemerge, i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__7_8)
   %8 = icmp eq i32 %storemerge, -16 (endState: LEGUP_F_func_1_BB__7_7)
   Transition: default: LEGUP_F_func_1_BB__7_8
state: LEGUP_F_func_1_BB__7_8
   br i1 %8, label %36, label %9
   Transition: if (%8): LEGUP_F_func_1_BB__36_37 default: LEGUP_F_func_1_BB__9_9
state: LEGUP_F_func_1_BB__9_9
   br label %10
   Transition: default: LEGUP_F_func_1_BB__10_10
state: LEGUP_F_func_1_BB__10_10
   %indvar = phi i16 [ %indvar.next, %29 ], [ 0, %9 ] (endState: LEGUP_F_func_1_BB__10_10)
   %storemerge1 = phi i32 [ %31, %29 ], [ 0, %9 ] (endState: LEGUP_F_func_1_BB__10_10)
   %l_30.1 = sub i16 %l_30.0, %indvar (endState: LEGUP_F_func_1_BB__10_10)
   store i32 %storemerge1, i32* @g_6, align 4 (endState: LEGUP_F_func_1_BB__10_11)
   %11 = icmp slt i32 %storemerge1, 29 (endState: LEGUP_F_func_1_BB__10_10)
   Transition: default: LEGUP_F_func_1_BB__10_11
state: LEGUP_F_func_1_BB__10_11
   br i1 %11, label %12, label %32
   Transition: if (%11): LEGUP_F_func_1_BB__12_12 default: LEGUP_F_func_1_BB__32_33
state: LEGUP_F_func_1_BB__12_12
   %13 = getelementptr inbounds [3 x i16]* %l_12, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__12_12)
   %14 = load i16* %13, align 2 (endState: LEGUP_F_func_1_BB__12_14)
   %16 = load volatile i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__12_14)
   Transition: default: LEGUP_F_func_1_BB__12_13
state: LEGUP_F_func_1_BB__12_13
   store i32 -50606592, i32* @g_21, align 4 (endState: LEGUP_F_func_1_BB__12_14)
   Transition: default: LEGUP_F_func_1_BB__12_14
state: LEGUP_F_func_1_BB__12_14
   %15 = trunc i16 %14 to i8 (endState: LEGUP_F_func_1_BB__12_14)
   Transition: default: LEGUP_function_call_15
state: LEGUP_function_call_15
   %17 = call i32 @func_17(i8 signext 1, i32 %16, i32 -50606592) #3 (endState: LEGUP_function_call_15)
   Transition: if (func_17_finish_final): LEGUP_F_func_1_BB__12_16 default: LEGUP_function_call_15
state: LEGUP_F_func_1_BB__12_16
   Transition: default: LEGUP_function_call_17
state: LEGUP_function_call_17
   %18 = call i32 @func_13(i32 1, i32 %17) #3 (endState: LEGUP_function_call_17)
   Transition: if (func_13_finish_final): LEGUP_F_func_1_BB__12_18 default: LEGUP_function_call_17
state: LEGUP_F_func_1_BB__12_18
   %19 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__12_20)
   Transition: default: LEGUP_F_func_1_BB__12_19
state: LEGUP_F_func_1_BB__12_19
   Transition: default: LEGUP_F_func_1_BB__12_20
state: LEGUP_F_func_1_BB__12_20
   %20 = icmp ne i32 %19, 0 (endState: LEGUP_F_func_1_BB__12_20)
   %21 = zext i1 %20 to i8 (endState: LEGUP_F_func_1_BB__12_20)
   %22 = and i8 %15, %21 (endState: LEGUP_F_func_1_BB__12_20)
   Transition: default: LEGUP_function_call_21
state: LEGUP_function_call_21
   %23 = call zeroext i8 @safe_div_func_uint8_t_u_u(i8 zeroext %22, i8 zeroext 40) #3 (endState: LEGUP_function_call_21)
   Transition: if (safe_div_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__12_22 default: LEGUP_function_call_21
state: LEGUP_F_func_1_BB__12_22
   %24 = icmp eq i8 %23, 0 (endState: LEGUP_F_func_1_BB__12_22)
   br i1 %24, label %27, label %25
   Transition: if (%24): LEGUP_F_func_1_BB__27_26 default: LEGUP_F_func_1_BB__25_23
state: LEGUP_F_func_1_BB__25_23
   %26 = bitcast [1 x [9 x i32]]* %l_26 to i8* (endState: LEGUP_F_func_1_BB__25_23)
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   call void @legup_memcpy_4(i8* %26, i8* bitcast ([1 x [9 x i32]]* @func_1.l_26 to i8*), i32 36) (endState: LEGUP_function_call_24)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_1_BB__25_25 default: LEGUP_function_call_24
state: LEGUP_F_func_1_BB__25_25
   br label %28
   Transition: default: LEGUP_F_func_1_BB__28_27
state: LEGUP_F_func_1_BB__27_26
   br label %79
   Transition: default: LEGUP_F_func_1_BB__79_72
state: LEGUP_F_func_1_BB__28_27
   br label %29
   Transition: default: LEGUP_F_func_1_BB__29_28
state: LEGUP_F_func_1_BB__29_28
   %30 = load i32* @g_6, align 4 (endState: LEGUP_F_func_1_BB__29_30)
   %indvar.next = add i16 %indvar, 1 (endState: LEGUP_F_func_1_BB__29_28)
   Transition: default: LEGUP_F_func_1_BB__29_29
state: LEGUP_F_func_1_BB__29_29
   Transition: default: LEGUP_F_func_1_BB__29_30
state: LEGUP_F_func_1_BB__29_30
   Transition: default: LEGUP_function_call_31
state: LEGUP_function_call_31
   %31 = call i32 @safe_add_func_uint32_t_u_u(i32 %30, i32 4) #3 (endState: LEGUP_function_call_31)
   Transition: if (safe_add_func_uint32_t_u_u_finish_final): LEGUP_F_func_1_BB__29_32 default: LEGUP_function_call_31
state: LEGUP_F_func_1_BB__29_32
   br label %10
   Transition: default: LEGUP_F_func_1_BB__10_10
state: LEGUP_F_func_1_BB__32_33
   br label %33
   Transition: default: LEGUP_F_func_1_BB__33_34
state: LEGUP_F_func_1_BB__33_34
   %34 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__33_36)
   Transition: default: LEGUP_F_func_1_BB__33_35
state: LEGUP_F_func_1_BB__33_35
   Transition: default: LEGUP_F_func_1_BB__33_36
state: LEGUP_F_func_1_BB__33_36
   %35 = add nsw i32 %34, -1 (endState: LEGUP_F_func_1_BB__33_36)
   br label %7
   Transition: default: LEGUP_F_func_1_BB__7_7
state: LEGUP_F_func_1_BB__36_37
   %37 = load i32* @g_6, align 4 (endState: LEGUP_F_func_1_BB__36_39)
   %39 = load i32* @g_21, align 4 (endState: LEGUP_F_func_1_BB__36_39)
   Transition: default: LEGUP_F_func_1_BB__36_38
state: LEGUP_F_func_1_BB__36_38
   Transition: default: LEGUP_F_func_1_BB__36_39
state: LEGUP_F_func_1_BB__36_39
   %38 = trunc i32 %37 to i8 (endState: LEGUP_F_func_1_BB__36_39)
   Transition: default: LEGUP_function_call_40
state: LEGUP_function_call_40
   %40 = call i32 @func_13(i32 %39, i32 -1368172156) #3 (endState: LEGUP_function_call_40)
   Transition: if (func_13_finish_final): LEGUP_F_func_1_BB__36_41 default: LEGUP_function_call_40
state: LEGUP_F_func_1_BB__36_41
   %41 = trunc i32 %40 to i8 (endState: LEGUP_F_func_1_BB__36_41)
   br i1 true, label %42, label %62
   Transition: if (true): LEGUP_F_func_1_BB__42_42 default: LEGUP_F_func_1_BB__62_55
state: LEGUP_F_func_1_BB__42_42
   %43 = load i32* @g_6, align 4 (endState: LEGUP_F_func_1_BB__42_44)
   %45 = zext i16 %l_30.0 to i32 (endState: LEGUP_F_func_1_BB__42_42)
   %46 = load i32* @g_21, align 4 (endState: LEGUP_F_func_1_BB__42_44)
   %53 = getelementptr inbounds [3 x i16]* %l_12, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__42_42)
   Transition: default: LEGUP_F_func_1_BB__42_43
state: LEGUP_F_func_1_BB__42_43
   Transition: default: LEGUP_F_func_1_BB__42_44
state: LEGUP_F_func_1_BB__42_44
   %44 = trunc i32 %43 to i8 (endState: LEGUP_F_func_1_BB__42_44)
   Transition: default: LEGUP_function_call_45
state: LEGUP_function_call_45
   %47 = call i32 @func_17(i8 signext %44, i32 %45, i32 %46) #3 (endState: LEGUP_function_call_45)
   Transition: if (func_17_finish_final): LEGUP_F_func_1_BB__42_46 default: LEGUP_function_call_45
state: LEGUP_F_func_1_BB__42_46
   %48 = trunc i32 %47 to i8 (endState: LEGUP_F_func_1_BB__42_46)
   %49 = load i32* @g_6, align 4 (endState: LEGUP_F_func_1_BB__42_48)
   Transition: default: LEGUP_F_func_1_BB__42_47
state: LEGUP_F_func_1_BB__42_47
   Transition: default: LEGUP_F_func_1_BB__42_48
state: LEGUP_F_func_1_BB__42_48
   %50 = trunc i32 %49 to i8 (endState: LEGUP_F_func_1_BB__42_48)
   Transition: default: LEGUP_function_call_49
state: LEGUP_function_call_49
   %51 = call zeroext i8 @safe_add_func_uint8_t_u_u(i8 zeroext %48, i8 zeroext %50) #3 (endState: LEGUP_function_call_49)
   Transition: if (safe_add_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__42_50 default: LEGUP_function_call_49
state: LEGUP_F_func_1_BB__42_50
   %52 = zext i8 %51 to i32 (endState: LEGUP_F_func_1_BB__42_50)
   %54 = load i16* %53, align 2 (endState: LEGUP_F_func_1_BB__42_52)
   %58 = load volatile i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__42_52)
   Transition: default: LEGUP_F_func_1_BB__42_51
state: LEGUP_F_func_1_BB__42_51
   Transition: default: LEGUP_F_func_1_BB__42_52
state: LEGUP_F_func_1_BB__42_52
   %55 = sext i16 %54 to i32 (endState: LEGUP_F_func_1_BB__42_52)
   %56 = icmp sge i32 %52, %55 (endState: LEGUP_F_func_1_BB__42_52)
   %57 = zext i1 %56 to i32 (endState: LEGUP_F_func_1_BB__42_52)
   %59 = icmp sgt i32 %57, %58 (endState: LEGUP_F_func_1_BB__42_52)
   %60 = zext i1 %59 to i32 (endState: LEGUP_F_func_1_BB__42_52)
   Transition: default: LEGUP_function_call_53
state: LEGUP_function_call_53
   %61 = call i32 @func_13(i32 %43, i32 %60) #3 (endState: LEGUP_function_call_53)
   Transition: if (func_13_finish_final): LEGUP_F_func_1_BB__42_54 default: LEGUP_function_call_53
state: LEGUP_F_func_1_BB__42_54
   br label %62
   Transition: default: LEGUP_F_func_1_BB__62_55
state: LEGUP_F_func_1_BB__62_55
   %63 = load i32* getelementptr inbounds ([3 x i32]* @g_25, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__62_57)
   Transition: default: LEGUP_F_func_1_BB__62_56
state: LEGUP_F_func_1_BB__62_56
   Transition: default: LEGUP_F_func_1_BB__62_57
state: LEGUP_F_func_1_BB__62_57
   %64 = trunc i32 %63 to i8 (endState: LEGUP_F_func_1_BB__62_57)
   Transition: default: LEGUP_function_call_58
state: LEGUP_function_call_58
   %65 = call i32 @func_17(i8 signext %64, i32 %63, i32 %63) #3 (endState: LEGUP_function_call_58)
   Transition: if (func_17_finish_final): LEGUP_F_func_1_BB__62_59 default: LEGUP_function_call_58
state: LEGUP_F_func_1_BB__62_59
   %66 = load i32* getelementptr inbounds ([3 x i32]* @g_25, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__62_61)
   Transition: default: LEGUP_F_func_1_BB__62_60
state: LEGUP_F_func_1_BB__62_60
   Transition: default: LEGUP_F_func_1_BB__62_61
state: LEGUP_F_func_1_BB__62_61
   Transition: default: LEGUP_function_call_62
state: LEGUP_function_call_62
   %67 = call i32 @func_13(i32 %65, i32 %66) #3 (endState: LEGUP_function_call_62)
   Transition: if (func_13_finish_final): LEGUP_F_func_1_BB__62_63 default: LEGUP_function_call_62
state: LEGUP_F_func_1_BB__62_63
   Transition: default: LEGUP_function_call_64
state: LEGUP_function_call_64
   %68 = call zeroext i8 @safe_rshift_func_uint8_t_u_u(i8 zeroext %41, i32 %67) #3 (endState: LEGUP_function_call_64)
   Transition: if (safe_rshift_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__62_65 default: LEGUP_function_call_64
state: LEGUP_F_func_1_BB__62_65
   %69 = icmp eq i8 %68, 0 (endState: LEGUP_F_func_1_BB__62_65)
   br i1 %69, label %70, label %71
   Transition: if (%69): LEGUP_F_func_1_BB__70_66 default: LEGUP_F_func_1_BB__71_67
state: LEGUP_F_func_1_BB__70_66
   br label %71
   Transition: default: LEGUP_F_func_1_BB__71_67
state: LEGUP_F_func_1_BB__71_67
   %72 = getelementptr inbounds [3 x i16]* %l_12, i32 0, i32 2 (endState: LEGUP_F_func_1_BB__71_67)
   %73 = load i16* %72, align 2 (endState: LEGUP_F_func_1_BB__71_69)
   %76 = zext i16 %l_30.0 to i32 (endState: LEGUP_F_func_1_BB__71_67)
   Transition: default: LEGUP_F_func_1_BB__71_68
state: LEGUP_F_func_1_BB__71_68
   Transition: default: LEGUP_F_func_1_BB__71_69
state: LEGUP_F_func_1_BB__71_69
   %74 = sext i16 %73 to i32 (endState: LEGUP_F_func_1_BB__71_69)
   Transition: default: LEGUP_function_call_70
state: LEGUP_function_call_70
   %75 = call i32 @func_17(i8 signext %38, i32 77, i32 %74) #3 (endState: LEGUP_function_call_70)
   Transition: if (func_17_finish_final): LEGUP_F_func_1_BB__71_71 default: LEGUP_function_call_70
state: LEGUP_F_func_1_BB__71_71
   %77 = or i32 %75, %76 (endState: LEGUP_F_func_1_BB__71_71)
   %78 = or i32 %77, 395942169 (endState: LEGUP_F_func_1_BB__71_71)
   br label %79
   Transition: default: LEGUP_F_func_1_BB__79_72
state: LEGUP_F_func_1_BB__79_72
   %.0 = phi i32 [ -1, %27 ], [ %78, %71 ] (endState: LEGUP_F_func_1_BB__79_72)
   ret i32 %.0
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 2
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %7 Num States: 2
Basic Block: %9 Num States: 1
Basic Block: %10 Num States: 2
Basic Block: %12 Num States: 11
Basic Block: %25 Num States: 3
Basic Block: %27 Num States: 1
Basic Block: %28 Num States: 1
Basic Block: %29 Num States: 5
Basic Block: %32 Num States: 1
Basic Block: %33 Num States: 3
Basic Block: %36 Num States: 5
Basic Block: %42 Num States: 13
Basic Block: %62 Num States: 11
Basic Block: %70 Num States: 1
Basic Block: %71 Num States: 5
Basic Block: %79 Num States: 1
End Function: func_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_8bytes
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_8bytes_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_8bytes_BB__0_1
   %1 = trunc i64 %val to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %2 = lshr i64 %val, 8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %3 = trunc i64 %2 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %4 = lshr i64 %val, 16 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %5 = trunc i64 %4 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %6 = lshr i64 %val, 24 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %7 = trunc i64 %6 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %8 = lshr i64 %val, 32 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %9 = trunc i64 %8 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %10 = lshr i64 %val, 40 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %11 = trunc i64 %10 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %12 = lshr i64 %val, 48 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %13 = trunc i64 %12 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %14 = lshr i64 %val, 56 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %15 = trunc i64 %14 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_byte(i8 zeroext %1) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_crc32_8bytes_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_byte(i8 zeroext %3) #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_crc32_8bytes_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   call void @crc32_byte(i8 zeroext %5) #3 (endState: LEGUP_function_call_6)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_crc32_8bytes_BB__0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @crc32_byte(i8 zeroext %7) #3 (endState: LEGUP_function_call_8)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_crc32_8bytes_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @crc32_byte(i8 zeroext %9) #3 (endState: LEGUP_function_call_10)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_crc32_8bytes_BB__0_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   call void @crc32_byte(i8 zeroext %11) #3 (endState: LEGUP_function_call_12)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_crc32_8bytes_BB__0_13
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @crc32_byte(i8 zeroext %13) #3 (endState: LEGUP_function_call_14)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_crc32_8bytes_BB__0_15
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @crc32_byte(i8 zeroext %15) #3 (endState: LEGUP_function_call_16)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_crc32_8bytes_BB__0_17
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
End Function: crc32_8bytes
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: transparent_crc
state: LEGUP_0
   Transition: if (start): LEGUP_F_transparent_crc_BB__0_1 default: LEGUP_0
state: LEGUP_F_transparent_crc_BB__0_1
   %1 = icmp eq i32 %flag, 0 (endState: LEGUP_F_transparent_crc_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_8bytes(i64 %val) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_8bytes_finish_final): LEGUP_F_transparent_crc_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_transparent_crc_BB__0_3
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_transparent_crc_BB__6_7 default: LEGUP_F_transparent_crc_BB__2_4
state: LEGUP_F_transparent_crc_BB__2_4
   %3 = load i32* @crc32_context, align 4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   Transition: default: LEGUP_F_transparent_crc_BB__2_5
state: LEGUP_F_transparent_crc_BB__2_5
   Transition: default: LEGUP_F_transparent_crc_BB__2_6
state: LEGUP_F_transparent_crc_BB__2_6
   %4 = xor i32 %3, -1 (endState: LEGUP_F_transparent_crc_BB__2_6)
   %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str7, i32 0, i32 0), i8* %vname, i32 %4) #4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   br label %6
   Transition: default: LEGUP_F_transparent_crc_BB__6_7
state: LEGUP_F_transparent_crc_BB__6_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %6 Num States: 1
Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 3
End Function: transparent_crc
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @platform_main_begin() #3 (endState: LEGUP_function_call_2)
   Transition: if (platform_main_begin_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_gentab() #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_gentab_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %1 = call i32 @func_1() #3 (endState: LEGUP_function_call_6)
   Transition: if (func_1_finish_final): LEGUP_F_main_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB__0_7
   %2 = load volatile i32* @g_2, align 4 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   %3 = sext i32 %2 to i64 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @transparent_crc(i64 %3, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_10)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB__0_11
   %4 = load i32* @g_3, align 4 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_F_main_BB__0_12
state: LEGUP_F_main_BB__0_12
   Transition: default: LEGUP_F_main_BB__0_13
state: LEGUP_F_main_BB__0_13
   %5 = sext i32 %4 to i64 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @transparent_crc(i64 %5, i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_14)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_main_BB__0_15
   %6 = load i32* @g_6, align 4 (endState: LEGUP_F_main_BB__0_17)
   Transition: default: LEGUP_F_main_BB__0_16
state: LEGUP_F_main_BB__0_16
   Transition: default: LEGUP_F_main_BB__0_17
state: LEGUP_F_main_BB__0_17
   %7 = sext i32 %6 to i64 (endState: LEGUP_F_main_BB__0_17)
   Transition: default: LEGUP_function_call_18
state: LEGUP_function_call_18
   call void @transparent_crc(i64 %7, i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_18)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_19 default: LEGUP_function_call_18
state: LEGUP_F_main_BB__0_19
   %8 = load i32* @g_21, align 4 (endState: LEGUP_F_main_BB__0_21)
   Transition: default: LEGUP_F_main_BB__0_20
state: LEGUP_F_main_BB__0_20
   Transition: default: LEGUP_F_main_BB__0_21
state: LEGUP_F_main_BB__0_21
   %9 = zext i32 %8 to i64 (endState: LEGUP_F_main_BB__0_21)
   Transition: default: LEGUP_function_call_22
state: LEGUP_function_call_22
   call void @transparent_crc(i64 %9, i8* getelementptr inbounds ([5 x i8]* @.str3, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_22)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_23 default: LEGUP_function_call_22
state: LEGUP_F_main_BB__0_23
   br label %10
   Transition: default: LEGUP_F_main_BB__10_24
state: LEGUP_F_main_BB__10_24
   %11 = phi i32 [ 0, %0 ], [ %18, %17 ] (endState: LEGUP_F_main_BB__10_24)
   %exitcond = icmp eq i32 %11, 3 (endState: LEGUP_F_main_BB__10_24)
   br i1 %exitcond, label %19, label %12
   Transition: if (%exitcond): LEGUP_F_main_BB__19_33 default: LEGUP_F_main_BB__12_25
state: LEGUP_F_main_BB__12_25
   %scevgep = getelementptr [3 x i32]* @g_25, i32 0, i32 %11 (endState: LEGUP_F_main_BB__12_25)
   %13 = load i32* %scevgep, align 4 (endState: LEGUP_F_main_BB__12_27)
   Transition: default: LEGUP_F_main_BB__12_26
state: LEGUP_F_main_BB__12_26
   Transition: default: LEGUP_F_main_BB__12_27
state: LEGUP_F_main_BB__12_27
   %14 = sext i32 %13 to i64 (endState: LEGUP_F_main_BB__12_27)
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   call void @transparent_crc(i64 %14, i8* getelementptr inbounds ([8 x i8]* @.str4, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_28)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__12_29 default: LEGUP_function_call_28
state: LEGUP_F_main_BB__12_29
   br i1 false, label %15, label %16
   Transition: if (false): LEGUP_F_main_BB__15_30 default: LEGUP_F_main_BB__16_31
state: LEGUP_F_main_BB__15_30
   br label %16
   Transition: default: LEGUP_F_main_BB__16_31
state: LEGUP_F_main_BB__16_31
   br label %17
   Transition: default: LEGUP_F_main_BB__17_32
state: LEGUP_F_main_BB__17_32
   %18 = add nsw i32 %11, 1 (endState: LEGUP_F_main_BB__17_32)
   br label %10
   Transition: default: LEGUP_F_main_BB__10_24
state: LEGUP_F_main_BB__19_33
   %20 = load i32* @crc32_context, align 4 (endState: LEGUP_F_main_BB__19_35)
   Transition: default: LEGUP_F_main_BB__19_34
state: LEGUP_F_main_BB__19_34
   Transition: default: LEGUP_F_main_BB__19_35
state: LEGUP_F_main_BB__19_35
   %21 = xor i32 %20, -1 (endState: LEGUP_F_main_BB__19_35)
   Transition: default: LEGUP_function_call_36
state: LEGUP_function_call_36
   %22 = call i32 @platform_main_end(i32 %21, i32 0) #3 (endState: LEGUP_function_call_36)
   Transition: if (platform_main_end_finish_final): LEGUP_F_main_BB__19_37 default: LEGUP_function_call_36
state: LEGUP_F_main_BB__19_37
   ret i32 %22
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 23
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 5
Basic Block: %15 Num States: 1
Basic Block: %16 Num States: 1
Basic Block: %17 Num States: 1
Basic Block: %19 Num States: 5
End Function: main
--------------------------------------------------------------------------------

