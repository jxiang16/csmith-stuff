//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Jun 13 15:04:24 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_begin
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_begin_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_begin_BB__0_1
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_begin
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_gentab
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_crc32_gentab_BB__1_1 default: LEGUP_0
state: LEGUP_F_crc32_gentab_BB__1_1
   %2 = phi i32 [ 0, %0 ], [ %17, %16 ] (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %scevgep = getelementptr [256 x i32]* @crc32_tab, i32 0, i32 %2 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %exitcond1 = icmp eq i32 %2, 256 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   br i1 %exitcond1, label %18, label %3
   Transition: if (%exitcond1): LEGUP_F_crc32_gentab_BB__18_12 default: LEGUP_F_crc32_gentab_BB__3_2
state: LEGUP_F_crc32_gentab_BB__3_2
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__4_3
   %indvar = phi i32 [ %indvar.next, %14 ], [ 0, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %crc.0 = phi i32 [ %crc.1, %14 ], [ %2, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %exitcond = icmp eq i32 %indvar, 8 (endState: LEGUP_F_crc32_gentab_BB__4_3)
   br i1 %exitcond, label %15, label %5
   Transition: if (%exitcond): LEGUP_F_crc32_gentab_BB__15_9 default: LEGUP_F_crc32_gentab_BB__5_4
state: LEGUP_F_crc32_gentab_BB__5_4
   %6 = and i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   %7 = icmp eq i32 %6, 0 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   br i1 %7, label %11, label %8
   Transition: if (%7): LEGUP_F_crc32_gentab_BB__11_6 default: LEGUP_F_crc32_gentab_BB__8_5
state: LEGUP_F_crc32_gentab_BB__8_5
   %9 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   %10 = xor i32 %9, -306674912 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__11_6
   %12 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__11_6)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__13_7
   %crc.1 = phi i32 [ %10, %8 ], [ %12, %11 ] (endState: LEGUP_F_crc32_gentab_BB__13_7)
   br label %14
   Transition: default: LEGUP_F_crc32_gentab_BB__14_8
state: LEGUP_F_crc32_gentab_BB__14_8
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_crc32_gentab_BB__14_8)
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__15_9
   store i32 %crc.0, i32* %scevgep, align 4 (endState: LEGUP_F_crc32_gentab_BB__15_10)
   Transition: default: LEGUP_F_crc32_gentab_BB__15_10
state: LEGUP_F_crc32_gentab_BB__15_10
   br label %16
   Transition: default: LEGUP_F_crc32_gentab_BB__16_11
state: LEGUP_F_crc32_gentab_BB__16_11
   %17 = add nsw i32 %2, 1 (endState: LEGUP_F_crc32_gentab_BB__16_11)
   br label %1
   Transition: default: LEGUP_F_crc32_gentab_BB__1_1
state: LEGUP_F_crc32_gentab_BB__18_12
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 2
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
End Function: crc32_gentab
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_end
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_end_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_end_BB__0_1
   %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str11, i32 0, i32 0), i32 %crc) #2 (endState: LEGUP_F_platform_main_end_BB__0_1)
   ret i32 %crc
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_end
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_byte
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_byte_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_byte_BB__0_1
   %1 = load i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %3 = zext i8 %b to i32 (endState: LEGUP_F_crc32_byte_BB__0_1)
   Transition: default: LEGUP_F_crc32_byte_BB__0_2
state: LEGUP_F_crc32_byte_BB__0_2
   Transition: default: LEGUP_F_crc32_byte_BB__0_3
state: LEGUP_F_crc32_byte_BB__0_3
   %2 = lshr i32 %1, 8 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %.masked = and i32 %1, 255 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %4 = xor i32 %.masked, %3 (endState: LEGUP_F_crc32_byte_BB__0_3)
   Transition: default: LEGUP_F_crc32_byte_BB__0_4
state: LEGUP_F_crc32_byte_BB__0_4
   %5 = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i32 %4 (endState: LEGUP_F_crc32_byte_BB__0_4)
   %6 = load i32* %5, align 4 (endState: LEGUP_F_crc32_byte_BB__0_6)
   Transition: default: LEGUP_F_crc32_byte_BB__0_5
state: LEGUP_F_crc32_byte_BB__0_5
   Transition: default: LEGUP_F_crc32_byte_BB__0_6
state: LEGUP_F_crc32_byte_BB__0_6
   %7 = xor i32 %2, %6 (endState: LEGUP_F_crc32_byte_BB__0_6)
   store i32 %7, i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_7)
   Transition: default: LEGUP_F_crc32_byte_BB__0_7
state: LEGUP_F_crc32_byte_BB__0_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 7
End Function: crc32_byte
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint16_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__0_1)
   br i1 %1, label %4, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__2_2
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__2_2)
   br i1 %3, label %4, label %6
   Transition: if (%3): LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__4_3)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4
   %7 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4)
   %8 = lshr i32 %7, %right (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__6_4)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5
   %10 = phi i32 [ %5, %4 ], [ %8, %6 ] (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5)
   %11 = trunc i32 %10 to i16 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_s_BB__9_5)
   ret i16 %11
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %9 Num States: 1
End Function: safe_rshift_func_uint16_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_1
   %1 = mul i16 %ui1, %ui2 (endState: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_2
state: LEGUP_F_safe_mul_func_uint16_t_u_u_BB__0_2
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1
   %1 = mul i8 %si1, %si2 (endState: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1
   %1 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %2 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %3 = and i32 %2, -2147483648 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %4 = xor i32 %3, %si1 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %5 = sub nsw i32 %4, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %6 = xor i32 %5, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %7 = and i32 %1, %6 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %8 = icmp slt i32 %7, 0 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   br i1 %8, label %9, label %10
   Transition: if (%8): LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2 default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
   %11 = sub nsw i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3)
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
   %13 = phi i32 [ %si1, %9 ], [ %11, %10 ] (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4)
   ret i32 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
End Function: safe_sub_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_24
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_24_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_24_BB__0_1
   ret i16 24226
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: func_24
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__0_1
   %1 = icmp eq i8 %si2, 0 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__2_2
   %3 = icmp eq i8 %si1, -128 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_mod_func_int8_t_s_s_BB__4_3 default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__4_3
   %5 = icmp eq i8 %si2, -1 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5
   %9 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5)
   %10 = sext i8 %si2 to i32 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5)
   %11 = srem i32 %9, %10 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_6
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_7
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_8
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_9
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_10
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_11
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_12
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_13
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_14
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_15
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_16
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_17
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_18
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_19
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_20
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_21
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_22
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_23
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_24
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_25
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_26
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_27
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_28
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_29
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_30
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_31
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_32
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_33
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_34
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_35
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_36
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_37
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i8 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38)
   ret i8 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_mod_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1
   %1 = icmp slt i16 %left, 0 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %6, label %4
   Transition: if (%3): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__6_4)
   br label %11
   Transition: default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5
   %9 = sext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5)
   %10 = ashr i32 %9, %right (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__8_5)
   br label %11
   Transition: default: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
state: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6)
   %13 = trunc i32 %12 to i16 (endState: LEGUP_F_safe_rshift_func_int16_t_s_s_BB__11_6)
   ret i16 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_rshift_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %2, label %4
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2 default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2
   %3 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__2_2)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   %6 = lshr i32 %5, %right (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__4_3)
   br label %7
   Transition: default: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
state: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4
   %8 = phi i32 [ %3, %2 ], [ %6, %4 ] (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   %9 = trunc i32 %8 to i16 (endState: LEGUP_F_safe_rshift_func_uint16_t_u_u_BB__7_4)
   ret i16 %9
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
End Function: safe_rshift_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1
   %1 = add i16 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint16_t_u_u_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint16_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %6 = lshr i32 65535, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4
   %9 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
   %11 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i16 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   ret i16 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint16_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_1
   %1 = mul i16 %si1, %si2 (endState: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_2
state: LEGUP_F_safe_mul_func_int16_t_s_s_BB__0_2
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1
   %1 = sub i16 %ui1, %ui2 (endState: LEGUP_F_safe_sub_func_uint16_t_u_u_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1
   %1 = icmp slt i8 %left, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %10, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2
   %3 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %10, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3
   %5 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %10, label %6
   Transition: if (%5): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   %8 = lshr i32 127, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   %9 = icmp sgt i32 %7, %8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__6_4)
   br i1 %9, label %10, label %12
   Transition: if (%9): LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5 default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5
   %11 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__10_5)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6
   %13 = sext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6)
   %14 = shl i32 %13, %right (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__12_6)
   br label %15
   Transition: default: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
state: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7
   %16 = phi i32 [ %11, %10 ], [ %14, %12 ] (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7)
   %17 = trunc i32 %16 to i8 (endState: LEGUP_F_safe_lshift_func_int8_t_s_s_BB__15_7)
   ret i8 %17
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %15 Num States: 1
End Function: safe_lshift_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2
   %3 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   %4 = lshr i32 65535, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   %5 = icmp sgt i32 %3, %4 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__2_2)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3
   %7 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__6_3)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4
   %9 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4)
   %10 = shl i32 %9, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__8_4)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5)
   %13 = trunc i32 %12 to i16 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_u_BB__11_5)
   ret i16 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_lshift_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1
   %1 = sub i8 %ui1, %ui2 (endState: LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1
   %1 = sub i16 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1
   %1 = sub i8 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1
   %1 = add i8 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint8_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %6 = lshr i32 255, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4
   %9 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
   %11 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i8 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   ret i8 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint8_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint32_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1
   %1 = add i32 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint32_t_u_u_BB__0_1)
   ret i32 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint32_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint8_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1)
   br i1 %1, label %4, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2)
   br i1 %3, label %4, label %6
   Transition: if (%3): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4
   %7 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4)
   %8 = lshr i32 %7, %right (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
   %10 = phi i32 [ %5, %4 ], [ %8, %6 ] (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5)
   %11 = trunc i32 %10 to i8 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5)
   ret i8 %11
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %9 Num States: 1
End Function: safe_rshift_func_uint8_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1
   %1 = icmp eq i32 %si2, 0 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
   %3 = icmp eq i32 %si1, -2147483648 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3
   %5 = icmp eq i32 %si2, -1 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3)
   br i1 %5, label %6, label %7
   Transition: if (%5): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
   %8 = sdiv i32 %si1, %si2 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37)
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
   %10 = phi i32 [ %si1, %6 ], [ %8, %7 ] (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38)
   ret i32 %10
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %7 Num States: 33
Basic Block: %9 Num States: 1
End Function: safe_div_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1
   %1 = icmp sgt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %2, label %7
   Transition: if (%1): LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2
   %3 = icmp sgt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3
   %5 = sub nsw i32 2147483647, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   %6 = icmp slt i32 %5, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__4_3)
   br i1 %6, label %14, label %7
   Transition: if (%6): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4
   %8 = icmp slt i32 %si1, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__7_4)
   br i1 %8, label %9, label %15
   Transition: if (%8): LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5
   %10 = icmp slt i32 %si2, 0 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__9_5)
   br i1 %10, label %11, label %15
   Transition: if (%10): LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6
   %12 = sub nsw i32 -2147483648, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   %13 = icmp sgt i32 %12, %si1 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__11_6)
   br i1 %13, label %14, label %15
   Transition: if (%13): LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7 default: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__14_7
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8
   %16 = add nsw i32 %si1, %si2 (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__15_8)
   br label %17
   Transition: default: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
state: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9
   %18 = phi i32 [ %si1, %14 ], [ %16, %15 ] (endState: LEGUP_F_safe_add_func_int32_t_s_s_BB__17_9)
   ret i32 %18
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %7 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %17 Num States: 1
End Function: safe_add_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_8bytes
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_8bytes_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_8bytes_BB__0_1
   %1 = trunc i64 %val to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %2 = lshr i64 %val, 8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %3 = trunc i64 %2 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %4 = lshr i64 %val, 16 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %5 = trunc i64 %4 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %6 = lshr i64 %val, 24 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %7 = trunc i64 %6 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %8 = lshr i64 %val, 32 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %9 = trunc i64 %8 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %10 = lshr i64 %val, 40 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %11 = trunc i64 %10 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %12 = lshr i64 %val, 48 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %13 = trunc i64 %12 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %14 = lshr i64 %val, 56 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %15 = trunc i64 %14 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_byte(i8 zeroext %1) #2 (endState: LEGUP_function_call_2)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_crc32_8bytes_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_byte(i8 zeroext %3) #2 (endState: LEGUP_function_call_4)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_crc32_8bytes_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   call void @crc32_byte(i8 zeroext %5) #2 (endState: LEGUP_function_call_6)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_crc32_8bytes_BB__0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @crc32_byte(i8 zeroext %7) #2 (endState: LEGUP_function_call_8)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_crc32_8bytes_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @crc32_byte(i8 zeroext %9) #2 (endState: LEGUP_function_call_10)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_crc32_8bytes_BB__0_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   call void @crc32_byte(i8 zeroext %11) #2 (endState: LEGUP_function_call_12)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_crc32_8bytes_BB__0_13
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @crc32_byte(i8 zeroext %13) #2 (endState: LEGUP_function_call_14)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_crc32_8bytes_BB__0_15
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @crc32_byte(i8 zeroext %15) #2 (endState: LEGUP_function_call_16)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_crc32_8bytes_BB__0_17
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
End Function: crc32_8bytes
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_19
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_19_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_19_BB__0_1
   %1 = load i32* @g_2, align 4 (endState: LEGUP_F_func_19_BB__0_3)
   %3 = load i8* @g_12, align 1 (endState: LEGUP_F_func_19_BB__0_3)
   %5 = trunc i32 %p_22 to i8 (endState: LEGUP_F_func_19_BB__0_1)
   Transition: default: LEGUP_F_func_19_BB__0_2
state: LEGUP_F_func_19_BB__0_2
   Transition: default: LEGUP_F_func_19_BB__0_3
state: LEGUP_F_func_19_BB__0_3
   %2 = trunc i32 %1 to i16 (endState: LEGUP_F_func_19_BB__0_3)
   %4 = zext i8 %3 to i32 (endState: LEGUP_F_func_19_BB__0_3)
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   %6 = call zeroext i16 @func_24(i16 zeroext %2, i32 %4, i16 zeroext -15459, i8 signext %5) #2 (endState: LEGUP_function_call_4)
   Transition: if (func_24_finish_final): LEGUP_F_func_19_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_func_19_BB__0_5
   %7 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_19_BB__0_7)
   %9 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 5, i32 1), align 4 (endState: LEGUP_F_func_19_BB__0_7)
   Transition: default: LEGUP_F_func_19_BB__0_6
state: LEGUP_F_func_19_BB__0_6
   %10 = load i32* @g_2, align 4 (endState: LEGUP_F_func_19_BB__0_8)
   Transition: default: LEGUP_F_func_19_BB__0_7
state: LEGUP_F_func_19_BB__0_7
   %8 = xor i32 %7, 5680 (endState: LEGUP_F_func_19_BB__0_7)
   store i32 %8, i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_19_BB__0_8)
   Transition: default: LEGUP_F_func_19_BB__0_8
state: LEGUP_F_func_19_BB__0_8
   %11 = icmp eq i32 %9, %10 (endState: LEGUP_F_func_19_BB__0_8)
   br i1 %11, label %13, label %12
   Transition: if (%11): LEGUP_F_func_19_BB__13_10 default: LEGUP_F_func_19_BB__12_9
state: LEGUP_F_func_19_BB__12_9
   br label %13
   Transition: default: LEGUP_F_func_19_BB__13_10
state: LEGUP_F_func_19_BB__13_10
   %14 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_19_BB__13_12)
   Transition: default: LEGUP_F_func_19_BB__13_11
state: LEGUP_F_func_19_BB__13_11
   Transition: default: LEGUP_F_func_19_BB__13_12
state: LEGUP_F_func_19_BB__13_12
   %15 = trunc i32 %14 to i8 (endState: LEGUP_F_func_19_BB__13_12)
   ret i8 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 8
Basic Block: %12 Num States: 1
Basic Block: %13 Num States: 3
End Function: func_19
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_39
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_39_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_39_BB__0_1
   %1 = load i8* @g_12, align 1 (endState: LEGUP_F_func_39_BB__0_3)
   %3 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 5, i32 4), align 4 (endState: LEGUP_F_func_39_BB__0_3)
   Transition: default: LEGUP_F_func_39_BB__0_2
state: LEGUP_F_func_39_BB__0_2
   Transition: default: LEGUP_F_func_39_BB__0_3
state: LEGUP_F_func_39_BB__0_3
   %2 = zext i8 %1 to i32 (endState: LEGUP_F_func_39_BB__0_3)
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   %4 = call i32 @safe_add_func_int32_t_s_s(i32 %2, i32 %3) #2 (endState: LEGUP_function_call_4)
   Transition: if (safe_add_func_int32_t_s_s_finish_final): LEGUP_F_func_39_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_func_39_BB__0_5
   store i32 %4, i32* @g_44, align 4 (endState: LEGUP_F_func_39_BB__0_6)
   Transition: default: LEGUP_F_func_39_BB__0_6
state: LEGUP_F_func_39_BB__0_6
   ret i16 %p_40
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 6
End Function: func_39
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_1_BB__0_1
   %l_46 = alloca [4 x i32], align 4 (endState: LEGUP_F_func_1_BB__0_1)
   %l_9 = alloca [2 x i32], align 4 (endState: LEGUP_F_func_1_BB__0_1)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__1_2
   %2 = phi i32 [ 0, %0 ], [ %5, %4 ] (endState: LEGUP_F_func_1_BB__1_2)
   %exitcond4 = icmp eq i32 %2, 4 (endState: LEGUP_F_func_1_BB__1_2)
   br i1 %exitcond4, label %6, label %3
   Transition: if (%exitcond4): LEGUP_F_func_1_BB__6_6 default: LEGUP_F_func_1_BB__3_3
state: LEGUP_F_func_1_BB__3_3
   %scevgep5 = getelementptr [4 x i32]* %l_46, i32 0, i32 %2 (endState: LEGUP_F_func_1_BB__3_3)
   store i32 4, i32* %scevgep5, align 4 (endState: LEGUP_F_func_1_BB__3_4)
   Transition: default: LEGUP_F_func_1_BB__3_4
state: LEGUP_F_func_1_BB__3_4
   br label %4
   Transition: default: LEGUP_F_func_1_BB__4_5
state: LEGUP_F_func_1_BB__4_5
   %5 = add nsw i32 %2, 1 (endState: LEGUP_F_func_1_BB__4_5)
   br label %1
   Transition: default: LEGUP_F_func_1_BB__1_2
state: LEGUP_F_func_1_BB__6_6
   br label %7
   Transition: default: LEGUP_F_func_1_BB__7_7
state: LEGUP_F_func_1_BB__7_7
   %storemerge = phi i32 [ 0, %6 ], [ %304, %302 ] (endState: LEGUP_F_func_1_BB__7_7)
   %l_60.0 = phi i32 [ -1, %6 ], [ %l_60.3, %302 ] (endState: LEGUP_F_func_1_BB__7_7)
   store i32 %storemerge, i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__7_8)
   %8 = icmp sgt i32 %storemerge, -8 (endState: LEGUP_F_func_1_BB__7_7)
   Transition: default: LEGUP_F_func_1_BB__7_8
state: LEGUP_F_func_1_BB__7_8
   br i1 %8, label %9, label %305
   Transition: if (%8): LEGUP_F_func_1_BB__9_9 default: LEGUP_F_func_1_BB__305_236
state: LEGUP_F_func_1_BB__9_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   %10 = call zeroext i16 @safe_rshift_func_uint16_t_u_s(i16 zeroext 22550, i32 1) #2 (endState: LEGUP_function_call_10)
   Transition: if (safe_rshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_1_BB__9_11 default: LEGUP_function_call_10
state: LEGUP_F_func_1_BB__9_11
   %11 = icmp eq i16 %10, 0 (endState: LEGUP_F_func_1_BB__9_11)
   br i1 %11, label %13, label %12
   Transition: if (%11): LEGUP_F_func_1_BB__13_13 default: LEGUP_F_func_1_BB__12_12
state: LEGUP_F_func_1_BB__12_12
   br label %301
   Transition: default: LEGUP_F_func_1_BB__301_232
state: LEGUP_F_func_1_BB__13_13
   br label %14
   Transition: default: LEGUP_F_func_1_BB__14_14
state: LEGUP_F_func_1_BB__14_14
   %15 = phi i32 [ 0, %13 ], [ %18, %17 ] (endState: LEGUP_F_func_1_BB__14_14)
   %exitcond = icmp eq i32 %15, 2 (endState: LEGUP_F_func_1_BB__14_14)
   br i1 %exitcond, label %19, label %16
   Transition: if (%exitcond): LEGUP_F_func_1_BB__19_18 default: LEGUP_F_func_1_BB__16_15
state: LEGUP_F_func_1_BB__16_15
   %scevgep = getelementptr [2 x i32]* %l_9, i32 0, i32 %15 (endState: LEGUP_F_func_1_BB__16_15)
   store i32 5790591, i32* %scevgep, align 4 (endState: LEGUP_F_func_1_BB__16_16)
   Transition: default: LEGUP_F_func_1_BB__16_16
state: LEGUP_F_func_1_BB__16_16
   br label %17
   Transition: default: LEGUP_F_func_1_BB__17_17
state: LEGUP_F_func_1_BB__17_17
   %18 = add nsw i32 %15, 1 (endState: LEGUP_F_func_1_BB__17_17)
   br label %14
   Transition: default: LEGUP_F_func_1_BB__14_14
state: LEGUP_F_func_1_BB__19_18
   br label %20
   Transition: default: LEGUP_F_func_1_BB__20_19
state: LEGUP_F_func_1_BB__20_19
   %l_110.0 = phi i32 [ 0, %19 ], [ %l_110.1, %283 ] (endState: LEGUP_F_func_1_BB__20_19)
   %21 = phi i32 [ 0, %19 ], [ %284, %283 ] (endState: LEGUP_F_func_1_BB__20_19)
   %l_60.1 = phi i32 [ %l_60.0, %19 ], [ %l_60.2, %283 ] (endState: LEGUP_F_func_1_BB__20_19)
   %22 = trunc i32 %21 to i16 (endState: LEGUP_F_func_1_BB__20_19)
   %23 = trunc i32 %21 to i8 (endState: LEGUP_F_func_1_BB__20_19)
   %scevgep3 = getelementptr [2 x i32]* %l_9, i32 0, i32 %21 (endState: LEGUP_F_func_1_BB__20_19)
   %exitcond2 = icmp eq i32 %21, 2 (endState: LEGUP_F_func_1_BB__20_19)
   br i1 %exitcond2, label %285, label %24
   Transition: if (%exitcond2): LEGUP_F_func_1_BB__285_221 default: LEGUP_F_func_1_BB__24_20
state: LEGUP_F_func_1_BB__24_20
   %25 = load i32* %scevgep3, align 4 (endState: LEGUP_F_func_1_BB__24_22)
   %29 = getelementptr inbounds [2 x i32]* %l_9, i32 0, i32 1 (endState: LEGUP_F_func_1_BB__24_20)
   %31 = load i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__24_22)
   Transition: default: LEGUP_F_func_1_BB__24_21
state: LEGUP_F_func_1_BB__24_21
   %30 = load i32* %29, align 4 (endState: LEGUP_F_func_1_BB__24_23)
   Transition: default: LEGUP_F_func_1_BB__24_22
state: LEGUP_F_func_1_BB__24_22
   %26 = trunc i32 %25 to i8 (endState: LEGUP_F_func_1_BB__24_22)
   store i8 %26, i8* @g_12, align 1 (endState: LEGUP_F_func_1_BB__24_23)
   %27 = trunc i32 %25 to i16 (endState: LEGUP_F_func_1_BB__24_22)
   %28 = and i16 %27, 255 (endState: LEGUP_F_func_1_BB__24_22)
   Transition: default: LEGUP_F_func_1_BB__24_23
state: LEGUP_F_func_1_BB__24_23
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   %32 = call signext i8 @func_19(i16 signext %28, i8 signext %26, i32 %30, i32 %31) #2 (endState: LEGUP_function_call_24)
   Transition: if (func_19_finish_final): LEGUP_F_func_1_BB__24_25 default: LEGUP_function_call_24
state: LEGUP_F_func_1_BB__24_25
   %33 = icmp eq i8 %32, 0 (endState: LEGUP_F_func_1_BB__24_25)
   br i1 %33, label %54, label %34
   Transition: if (%33): LEGUP_F_func_1_BB__54_43 default: LEGUP_F_func_1_BB__34_26
state: LEGUP_F_func_1_BB__34_26
   %35 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 4, i32 3), align 4 (endState: LEGUP_F_func_1_BB__34_28)
   %37 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_1_BB__34_28)
   Transition: default: LEGUP_F_func_1_BB__34_27
state: LEGUP_F_func_1_BB__34_27
   %39 = load i8* @g_12, align 1 (endState: LEGUP_F_func_1_BB__34_29)
   Transition: default: LEGUP_F_func_1_BB__34_28
state: LEGUP_F_func_1_BB__34_28
   %36 = trunc i32 %35 to i8 (endState: LEGUP_F_func_1_BB__34_28)
   %38 = trunc i32 %37 to i16 (endState: LEGUP_F_func_1_BB__34_28)
   Transition: default: LEGUP_F_func_1_BB__34_29
state: LEGUP_F_func_1_BB__34_29
   %40 = zext i8 %39 to i32 (endState: LEGUP_F_func_1_BB__34_29)
   Transition: default: LEGUP_function_call_30
state: LEGUP_function_call_30
   %41 = call signext i16 @func_39(i16 signext %38, i32 %40) #2 (endState: LEGUP_function_call_30)
   Transition: if (func_39_finish_final): LEGUP_F_func_1_BB__34_31 default: LEGUP_function_call_30
state: LEGUP_F_func_1_BB__34_31
   %42 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_1_BB__34_33)
   Transition: default: LEGUP_F_func_1_BB__34_32
state: LEGUP_F_func_1_BB__34_32
   Transition: default: LEGUP_F_func_1_BB__34_33
state: LEGUP_F_func_1_BB__34_33
   Transition: default: LEGUP_function_call_34
state: LEGUP_function_call_34
   %43 = call signext i16 @safe_rshift_func_int16_t_s_s(i16 signext %41, i32 %42) #2 (endState: LEGUP_function_call_34)
   Transition: if (safe_rshift_func_int16_t_s_s_finish_final): LEGUP_F_func_1_BB__34_35 default: LEGUP_function_call_34
state: LEGUP_F_func_1_BB__34_35
   %44 = sext i16 %43 to i32 (endState: LEGUP_F_func_1_BB__34_35)
   %45 = xor i32 %44, 205 (endState: LEGUP_F_func_1_BB__34_35)
   %46 = trunc i32 %45 to i8 (endState: LEGUP_F_func_1_BB__34_35)
   store i8 %46, i8* @g_12, align 1 (endState: LEGUP_F_func_1_BB__34_36)
   Transition: default: LEGUP_F_func_1_BB__34_36
state: LEGUP_F_func_1_BB__34_36
   Transition: default: LEGUP_function_call_37
state: LEGUP_function_call_37
   %47 = call signext i8 @safe_mod_func_int8_t_s_s(i8 signext %36, i8 signext %46) #2 (endState: LEGUP_function_call_37)
   Transition: if (safe_mod_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__34_38 default: LEGUP_function_call_37
state: LEGUP_F_func_1_BB__34_38
   %48 = sext i8 %47 to i16 (endState: LEGUP_F_func_1_BB__34_38)
   %49 = load i32* %scevgep3, align 4 (endState: LEGUP_F_func_1_BB__34_40)
   %51 = load i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__34_40)
   Transition: default: LEGUP_F_func_1_BB__34_39
state: LEGUP_F_func_1_BB__34_39
   Transition: default: LEGUP_F_func_1_BB__34_40
state: LEGUP_F_func_1_BB__34_40
   %50 = trunc i32 %49 to i16 (endState: LEGUP_F_func_1_BB__34_40)
   %52 = trunc i32 %51 to i8 (endState: LEGUP_F_func_1_BB__34_40)
   Transition: default: LEGUP_function_call_41
state: LEGUP_function_call_41
   %53 = call zeroext i16 @func_24(i16 zeroext %48, i32 %21, i16 zeroext %50, i8 signext %52) #2 (endState: LEGUP_function_call_41)
   Transition: if (func_24_finish_final): LEGUP_F_func_1_BB__34_42 default: LEGUP_function_call_41
state: LEGUP_F_func_1_BB__34_42
   br label %54
   Transition: default: LEGUP_F_func_1_BB__54_43
state: LEGUP_F_func_1_BB__54_43
   %l_45.0 = phi i32 [ %45, %34 ], [ -10, %24 ] (endState: LEGUP_F_func_1_BB__54_43)
   %55 = phi i32 [ 1, %34 ], [ 0, %24 ] (endState: LEGUP_F_func_1_BB__54_43)
   %56 = getelementptr inbounds [4 x i32]* %l_46, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__54_43)
   %57 = load i32* %56, align 4 (endState: LEGUP_F_func_1_BB__54_45)
   Transition: default: LEGUP_F_func_1_BB__54_44
state: LEGUP_F_func_1_BB__54_44
   Transition: default: LEGUP_F_func_1_BB__54_45
state: LEGUP_F_func_1_BB__54_45
   %58 = or i32 %57, %55 (endState: LEGUP_F_func_1_BB__54_45)
   store i32 %58, i32* %56, align 4 (endState: LEGUP_F_func_1_BB__54_46)
   %59 = icmp ugt i32 %58, -6 (endState: LEGUP_F_func_1_BB__54_45)
   %60 = zext i1 %59 to i32 (endState: LEGUP_F_func_1_BB__54_45)
   Transition: default: LEGUP_F_func_1_BB__54_46
state: LEGUP_F_func_1_BB__54_46
   Transition: default: LEGUP_function_call_47
state: LEGUP_function_call_47
   %61 = call i32 @safe_sub_func_int32_t_s_s(i32 %60, i32 -384561695) #2 (endState: LEGUP_function_call_47)
   Transition: if (safe_sub_func_int32_t_s_s_finish_final): LEGUP_F_func_1_BB__54_48 default: LEGUP_function_call_47
state: LEGUP_F_func_1_BB__54_48
   %62 = trunc i32 %61 to i8 (endState: LEGUP_F_func_1_BB__54_48)
   Transition: default: LEGUP_function_call_49
state: LEGUP_function_call_49
   %63 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %62, i8 signext -78) #2 (endState: LEGUP_function_call_49)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__54_50 default: LEGUP_function_call_49
state: LEGUP_F_func_1_BB__54_50
   Transition: default: LEGUP_function_call_51
state: LEGUP_function_call_51
   %64 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext -49, i8 signext %63) #2 (endState: LEGUP_function_call_51)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__54_52 default: LEGUP_function_call_51
state: LEGUP_F_func_1_BB__54_52
   %.lobit = lshr i8 %64, 7 (endState: LEGUP_F_func_1_BB__54_52)
   %65 = zext i8 %.lobit to i32 (endState: LEGUP_F_func_1_BB__54_52)
   %.not = xor i32 %65, 1 (endState: LEGUP_F_func_1_BB__54_52)
   %66 = load i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__54_54)
   Transition: default: LEGUP_F_func_1_BB__54_53
state: LEGUP_F_func_1_BB__54_53
   Transition: default: LEGUP_F_func_1_BB__54_54
state: LEGUP_F_func_1_BB__54_54
   %67 = icmp slt i32 %.not, %66 (endState: LEGUP_F_func_1_BB__54_54)
   %68 = zext i1 %67 to i16 (endState: LEGUP_F_func_1_BB__54_54)
   %69 = trunc i32 %66 to i16 (endState: LEGUP_F_func_1_BB__54_54)
   Transition: default: LEGUP_function_call_55
state: LEGUP_function_call_55
   %70 = call zeroext i16 @safe_mul_func_uint16_t_u_u(i16 zeroext %68, i16 zeroext %69) #2 (endState: LEGUP_function_call_55)
   Transition: if (safe_mul_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__54_56 default: LEGUP_function_call_55
state: LEGUP_F_func_1_BB__54_56
   %71 = icmp eq i16 %70, 0 (endState: LEGUP_F_func_1_BB__54_56)
   br i1 %71, label %92, label %72
   Transition: if (%71): LEGUP_F_func_1_BB__92_78 default: LEGUP_F_func_1_BB__72_57
state: LEGUP_F_func_1_BB__72_57
   br label %73
   Transition: default: LEGUP_F_func_1_BB__73_58
state: LEGUP_F_func_1_BB__73_58
   %storemerge1 = phi i8 [ 0, %72 ], [ %90, %88 ] (endState: LEGUP_F_func_1_BB__73_58)
   store i8 %storemerge1, i8* @g_12, align 1 (endState: LEGUP_F_func_1_BB__73_59)
   %74 = icmp ult i8 %storemerge1, 2 (endState: LEGUP_F_func_1_BB__73_58)
   Transition: default: LEGUP_F_func_1_BB__73_59
state: LEGUP_F_func_1_BB__73_59
   br i1 %74, label %75, label %.loopexit
   Transition: if (%74): LEGUP_F_func_1_BB__75_60 default: LEGUP_F_func_1_BB_loopexit_76
state: LEGUP_F_func_1_BB__75_60
   %76 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 5), align 4 (endState: LEGUP_F_func_1_BB__75_62)
   Transition: default: LEGUP_F_func_1_BB__75_61
state: LEGUP_F_func_1_BB__75_61
   Transition: default: LEGUP_F_func_1_BB__75_62
state: LEGUP_F_func_1_BB__75_62
   %77 = icmp eq i32 %76, 0 (endState: LEGUP_F_func_1_BB__75_62)
   br i1 %77, label %79, label %78
   Transition: if (%77): LEGUP_F_func_1_BB__79_64 default: LEGUP_F_func_1_BB__78_63
state: LEGUP_F_func_1_BB__78_63
   br label %91
   Transition: default: LEGUP_F_func_1_BB__91_77
state: LEGUP_F_func_1_BB__79_64
   %80 = load i32* @g_44, align 4 (endState: LEGUP_F_func_1_BB__79_66)
   Transition: default: LEGUP_F_func_1_BB__79_65
state: LEGUP_F_func_1_BB__79_65
   Transition: default: LEGUP_F_func_1_BB__79_66
state: LEGUP_F_func_1_BB__79_66
   %81 = icmp eq i32 %80, 0 (endState: LEGUP_F_func_1_BB__79_66)
   br i1 %81, label %83, label %82
   Transition: if (%81): LEGUP_F_func_1_BB__83_68 default: LEGUP_F_func_1_BB__82_67
state: LEGUP_F_func_1_BB__82_67
   br label %91
   Transition: default: LEGUP_F_func_1_BB__91_77
state: LEGUP_F_func_1_BB__83_68
   %84 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_1_BB__83_70)
   Transition: default: LEGUP_F_func_1_BB__83_69
state: LEGUP_F_func_1_BB__83_69
   Transition: default: LEGUP_F_func_1_BB__83_70
state: LEGUP_F_func_1_BB__83_70
   %85 = icmp eq i32 %84, 0 (endState: LEGUP_F_func_1_BB__83_70)
   br i1 %85, label %87, label %86
   Transition: if (%85): LEGUP_F_func_1_BB__87_72 default: LEGUP_F_func_1_BB__86_71
state: LEGUP_F_func_1_BB__86_71
   br label %88
   Transition: default: LEGUP_F_func_1_BB__88_73
state: LEGUP_F_func_1_BB__87_72
   br label %88
   Transition: default: LEGUP_F_func_1_BB__88_73
state: LEGUP_F_func_1_BB__88_73
   %89 = load i8* @g_12, align 1 (endState: LEGUP_F_func_1_BB__88_75)
   Transition: default: LEGUP_F_func_1_BB__88_74
state: LEGUP_F_func_1_BB__88_74
   Transition: default: LEGUP_F_func_1_BB__88_75
state: LEGUP_F_func_1_BB__88_75
   %90 = add i8 %89, 1 (endState: LEGUP_F_func_1_BB__88_75)
   br label %73
   Transition: default: LEGUP_F_func_1_BB__73_58
state: LEGUP_F_func_1_BB_loopexit_76
   br label %91
   Transition: default: LEGUP_F_func_1_BB__91_77
state: LEGUP_F_func_1_BB__91_77
   br label %135
   Transition: default: LEGUP_F_func_1_BB__135_105
state: LEGUP_F_func_1_BB__92_78
   br i1 true, label %93, label %115
   Transition: if (true): LEGUP_F_func_1_BB__93_79 default: LEGUP_F_func_1_BB__115_91
state: LEGUP_F_func_1_BB__93_79
   %94 = load i32* @g_44, align 4 (endState: LEGUP_F_func_1_BB__93_81)
   %96 = getelementptr inbounds [2 x i32]* %l_9, i32 0, i32 1 (endState: LEGUP_F_func_1_BB__93_79)
   %97 = load i32* %96, align 4 (endState: LEGUP_F_func_1_BB__93_81)
   Transition: default: LEGUP_F_func_1_BB__93_80
state: LEGUP_F_func_1_BB__93_80
   Transition: default: LEGUP_F_func_1_BB__93_81
state: LEGUP_F_func_1_BB__93_81
   %95 = trunc i32 %94 to i16 (endState: LEGUP_F_func_1_BB__93_81)
   %98 = trunc i32 %97 to i16 (endState: LEGUP_F_func_1_BB__93_81)
   Transition: default: LEGUP_function_call_82
state: LEGUP_function_call_82
   %99 = call zeroext i16 @safe_sub_func_uint16_t_u_u(i16 zeroext %95, i16 zeroext %98) #2 (endState: LEGUP_function_call_82)
   Transition: if (safe_sub_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__93_83 default: LEGUP_function_call_82
state: LEGUP_F_func_1_BB__93_83
   %100 = icmp eq i16 %99, 0 (endState: LEGUP_F_func_1_BB__93_83)
   br i1 %100, label %102, label %101
   Transition: if (%100): LEGUP_F_func_1_BB__102_85 default: LEGUP_F_func_1_BB__101_84
state: LEGUP_F_func_1_BB__101_84
   br label %102
   Transition: default: LEGUP_F_func_1_BB__102_85
state: LEGUP_F_func_1_BB__102_85
   %103 = xor i32 %21, 2 (endState: LEGUP_F_func_1_BB__102_85)
   %104 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 2, i32 5), align 4 (endState: LEGUP_F_func_1_BB__102_87)
   %tmp = icmp ult i32 %94, -1627762983 (endState: LEGUP_F_func_1_BB__102_85)
   %109 = load i32* @g_44, align 4 (endState: LEGUP_F_func_1_BB__102_87)
   Transition: default: LEGUP_F_func_1_BB__102_86
state: LEGUP_F_func_1_BB__102_86
   %111 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 6, i32 5), align 4 (endState: LEGUP_F_func_1_BB__102_88)
   Transition: default: LEGUP_F_func_1_BB__102_87
state: LEGUP_F_func_1_BB__102_87
   %105 = icmp ule i32 %103, %104 (endState: LEGUP_F_func_1_BB__102_87)
   %106 = or i1 %105, %tmp (endState: LEGUP_F_func_1_BB__102_87)
   %107 = zext i1 %106 to i32 (endState: LEGUP_F_func_1_BB__102_87)
   %108 = or i32 %107, %21 (endState: LEGUP_F_func_1_BB__102_87)
   %110 = and i32 %108, %109 (endState: LEGUP_F_func_1_BB__102_87)
   Transition: default: LEGUP_F_func_1_BB__102_88
state: LEGUP_F_func_1_BB__102_88
   %112 = icmp ule i32 %110, %111 (endState: LEGUP_F_func_1_BB__102_88)
   %113 = zext i1 %112 to i16 (endState: LEGUP_F_func_1_BB__102_88)
   Transition: default: LEGUP_function_call_89
state: LEGUP_function_call_89
   %114 = call signext i16 @safe_mul_func_int16_t_s_s(i16 signext %113, i16 signext 0) #2 (endState: LEGUP_function_call_89)
   Transition: if (safe_mul_func_int16_t_s_s_finish_final): LEGUP_F_func_1_BB__102_90 default: LEGUP_function_call_89
state: LEGUP_F_func_1_BB__102_90
   br label %115
   Transition: default: LEGUP_F_func_1_BB__115_91
state: LEGUP_F_func_1_BB__115_91
   %116 = phi i16 [ 0, %92 ], [ 1, %102 ] (endState: LEGUP_F_func_1_BB__115_91)
   Transition: default: LEGUP_function_call_92
state: LEGUP_function_call_92
   %117 = call zeroext i16 @safe_lshift_func_uint16_t_u_s(i16 zeroext %116, i32 11) #2 (endState: LEGUP_function_call_92)
   Transition: if (safe_lshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_1_BB__115_93 default: LEGUP_function_call_92
state: LEGUP_F_func_1_BB__115_93
   %118 = zext i16 %117 to i32 (endState: LEGUP_F_func_1_BB__115_93)
   %119 = load i32* @g_44, align 4 (endState: LEGUP_F_func_1_BB__115_95)
   Transition: default: LEGUP_F_func_1_BB__115_94
state: LEGUP_F_func_1_BB__115_94
   Transition: default: LEGUP_F_func_1_BB__115_95
state: LEGUP_F_func_1_BB__115_95
   %120 = xor i32 %118, %119 (endState: LEGUP_F_func_1_BB__115_95)
   %121 = and i32 %120, 76 (endState: LEGUP_F_func_1_BB__115_95)
   %122 = icmp eq i32 %121, 0 (endState: LEGUP_F_func_1_BB__115_95)
   br i1 %122, label %123, label %126
   Transition: if (%122): LEGUP_F_func_1_BB__123_96 default: LEGUP_F_func_1_BB__126_99
state: LEGUP_F_func_1_BB__123_96
   %124 = load i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__123_98)
   Transition: default: LEGUP_F_func_1_BB__123_97
state: LEGUP_F_func_1_BB__123_97
   Transition: default: LEGUP_F_func_1_BB__123_98
state: LEGUP_F_func_1_BB__123_98
   %125 = icmp ne i32 %124, 0 (endState: LEGUP_F_func_1_BB__123_98)
   br label %126
   Transition: default: LEGUP_F_func_1_BB__126_99
state: LEGUP_F_func_1_BB__126_99
   %127 = phi i1 [ true, %115 ], [ %125, %123 ] (endState: LEGUP_F_func_1_BB__126_99)
   %128 = zext i1 %127 to i32 (endState: LEGUP_F_func_1_BB__126_99)
   %129 = icmp sgt i32 %128, %21 (endState: LEGUP_F_func_1_BB__126_99)
   %130 = zext i1 %129 to i16 (endState: LEGUP_F_func_1_BB__126_99)
   Transition: default: LEGUP_function_call_100
state: LEGUP_function_call_100
   %131 = call zeroext i16 @safe_add_func_uint16_t_u_u(i16 zeroext %130, i16 zeroext %22) #2 (endState: LEGUP_function_call_100)
   Transition: if (safe_add_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__126_101 default: LEGUP_function_call_100
state: LEGUP_F_func_1_BB__126_101
   Transition: default: LEGUP_function_call_102
state: LEGUP_function_call_102
   %132 = call zeroext i16 @safe_rshift_func_uint16_t_u_u(i16 zeroext %131, i32 -3) #2 (endState: LEGUP_function_call_102)
   Transition: if (safe_rshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__126_103 default: LEGUP_function_call_102
state: LEGUP_F_func_1_BB__126_103
   %133 = icmp ult i16 %132, 187 (endState: LEGUP_F_func_1_BB__126_103)
   %134 = zext i1 %133 to i32 (endState: LEGUP_F_func_1_BB__126_103)
   store i32 %134, i32* getelementptr inbounds ([3 x i32]* @g_61, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__126_104)
   Transition: default: LEGUP_F_func_1_BB__126_104
state: LEGUP_F_func_1_BB__126_104
   br label %135
   Transition: default: LEGUP_F_func_1_BB__135_105
state: LEGUP_F_func_1_BB__135_105
   %l_60.2 = phi i32 [ %l_60.1, %91 ], [ %134, %126 ] (endState: LEGUP_F_func_1_BB__135_105)
   %136 = getelementptr inbounds [2 x i32]* %l_9, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__135_105)
   %137 = load i32* %136, align 4 (endState: LEGUP_F_func_1_BB__135_107)
   %145 = getelementptr inbounds [2 x i32]* %l_9, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__135_105)
   Transition: default: LEGUP_F_func_1_BB__135_106
state: LEGUP_F_func_1_BB__135_106
   Transition: default: LEGUP_F_func_1_BB__135_107
state: LEGUP_F_func_1_BB__135_107
   %138 = trunc i32 %137 to i8 (endState: LEGUP_F_func_1_BB__135_107)
   Transition: default: LEGUP_function_call_108
state: LEGUP_function_call_108
   %139 = call zeroext i16 @safe_lshift_func_uint16_t_u_u(i16 zeroext 1, i32 12) #2 (endState: LEGUP_function_call_108)
   Transition: if (safe_lshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__135_109 default: LEGUP_function_call_108
state: LEGUP_F_func_1_BB__135_109
   %140 = zext i16 %139 to i32 (endState: LEGUP_F_func_1_BB__135_109)
   Transition: default: LEGUP_function_call_110
state: LEGUP_function_call_110
   %141 = call signext i8 @safe_lshift_func_int8_t_s_s(i8 signext %138, i32 %140) #2 (endState: LEGUP_function_call_110)
   Transition: if (safe_lshift_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__135_111 default: LEGUP_function_call_110
state: LEGUP_F_func_1_BB__135_111
   %142 = sext i8 %141 to i32 (endState: LEGUP_F_func_1_BB__135_111)
   %143 = xor i32 %142, 1 (endState: LEGUP_F_func_1_BB__135_111)
   %144 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 5, i32 5), align 4 (endState: LEGUP_F_func_1_BB__135_113)
   %146 = load i32* %145, align 4 (endState: LEGUP_F_func_1_BB__135_113)
   Transition: default: LEGUP_F_func_1_BB__135_112
state: LEGUP_F_func_1_BB__135_112
   %147 = load i32* @g_44, align 4 (endState: LEGUP_F_func_1_BB__135_114)
   %149 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 3, i32 1), align 4 (endState: LEGUP_F_func_1_BB__135_114)
   Transition: default: LEGUP_F_func_1_BB__135_113
state: LEGUP_F_func_1_BB__135_113
   Transition: default: LEGUP_F_func_1_BB__135_114
state: LEGUP_F_func_1_BB__135_114
   %148 = trunc i32 %147 to i16 (endState: LEGUP_F_func_1_BB__135_114)
   %150 = trunc i32 %149 to i16 (endState: LEGUP_F_func_1_BB__135_114)
   Transition: default: LEGUP_function_call_115
state: LEGUP_function_call_115
   %151 = call signext i16 @safe_sub_func_int16_t_s_s(i16 signext %148, i16 signext %150) #2 (endState: LEGUP_function_call_115)
   Transition: if (safe_sub_func_int16_t_s_s_finish_final): LEGUP_F_func_1_BB__135_116 default: LEGUP_function_call_115
state: LEGUP_F_func_1_BB__135_116
   %152 = sext i16 %151 to i32 (endState: LEGUP_F_func_1_BB__135_116)
   %153 = icmp sgt i32 %146, %152 (endState: LEGUP_F_func_1_BB__135_116)
   %154 = zext i1 %153 to i32 (endState: LEGUP_F_func_1_BB__135_116)
   %155 = icmp slt i32 %154, %21 (endState: LEGUP_F_func_1_BB__135_116)
   %156 = zext i1 %155 to i16 (endState: LEGUP_F_func_1_BB__135_116)
   Transition: default: LEGUP_function_call_117
state: LEGUP_function_call_117
   %157 = call zeroext i16 @safe_rshift_func_uint16_t_u_s(i16 zeroext %156, i32 9) #2 (endState: LEGUP_function_call_117)
   Transition: if (safe_rshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_1_BB__135_118 default: LEGUP_function_call_117
state: LEGUP_F_func_1_BB__135_118
   %158 = zext i16 %157 to i32 (endState: LEGUP_F_func_1_BB__135_118)
   %159 = and i32 %144, %158 (endState: LEGUP_F_func_1_BB__135_118)
   %160 = xor i32 %l_45.0, %159 (endState: LEGUP_F_func_1_BB__135_118)
   %161 = trunc i32 %160 to i8 (endState: LEGUP_F_func_1_BB__135_118)
   %162 = load i32* @g_44, align 4 (endState: LEGUP_F_func_1_BB__135_120)
   Transition: default: LEGUP_F_func_1_BB__135_119
state: LEGUP_F_func_1_BB__135_119
   Transition: default: LEGUP_F_func_1_BB__135_120
state: LEGUP_F_func_1_BB__135_120
   %163 = trunc i32 %162 to i8 (endState: LEGUP_F_func_1_BB__135_120)
   Transition: default: LEGUP_function_call_121
state: LEGUP_function_call_121
   %164 = call zeroext i8 @safe_sub_func_uint8_t_u_u(i8 zeroext %161, i8 zeroext %163) #2 (endState: LEGUP_function_call_121)
   Transition: if (safe_sub_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__135_122 default: LEGUP_function_call_121
state: LEGUP_F_func_1_BB__135_122
   %165 = load i8* @g_12, align 1 (endState: LEGUP_F_func_1_BB__135_124)
   Transition: default: LEGUP_F_func_1_BB__135_123
state: LEGUP_F_func_1_BB__135_123
   Transition: default: LEGUP_F_func_1_BB__135_124
state: LEGUP_F_func_1_BB__135_124
   %166 = and i8 %164, %165 (endState: LEGUP_F_func_1_BB__135_124)
   %167 = icmp eq i8 %166, 0 (endState: LEGUP_F_func_1_BB__135_124)
   br i1 %167, label %169, label %168
   Transition: if (%167): LEGUP_F_func_1_BB__169_126 default: LEGUP_F_func_1_BB__168_125
state: LEGUP_F_func_1_BB__168_125
   br label %169
   Transition: default: LEGUP_F_func_1_BB__169_126
state: LEGUP_F_func_1_BB__169_126
   %170 = phi i32 [ 0, %135 ], [ 1, %168 ] (endState: LEGUP_F_func_1_BB__169_126)
   %171 = icmp sle i32 %143, %170 (endState: LEGUP_F_func_1_BB__169_126)
   %172 = zext i1 %171 to i16 (endState: LEGUP_F_func_1_BB__169_126)
   %173 = getelementptr inbounds [2 x i32]* %l_9, i32 0, i32 1 (endState: LEGUP_F_func_1_BB__169_126)
   %174 = load i32* %173, align 4 (endState: LEGUP_F_func_1_BB__169_128)
   Transition: default: LEGUP_F_func_1_BB__169_127
state: LEGUP_F_func_1_BB__169_127
   Transition: default: LEGUP_F_func_1_BB__169_128
state: LEGUP_F_func_1_BB__169_128
   %175 = trunc i32 %174 to i16 (endState: LEGUP_F_func_1_BB__169_128)
   Transition: default: LEGUP_function_call_129
state: LEGUP_function_call_129
   %176 = call zeroext i16 @safe_add_func_uint16_t_u_u(i16 zeroext %172, i16 zeroext %175) #2 (endState: LEGUP_function_call_129)
   Transition: if (safe_add_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__169_130 default: LEGUP_function_call_129
state: LEGUP_F_func_1_BB__169_130
   %177 = icmp eq i16 %176, 0 (endState: LEGUP_F_func_1_BB__169_130)
   br i1 %177, label %179, label %178
   Transition: if (%177): LEGUP_F_func_1_BB__179_132 default: LEGUP_F_func_1_BB__178_131
state: LEGUP_F_func_1_BB__178_131
   br label %179
   Transition: default: LEGUP_F_func_1_BB__179_132
state: LEGUP_F_func_1_BB__179_132
   %180 = phi i32 [ 0, %169 ], [ 1, %178 ] (endState: LEGUP_F_func_1_BB__179_132)
   store i32 %180, i32* @g_77, align 4 (endState: LEGUP_F_func_1_BB__179_133)
   Transition: default: LEGUP_F_func_1_BB__179_133
state: LEGUP_F_func_1_BB__179_133
   br label %181
   Transition: default: LEGUP_F_func_1_BB__181_134
state: LEGUP_F_func_1_BB__181_134
   %indvar = phi i32 [ %indvar.next, %190 ], [ 0, %179 ] (endState: LEGUP_F_func_1_BB__181_134)
   %exitcond1 = icmp eq i32 %indvar, 2 (endState: LEGUP_F_func_1_BB__181_134)
   br i1 %exitcond1, label %191, label %182
   Transition: if (%exitcond1): LEGUP_F_func_1_BB__191_142 default: LEGUP_F_func_1_BB__182_135
state: LEGUP_F_func_1_BB__182_135
   %183 = trunc i32 %l_60.2 to i8 (endState: LEGUP_F_func_1_BB__182_135)
   %184 = load i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__182_137)
   %185 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 4, i32 5), align 4 (endState: LEGUP_F_func_1_BB__182_137)
   Transition: default: LEGUP_F_func_1_BB__182_136
state: LEGUP_F_func_1_BB__182_136
   Transition: default: LEGUP_F_func_1_BB__182_137
state: LEGUP_F_func_1_BB__182_137
   %186 = icmp ugt i32 %184, %185 (endState: LEGUP_F_func_1_BB__182_137)
   %187 = zext i1 %186 to i8 (endState: LEGUP_F_func_1_BB__182_137)
   Transition: default: LEGUP_function_call_138
state: LEGUP_function_call_138
   %188 = call signext i8 @safe_sub_func_int8_t_s_s(i8 signext %183, i8 signext %187) #2 (endState: LEGUP_function_call_138)
   Transition: if (safe_sub_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__182_139 default: LEGUP_function_call_138
state: LEGUP_F_func_1_BB__182_139
   %189 = sext i8 %188 to i32 (endState: LEGUP_F_func_1_BB__182_139)
   store i32 %189, i32* @g_77, align 4 (endState: LEGUP_F_func_1_BB__182_140)
   Transition: default: LEGUP_F_func_1_BB__182_140
state: LEGUP_F_func_1_BB__182_140
   br label %190
   Transition: default: LEGUP_F_func_1_BB__190_141
state: LEGUP_F_func_1_BB__190_141
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_func_1_BB__190_141)
   br label %181
   Transition: default: LEGUP_F_func_1_BB__181_134
state: LEGUP_F_func_1_BB__191_142
   %192 = load i32* @g_77, align 4 (endState: LEGUP_F_func_1_BB__191_144)
   Transition: default: LEGUP_F_func_1_BB__191_143
state: LEGUP_F_func_1_BB__191_143
   Transition: default: LEGUP_F_func_1_BB__191_144
state: LEGUP_F_func_1_BB__191_144
   %193 = icmp eq i32 %192, 0 (endState: LEGUP_F_func_1_BB__191_144)
   br i1 %193, label %234, label %194
   Transition: if (%193): LEGUP_F_func_1_BB__234_178 default: LEGUP_F_func_1_BB__194_145
state: LEGUP_F_func_1_BB__194_145
   %195 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__194_147)
   Transition: default: LEGUP_F_func_1_BB__194_146
state: LEGUP_F_func_1_BB__194_146
   Transition: default: LEGUP_F_func_1_BB__194_147
state: LEGUP_F_func_1_BB__194_147
   %196 = icmp eq i32 %195, 0 (endState: LEGUP_F_func_1_BB__194_147)
   br i1 %196, label %204, label %197
   Transition: if (%196): LEGUP_F_func_1_BB__204_152 default: LEGUP_F_func_1_BB__197_148
state: LEGUP_F_func_1_BB__197_148
   %198 = icmp ne i32 %21, 1 (endState: LEGUP_F_func_1_BB__197_148)
   %199 = zext i1 %198 to i8 (endState: LEGUP_F_func_1_BB__197_148)
   %200 = or i8 %199, -94 (endState: LEGUP_F_func_1_BB__197_148)
   Transition: default: LEGUP_function_call_149
state: LEGUP_function_call_149
   %201 = call zeroext i8 @safe_rshift_func_uint8_t_u_s(i8 zeroext %200, i32 0) #2 (endState: LEGUP_function_call_149)
   Transition: if (safe_rshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_1_BB__197_150 default: LEGUP_function_call_149
state: LEGUP_F_func_1_BB__197_150
   %202 = zext i8 %201 to i16 (endState: LEGUP_F_func_1_BB__197_150)
   store i16 %202, i16* @g_113, align 2 (endState: LEGUP_F_func_1_BB__197_151)
   %203 = icmp ne i8 %201, 0 (endState: LEGUP_F_func_1_BB__197_150)
   Transition: default: LEGUP_F_func_1_BB__197_151
state: LEGUP_F_func_1_BB__197_151
   br label %204
   Transition: default: LEGUP_F_func_1_BB__204_152
state: LEGUP_F_func_1_BB__204_152
   %205 = phi i1 [ false, %194 ], [ %203, %197 ] (endState: LEGUP_F_func_1_BB__204_152)
   %206 = zext i1 %205 to i32 (endState: LEGUP_F_func_1_BB__204_152)
   store i32 %206, i32* @g_77, align 4 (endState: LEGUP_F_func_1_BB__204_153)
   Transition: default: LEGUP_F_func_1_BB__204_153
state: LEGUP_F_func_1_BB__204_153
   br i1 %205, label %210, label %207
   Transition: if (%205): LEGUP_F_func_1_BB__210_157 default: LEGUP_F_func_1_BB__207_154
state: LEGUP_F_func_1_BB__207_154
   %208 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_1_BB__207_156)
   Transition: default: LEGUP_F_func_1_BB__207_155
state: LEGUP_F_func_1_BB__207_155
   Transition: default: LEGUP_F_func_1_BB__207_156
state: LEGUP_F_func_1_BB__207_156
   %209 = icmp ne i32 %208, 0 (endState: LEGUP_F_func_1_BB__207_156)
   br label %210
   Transition: default: LEGUP_F_func_1_BB__210_157
state: LEGUP_F_func_1_BB__210_157
   %211 = phi i1 [ true, %204 ], [ %209, %207 ] (endState: LEGUP_F_func_1_BB__210_157)
   %212 = zext i1 %211 to i8 (endState: LEGUP_F_func_1_BB__210_157)
   %221 = trunc i32 %195 to i8 (endState: LEGUP_F_func_1_BB__210_157)
   %229 = getelementptr inbounds [4 x i32]* %l_46, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__210_157)
   Transition: default: LEGUP_function_call_158
state: LEGUP_function_call_158
   %213 = call zeroext i8 @safe_add_func_uint8_t_u_u(i8 zeroext %212, i8 zeroext -7) #2 (endState: LEGUP_function_call_158)
   Transition: if (safe_add_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__210_159 default: LEGUP_function_call_158
state: LEGUP_F_func_1_BB__210_159
   %214 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_1_BB__210_161)
   %217 = load i32* getelementptr inbounds ([3 x i32]* @g_61, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__210_161)
   Transition: default: LEGUP_F_func_1_BB__210_160
state: LEGUP_F_func_1_BB__210_160
   Transition: default: LEGUP_F_func_1_BB__210_161
state: LEGUP_F_func_1_BB__210_161
   %215 = icmp eq i32 %214, 0 (endState: LEGUP_F_func_1_BB__210_161)
   %216 = zext i1 %215 to i32 (endState: LEGUP_F_func_1_BB__210_161)
   %218 = icmp slt i32 %216, %217 (endState: LEGUP_F_func_1_BB__210_161)
   %219 = zext i1 %218 to i8 (endState: LEGUP_F_func_1_BB__210_161)
   Transition: default: LEGUP_function_call_162
state: LEGUP_function_call_162
   %220 = call signext i8 @safe_sub_func_int8_t_s_s(i8 signext %219, i8 signext -1) #2 (endState: LEGUP_function_call_162)
   Transition: if (safe_sub_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__210_163 default: LEGUP_function_call_162
state: LEGUP_F_func_1_BB__210_163
   Transition: default: LEGUP_function_call_164
state: LEGUP_function_call_164
   %222 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %221, i8 signext %23) #2 (endState: LEGUP_function_call_164)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__210_165 default: LEGUP_function_call_164
state: LEGUP_F_func_1_BB__210_165
   %223 = load i32* @g_114, align 4 (endState: LEGUP_F_func_1_BB__210_167)
   Transition: default: LEGUP_F_func_1_BB__210_166
state: LEGUP_F_func_1_BB__210_166
   Transition: default: LEGUP_F_func_1_BB__210_167
state: LEGUP_F_func_1_BB__210_167
   %224 = trunc i32 %223 to i8 (endState: LEGUP_F_func_1_BB__210_167)
   Transition: default: LEGUP_function_call_168
state: LEGUP_function_call_168
   %225 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %222, i8 signext %224) #2 (endState: LEGUP_function_call_168)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__210_169 default: LEGUP_function_call_168
state: LEGUP_F_func_1_BB__210_169
   %226 = load i32* %scevgep3, align 4 (endState: LEGUP_F_func_1_BB__210_171)
   Transition: default: LEGUP_F_func_1_BB__210_170
state: LEGUP_F_func_1_BB__210_170
   Transition: default: LEGUP_F_func_1_BB__210_171
state: LEGUP_F_func_1_BB__210_171
   Transition: default: LEGUP_function_call_172
state: LEGUP_function_call_172
   %227 = call zeroext i8 @safe_rshift_func_uint8_t_u_s(i8 zeroext 1, i32 %226) #2 (endState: LEGUP_function_call_172)
   Transition: if (safe_rshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_1_BB__210_173 default: LEGUP_function_call_172
state: LEGUP_F_func_1_BB__210_173
   %228 = zext i8 %227 to i32 (endState: LEGUP_F_func_1_BB__210_173)
   %230 = load i32* %229, align 4 (endState: LEGUP_F_func_1_BB__210_175)
   Transition: default: LEGUP_F_func_1_BB__210_174
state: LEGUP_F_func_1_BB__210_174
   Transition: default: LEGUP_F_func_1_BB__210_175
state: LEGUP_F_func_1_BB__210_175
   %231 = and i32 %228, %230 (endState: LEGUP_F_func_1_BB__210_175)
   %232 = trunc i32 %231 to i16 (endState: LEGUP_F_func_1_BB__210_175)
   Transition: default: LEGUP_function_call_176
state: LEGUP_function_call_176
   %233 = call zeroext i16 @safe_lshift_func_uint16_t_u_s(i16 zeroext %232, i32 %21) #2 (endState: LEGUP_function_call_176)
   Transition: if (safe_lshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_1_BB__210_177 default: LEGUP_function_call_176
state: LEGUP_F_func_1_BB__210_177
   br label %234
   Transition: default: LEGUP_F_func_1_BB__234_178
state: LEGUP_F_func_1_BB__234_178
   %l_110.1 = phi i32 [ %195, %210 ], [ %l_110.0, %191 ] (endState: LEGUP_F_func_1_BB__234_178)
   %235 = phi i32 [ 1, %210 ], [ 0, %191 ] (endState: LEGUP_F_func_1_BB__234_178)
   %236 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 0, i32 5), align 4 (endState: LEGUP_F_func_1_BB__234_180)
   Transition: default: LEGUP_F_func_1_BB__234_179
state: LEGUP_F_func_1_BB__234_179
   Transition: default: LEGUP_F_func_1_BB__234_180
state: LEGUP_F_func_1_BB__234_180
   %237 = icmp ugt i32 %235, %236 (endState: LEGUP_F_func_1_BB__234_180)
   %238 = zext i1 %237 to i32 (endState: LEGUP_F_func_1_BB__234_180)
   %239 = icmp sle i32 %238, %21 (endState: LEGUP_F_func_1_BB__234_180)
   %240 = zext i1 %239 to i16 (endState: LEGUP_F_func_1_BB__234_180)
   Transition: default: LEGUP_function_call_181
state: LEGUP_function_call_181
   %241 = call signext i16 @safe_rshift_func_int16_t_s_s(i16 signext %240, i32 1) #2 (endState: LEGUP_function_call_181)
   Transition: if (safe_rshift_func_int16_t_s_s_finish_final): LEGUP_F_func_1_BB__234_182 default: LEGUP_function_call_181
state: LEGUP_F_func_1_BB__234_182
   %242 = icmp eq i16 %241, 0 (endState: LEGUP_F_func_1_BB__234_182)
   br i1 %242, label %246, label %243
   Transition: if (%242): LEGUP_F_func_1_BB__246_186 default: LEGUP_F_func_1_BB__243_183
state: LEGUP_F_func_1_BB__243_183
   %244 = load i32* getelementptr inbounds ([3 x i32]* @g_61, i32 0, i32 0), align 4 (endState: LEGUP_F_func_1_BB__243_185)
   Transition: default: LEGUP_F_func_1_BB__243_184
state: LEGUP_F_func_1_BB__243_184
   Transition: default: LEGUP_F_func_1_BB__243_185
state: LEGUP_F_func_1_BB__243_185
   %245 = icmp ne i32 %244, 0 (endState: LEGUP_F_func_1_BB__243_185)
   br label %246
   Transition: default: LEGUP_F_func_1_BB__246_186
state: LEGUP_F_func_1_BB__246_186
   %247 = phi i1 [ false, %234 ], [ %245, %243 ] (endState: LEGUP_F_func_1_BB__246_186)
   %248 = zext i1 %247 to i16 (endState: LEGUP_F_func_1_BB__246_186)
   %249 = getelementptr inbounds [4 x i32]* %l_46, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__246_186)
   %250 = load i32* %249, align 4 (endState: LEGUP_F_func_1_BB__246_188)
   %253 = getelementptr inbounds [4 x i32]* %l_46, i32 0, i32 2 (endState: LEGUP_F_func_1_BB__246_186)
   Transition: default: LEGUP_F_func_1_BB__246_187
state: LEGUP_F_func_1_BB__246_187
   Transition: default: LEGUP_F_func_1_BB__246_188
state: LEGUP_F_func_1_BB__246_188
   Transition: default: LEGUP_function_call_189
state: LEGUP_function_call_189
   %251 = call zeroext i16 @safe_lshift_func_uint16_t_u_u(i16 zeroext %248, i32 %250) #2 (endState: LEGUP_function_call_189)
   Transition: if (safe_lshift_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__246_190 default: LEGUP_function_call_189
state: LEGUP_F_func_1_BB__246_190
   Transition: default: LEGUP_function_call_191
state: LEGUP_function_call_191
   %252 = call i32 @safe_add_func_uint32_t_u_u(i32 -989156845, i32 0) #2 (endState: LEGUP_function_call_191)
   Transition: if (safe_add_func_uint32_t_u_u_finish_final): LEGUP_F_func_1_BB__246_192 default: LEGUP_function_call_191
state: LEGUP_F_func_1_BB__246_192
   %254 = load i32* %253, align 4 (endState: LEGUP_F_func_1_BB__246_194)
   Transition: default: LEGUP_F_func_1_BB__246_193
state: LEGUP_F_func_1_BB__246_193
   Transition: default: LEGUP_F_func_1_BB__246_194
state: LEGUP_F_func_1_BB__246_194
   %255 = or i32 %252, %254 (endState: LEGUP_F_func_1_BB__246_194)
   %256 = trunc i32 %255 to i8 (endState: LEGUP_F_func_1_BB__246_194)
   Transition: default: LEGUP_function_call_195
state: LEGUP_function_call_195
   %257 = call zeroext i8 @safe_lshift_func_uint8_t_u_s(i8 zeroext %256, i32 17530) #2 (endState: LEGUP_function_call_195)
   Transition: if (safe_lshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_1_BB__246_196 default: LEGUP_function_call_195
state: LEGUP_F_func_1_BB__246_196
   %258 = icmp eq i8 %257, 0 (endState: LEGUP_F_func_1_BB__246_196)
   br i1 %258, label %259, label %260
   Transition: if (%258): LEGUP_F_func_1_BB__259_197 default: LEGUP_F_func_1_BB__260_198
state: LEGUP_F_func_1_BB__259_197
   br label %260
   Transition: default: LEGUP_F_func_1_BB__260_198
state: LEGUP_F_func_1_BB__260_198
   %261 = load i32* getelementptr inbounds ([3 x i32]* @g_61, i32 0, i32 1), align 4 (endState: LEGUP_F_func_1_BB__260_200)
   Transition: default: LEGUP_F_func_1_BB__260_199
state: LEGUP_F_func_1_BB__260_199
   Transition: default: LEGUP_F_func_1_BB__260_200
state: LEGUP_F_func_1_BB__260_200
   %.tr = trunc i32 %261 to i16 (endState: LEGUP_F_func_1_BB__260_200)
   %262 = and i16 %.tr, 1 (endState: LEGUP_F_func_1_BB__260_200)
   store i16 %262, i16* getelementptr inbounds ([9 x [1 x i16]]* @g_116, i32 0, i32 2, i32 0), align 2 (endState: LEGUP_F_func_1_BB__260_201)
   Transition: default: LEGUP_F_func_1_BB__260_201
state: LEGUP_F_func_1_BB__260_201
   Transition: default: LEGUP_function_call_202
state: LEGUP_function_call_202
   %263 = call zeroext i16 @safe_lshift_func_uint16_t_u_s(i16 zeroext %262, i32 13) #2 (endState: LEGUP_function_call_202)
   Transition: if (safe_lshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_1_BB__260_203 default: LEGUP_function_call_202
state: LEGUP_F_func_1_BB__260_203
   %264 = load i32* %scevgep3, align 4 (endState: LEGUP_F_func_1_BB__260_205)
   %267 = load i32* getelementptr inbounds ([3 x i32]* @g_61, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__260_205)
   Transition: default: LEGUP_F_func_1_BB__260_204
state: LEGUP_F_func_1_BB__260_204
   Transition: default: LEGUP_F_func_1_BB__260_205
state: LEGUP_F_func_1_BB__260_205
   %265 = icmp slt i32 %l_110.1, %264 (endState: LEGUP_F_func_1_BB__260_205)
   %266 = zext i1 %265 to i8 (endState: LEGUP_F_func_1_BB__260_205)
   %268 = trunc i32 %267 to i8 (endState: LEGUP_F_func_1_BB__260_205)
   Transition: default: LEGUP_function_call_206
state: LEGUP_function_call_206
   %269 = call signext i8 @safe_sub_func_int8_t_s_s(i8 signext %266, i8 signext %268) #2 (endState: LEGUP_function_call_206)
   Transition: if (safe_sub_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__260_207 default: LEGUP_function_call_206
state: LEGUP_F_func_1_BB__260_207
   %270 = load i16* getelementptr inbounds ([9 x [1 x i16]]* @g_116, i32 0, i32 7, i32 0), align 2 (endState: LEGUP_F_func_1_BB__260_209)
   Transition: default: LEGUP_F_func_1_BB__260_208
state: LEGUP_F_func_1_BB__260_208
   Transition: default: LEGUP_F_func_1_BB__260_209
state: LEGUP_F_func_1_BB__260_209
   %271 = trunc i16 %270 to i8 (endState: LEGUP_F_func_1_BB__260_209)
   Transition: default: LEGUP_function_call_210
state: LEGUP_function_call_210
   %272 = call zeroext i8 @safe_add_func_uint8_t_u_u(i8 zeroext %271, i8 zeroext -1) #2 (endState: LEGUP_function_call_210)
   Transition: if (safe_add_func_uint8_t_u_u_finish_final): LEGUP_F_func_1_BB__260_211 default: LEGUP_function_call_210
state: LEGUP_F_func_1_BB__260_211
   br i1 true, label %273, label %276
   Transition: if (true): LEGUP_F_func_1_BB__273_212 default: LEGUP_F_func_1_BB__276_215
state: LEGUP_F_func_1_BB__273_212
   %274 = load i32* getelementptr inbounds ([3 x i32]* @g_61, i32 0, i32 2), align 4 (endState: LEGUP_F_func_1_BB__273_214)
   Transition: default: LEGUP_F_func_1_BB__273_213
state: LEGUP_F_func_1_BB__273_213
   Transition: default: LEGUP_F_func_1_BB__273_214
state: LEGUP_F_func_1_BB__273_214
   %275 = icmp ne i32 %274, 0 (endState: LEGUP_F_func_1_BB__273_214)
   br label %276
   Transition: default: LEGUP_F_func_1_BB__276_215
state: LEGUP_F_func_1_BB__276_215
   %277 = phi i1 [ false, %260 ], [ %275, %273 ] (endState: LEGUP_F_func_1_BB__276_215)
   %278 = zext i1 %277 to i16 (endState: LEGUP_F_func_1_BB__276_215)
   Transition: default: LEGUP_function_call_216
state: LEGUP_function_call_216
   %279 = call zeroext i16 @safe_mul_func_uint16_t_u_u(i16 zeroext %278, i16 zeroext 0) #2 (endState: LEGUP_function_call_216)
   Transition: if (safe_mul_func_uint16_t_u_u_finish_final): LEGUP_F_func_1_BB__276_217 default: LEGUP_function_call_216
state: LEGUP_F_func_1_BB__276_217
   %280 = icmp eq i16 %279, 0 (endState: LEGUP_F_func_1_BB__276_217)
   br i1 %280, label %281, label %282
   Transition: if (%280): LEGUP_F_func_1_BB__281_218 default: LEGUP_F_func_1_BB__282_219
state: LEGUP_F_func_1_BB__281_218
   br label %282
   Transition: default: LEGUP_F_func_1_BB__282_219
state: LEGUP_F_func_1_BB__282_219
   br label %283
   Transition: default: LEGUP_F_func_1_BB__283_220
state: LEGUP_F_func_1_BB__283_220
   %284 = add nsw i32 %21, 1 (endState: LEGUP_F_func_1_BB__283_220)
   br label %20
   Transition: default: LEGUP_F_func_1_BB__20_19
state: LEGUP_F_func_1_BB__285_221
   %286 = and i32 %l_110.0, 255 (endState: LEGUP_F_func_1_BB__285_221)
   store i32 0, i32* @g_77, align 4 (endState: LEGUP_F_func_1_BB__285_222)
   %287 = load i8* @g_12, align 1 (endState: LEGUP_F_func_1_BB__285_223)
   Transition: default: LEGUP_F_func_1_BB__285_222
state: LEGUP_F_func_1_BB__285_222
   Transition: default: LEGUP_F_func_1_BB__285_223
state: LEGUP_F_func_1_BB__285_223
   %288 = icmp ne i8 %287, 0 (endState: LEGUP_F_func_1_BB__285_223)
   %289 = zext i1 %288 to i32 (endState: LEGUP_F_func_1_BB__285_223)
   Transition: default: LEGUP_function_call_224
state: LEGUP_function_call_224
   %290 = call i32 @safe_sub_func_int32_t_s_s(i32 %289, i32 %l_110.0) #2 (endState: LEGUP_function_call_224)
   Transition: if (safe_sub_func_int32_t_s_s_finish_final): LEGUP_F_func_1_BB__285_225 default: LEGUP_function_call_224
state: LEGUP_F_func_1_BB__285_225
   Transition: default: LEGUP_function_call_226
state: LEGUP_function_call_226
   %291 = call i32 @safe_div_func_int32_t_s_s(i32 0, i32 %290) #2 (endState: LEGUP_function_call_226)
   Transition: if (safe_div_func_int32_t_s_s_finish_final): LEGUP_F_func_1_BB__285_227 default: LEGUP_function_call_226
state: LEGUP_F_func_1_BB__285_227
   %292 = load i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_1_BB__285_229)
   %297 = load i16* getelementptr inbounds ([9 x [1 x i16]]* @g_116, i32 0, i32 7, i32 0), align 2 (endState: LEGUP_F_func_1_BB__285_229)
   Transition: default: LEGUP_F_func_1_BB__285_228
state: LEGUP_F_func_1_BB__285_228
   %299 = load i32* @g_114, align 4 (endState: LEGUP_F_func_1_BB__285_230)
   Transition: default: LEGUP_F_func_1_BB__285_229
state: LEGUP_F_func_1_BB__285_229
   %293 = and i32 %292, %291 (endState: LEGUP_F_func_1_BB__285_229)
   store i32 %293, i32* getelementptr inbounds ([7 x [6 x i32]]* @g_34, i32 0, i32 1, i32 1), align 4 (endState: LEGUP_F_func_1_BB__285_230)
   %294 = xor i32 %l_60.1, %293 (endState: LEGUP_F_func_1_BB__285_229)
   %295 = icmp ult i32 %286, %294 (endState: LEGUP_F_func_1_BB__285_229)
   %296 = zext i1 %295 to i16 (endState: LEGUP_F_func_1_BB__285_229)
   %298 = and i16 %297, %296 (endState: LEGUP_F_func_1_BB__285_229)
   store i16 %298, i16* getelementptr inbounds ([9 x [1 x i16]]* @g_116, i32 0, i32 7, i32 0), align 2 (endState: LEGUP_F_func_1_BB__285_230)
   Transition: default: LEGUP_F_func_1_BB__285_230
state: LEGUP_F_func_1_BB__285_230
   %300 = and i32 %299, 1 (endState: LEGUP_F_func_1_BB__285_230)
   store i32 %300, i32* @g_114, align 4 (endState: LEGUP_F_func_1_BB__285_231)
   Transition: default: LEGUP_F_func_1_BB__285_231
state: LEGUP_F_func_1_BB__285_231
   br label %301
   Transition: default: LEGUP_F_func_1_BB__301_232
state: LEGUP_F_func_1_BB__301_232
   %l_60.3 = phi i32 [ %l_60.0, %12 ], [ %l_60.1, %285 ] (endState: LEGUP_F_func_1_BB__301_232)
   br label %302
   Transition: default: LEGUP_F_func_1_BB__302_233
state: LEGUP_F_func_1_BB__302_233
   %303 = load i32* @g_2, align 4 (endState: LEGUP_F_func_1_BB__302_235)
   Transition: default: LEGUP_F_func_1_BB__302_234
state: LEGUP_F_func_1_BB__302_234
   Transition: default: LEGUP_F_func_1_BB__302_235
state: LEGUP_F_func_1_BB__302_235
   %304 = add nsw i32 %303, -1 (endState: LEGUP_F_func_1_BB__302_235)
   br label %7
   Transition: default: LEGUP_F_func_1_BB__7_7
state: LEGUP_F_func_1_BB__305_236
   %306 = getelementptr inbounds [4 x i32]* %l_46, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__305_236)
   %307 = load i32* %306, align 4 (endState: LEGUP_F_func_1_BB__305_238)
   Transition: default: LEGUP_F_func_1_BB__305_237
state: LEGUP_F_func_1_BB__305_237
   Transition: default: LEGUP_F_func_1_BB__305_238
state: LEGUP_F_func_1_BB__305_238
   %308 = trunc i32 %307 to i8 (endState: LEGUP_F_func_1_BB__305_238)
   ret i8 %308
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 2
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %7 Num States: 2
Basic Block: %9 Num States: 3
Basic Block: %12 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %16 Num States: 2
Basic Block: %17 Num States: 1
Basic Block: %19 Num States: 1
Basic Block: %20 Num States: 1
Basic Block: %24 Num States: 6
Basic Block: %34 Num States: 17
Basic Block: %54 Num States: 14
Basic Block: %72 Num States: 1
Basic Block: %73 Num States: 2
Basic Block: %75 Num States: 3
Basic Block: %78 Num States: 1
Basic Block: %79 Num States: 3
Basic Block: %82 Num States: 1
Basic Block: %83 Num States: 3
Basic Block: %86 Num States: 1
Basic Block: %87 Num States: 1
Basic Block: %88 Num States: 3
Basic Block: %.loopexit Num States: 1
Basic Block: %91 Num States: 1
Basic Block: %92 Num States: 1
Basic Block: %93 Num States: 5
Basic Block: %101 Num States: 1
Basic Block: %102 Num States: 6
Basic Block: %115 Num States: 5
Basic Block: %123 Num States: 3
Basic Block: %126 Num States: 6
Basic Block: %135 Num States: 20
Basic Block: %168 Num States: 1
Basic Block: %169 Num States: 5
Basic Block: %178 Num States: 1
Basic Block: %179 Num States: 2
Basic Block: %181 Num States: 1
Basic Block: %182 Num States: 6
Basic Block: %190 Num States: 1
Basic Block: %191 Num States: 3
Basic Block: %194 Num States: 3
Basic Block: %197 Num States: 4
Basic Block: %204 Num States: 2
Basic Block: %207 Num States: 3
Basic Block: %210 Num States: 21
Basic Block: %234 Num States: 5
Basic Block: %243 Num States: 3
Basic Block: %246 Num States: 11
Basic Block: %259 Num States: 1
Basic Block: %260 Num States: 14
Basic Block: %273 Num States: 3
Basic Block: %276 Num States: 3
Basic Block: %281 Num States: 1
Basic Block: %282 Num States: 1
Basic Block: %283 Num States: 1
Basic Block: %285 Num States: 11
Basic Block: %301 Num States: 1
Basic Block: %302 Num States: 3
Basic Block: %305 Num States: 3
End Function: func_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: transparent_crc
state: LEGUP_0
   Transition: if (start): LEGUP_F_transparent_crc_BB__0_1 default: LEGUP_0
state: LEGUP_F_transparent_crc_BB__0_1
   %1 = icmp eq i32 %flag, 0 (endState: LEGUP_F_transparent_crc_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_8bytes(i64 %val) #2 (endState: LEGUP_function_call_2)
   Transition: if (crc32_8bytes_finish_final): LEGUP_F_transparent_crc_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_transparent_crc_BB__0_3
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_transparent_crc_BB__6_7 default: LEGUP_F_transparent_crc_BB__2_4
state: LEGUP_F_transparent_crc_BB__2_4
   %3 = load i32* @crc32_context, align 4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   Transition: default: LEGUP_F_transparent_crc_BB__2_5
state: LEGUP_F_transparent_crc_BB__2_5
   Transition: default: LEGUP_F_transparent_crc_BB__2_6
state: LEGUP_F_transparent_crc_BB__2_6
   %4 = xor i32 %3, -1 (endState: LEGUP_F_transparent_crc_BB__2_6)
   %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str12, i32 0, i32 0), i8* %vname, i32 %4) #3 (endState: LEGUP_F_transparent_crc_BB__2_6)
   br label %6
   Transition: default: LEGUP_F_transparent_crc_BB__6_7
state: LEGUP_F_transparent_crc_BB__6_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %2 Num States: 3
Basic Block: %6 Num States: 1
Basic Block: %0 Num States: 3
End Function: transparent_crc
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @platform_main_begin() #2 (endState: LEGUP_function_call_2)
   Transition: if (platform_main_begin_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_gentab() #2 (endState: LEGUP_function_call_4)
   Transition: if (crc32_gentab_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %1 = call signext i8 @func_1() #2 (endState: LEGUP_function_call_6)
   Transition: if (func_1_finish_final): LEGUP_F_main_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB__0_7
   %2 = load i32* @g_2, align 4 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   %3 = sext i32 %2 to i64 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @transparent_crc(i64 %3, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_10)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB__0_11
   %4 = load i8* @g_12, align 1 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_F_main_BB__0_12
state: LEGUP_F_main_BB__0_12
   Transition: default: LEGUP_F_main_BB__0_13
state: LEGUP_F_main_BB__0_13
   %5 = zext i8 %4 to i64 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @transparent_crc(i64 %5, i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_14)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_main_BB__0_15
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__6_16
   %7 = phi i32 [ 0, %0 ], [ %20, %19 ] (endState: LEGUP_F_main_BB__6_16)
   %exitcond7 = icmp eq i32 %7, 7 (endState: LEGUP_F_main_BB__6_16)
   br i1 %exitcond7, label %21, label %8
   Transition: if (%exitcond7): LEGUP_F_main_BB__21_29 default: LEGUP_F_main_BB__8_17
state: LEGUP_F_main_BB__8_17
   br label %9
   Transition: default: LEGUP_F_main_BB__9_18
state: LEGUP_F_main_BB__9_18
   %10 = phi i32 [ 0, %8 ], [ %17, %16 ] (endState: LEGUP_F_main_BB__9_18)
   %exitcond5 = icmp eq i32 %10, 6 (endState: LEGUP_F_main_BB__9_18)
   br i1 %exitcond5, label %18, label %11
   Transition: if (%exitcond5): LEGUP_F_main_BB__18_27 default: LEGUP_F_main_BB__11_19
state: LEGUP_F_main_BB__11_19
   %scevgep6 = getelementptr [7 x [6 x i32]]* @g_34, i32 0, i32 %7, i32 %10 (endState: LEGUP_F_main_BB__11_19)
   %12 = load i32* %scevgep6, align 4 (endState: LEGUP_F_main_BB__11_21)
   Transition: default: LEGUP_F_main_BB__11_20
state: LEGUP_F_main_BB__11_20
   Transition: default: LEGUP_F_main_BB__11_21
state: LEGUP_F_main_BB__11_21
   %13 = zext i32 %12 to i64 (endState: LEGUP_F_main_BB__11_21)
   Transition: default: LEGUP_function_call_22
state: LEGUP_function_call_22
   call void @transparent_crc(i64 %13, i8* getelementptr inbounds ([11 x i8]* @.str2, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_22)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__11_23 default: LEGUP_function_call_22
state: LEGUP_F_main_BB__11_23
   br i1 false, label %14, label %15
   Transition: if (false): LEGUP_F_main_BB__14_24 default: LEGUP_F_main_BB__15_25
state: LEGUP_F_main_BB__14_24
   br label %15
   Transition: default: LEGUP_F_main_BB__15_25
state: LEGUP_F_main_BB__15_25
   br label %16
   Transition: default: LEGUP_F_main_BB__16_26
state: LEGUP_F_main_BB__16_26
   %17 = add nsw i32 %10, 1 (endState: LEGUP_F_main_BB__16_26)
   br label %9
   Transition: default: LEGUP_F_main_BB__9_18
state: LEGUP_F_main_BB__18_27
   br label %19
   Transition: default: LEGUP_F_main_BB__19_28
state: LEGUP_F_main_BB__19_28
   %20 = add nsw i32 %7, 1 (endState: LEGUP_F_main_BB__19_28)
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__21_29
   %22 = load i32* @g_44, align 4 (endState: LEGUP_F_main_BB__21_31)
   Transition: default: LEGUP_F_main_BB__21_30
state: LEGUP_F_main_BB__21_30
   Transition: default: LEGUP_F_main_BB__21_31
state: LEGUP_F_main_BB__21_31
   %23 = sext i32 %22 to i64 (endState: LEGUP_F_main_BB__21_31)
   Transition: default: LEGUP_function_call_32
state: LEGUP_function_call_32
   call void @transparent_crc(i64 %23, i8* getelementptr inbounds ([5 x i8]* @.str4, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_32)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__21_33 default: LEGUP_function_call_32
state: LEGUP_F_main_BB__21_33
   br label %24
   Transition: default: LEGUP_F_main_BB__24_34
state: LEGUP_F_main_BB__24_34
   %25 = phi i32 [ 0, %21 ], [ %32, %31 ] (endState: LEGUP_F_main_BB__24_34)
   %exitcond3 = icmp eq i32 %25, 3 (endState: LEGUP_F_main_BB__24_34)
   br i1 %exitcond3, label %33, label %26
   Transition: if (%exitcond3): LEGUP_F_main_BB__33_43 default: LEGUP_F_main_BB__26_35
state: LEGUP_F_main_BB__26_35
   %scevgep4 = getelementptr [3 x i32]* @g_61, i32 0, i32 %25 (endState: LEGUP_F_main_BB__26_35)
   %27 = load i32* %scevgep4, align 4 (endState: LEGUP_F_main_BB__26_37)
   Transition: default: LEGUP_F_main_BB__26_36
state: LEGUP_F_main_BB__26_36
   Transition: default: LEGUP_F_main_BB__26_37
state: LEGUP_F_main_BB__26_37
   %28 = sext i32 %27 to i64 (endState: LEGUP_F_main_BB__26_37)
   Transition: default: LEGUP_function_call_38
state: LEGUP_function_call_38
   call void @transparent_crc(i64 %28, i8* getelementptr inbounds ([8 x i8]* @.str5, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_38)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__26_39 default: LEGUP_function_call_38
state: LEGUP_F_main_BB__26_39
   br i1 false, label %29, label %30
   Transition: if (false): LEGUP_F_main_BB__29_40 default: LEGUP_F_main_BB__30_41
state: LEGUP_F_main_BB__29_40
   br label %30
   Transition: default: LEGUP_F_main_BB__30_41
state: LEGUP_F_main_BB__30_41
   br label %31
   Transition: default: LEGUP_F_main_BB__31_42
state: LEGUP_F_main_BB__31_42
   %32 = add nsw i32 %25, 1 (endState: LEGUP_F_main_BB__31_42)
   br label %24
   Transition: default: LEGUP_F_main_BB__24_34
state: LEGUP_F_main_BB__33_43
   %34 = load i32* @g_77, align 4 (endState: LEGUP_F_main_BB__33_45)
   Transition: default: LEGUP_F_main_BB__33_44
state: LEGUP_F_main_BB__33_44
   Transition: default: LEGUP_F_main_BB__33_45
state: LEGUP_F_main_BB__33_45
   %35 = sext i32 %34 to i64 (endState: LEGUP_F_main_BB__33_45)
   Transition: default: LEGUP_function_call_46
state: LEGUP_function_call_46
   call void @transparent_crc(i64 %35, i8* getelementptr inbounds ([5 x i8]* @.str7, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_46)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__33_47 default: LEGUP_function_call_46
state: LEGUP_F_main_BB__33_47
   %36 = load i16* @g_113, align 2 (endState: LEGUP_F_main_BB__33_49)
   Transition: default: LEGUP_F_main_BB__33_48
state: LEGUP_F_main_BB__33_48
   Transition: default: LEGUP_F_main_BB__33_49
state: LEGUP_F_main_BB__33_49
   %37 = sext i16 %36 to i64 (endState: LEGUP_F_main_BB__33_49)
   Transition: default: LEGUP_function_call_50
state: LEGUP_function_call_50
   call void @transparent_crc(i64 %37, i8* getelementptr inbounds ([6 x i8]* @.str8, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_50)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__33_51 default: LEGUP_function_call_50
state: LEGUP_F_main_BB__33_51
   %38 = load i32* @g_114, align 4 (endState: LEGUP_F_main_BB__33_53)
   Transition: default: LEGUP_F_main_BB__33_52
state: LEGUP_F_main_BB__33_52
   Transition: default: LEGUP_F_main_BB__33_53
state: LEGUP_F_main_BB__33_53
   %39 = sext i32 %38 to i64 (endState: LEGUP_F_main_BB__33_53)
   Transition: default: LEGUP_function_call_54
state: LEGUP_function_call_54
   call void @transparent_crc(i64 %39, i8* getelementptr inbounds ([6 x i8]* @.str9, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_54)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__33_55 default: LEGUP_function_call_54
state: LEGUP_F_main_BB__33_55
   br label %40
   Transition: default: LEGUP_F_main_BB__40_56
state: LEGUP_F_main_BB__40_56
   %41 = phi i32 [ 0, %33 ], [ %55, %54 ] (endState: LEGUP_F_main_BB__40_56)
   %exitcond1 = icmp eq i32 %41, 9 (endState: LEGUP_F_main_BB__40_56)
   br i1 %exitcond1, label %56, label %42
   Transition: if (%exitcond1): LEGUP_F_main_BB__56_70 default: LEGUP_F_main_BB__42_57
state: LEGUP_F_main_BB__42_57
   br label %43
   Transition: default: LEGUP_F_main_BB__43_58
state: LEGUP_F_main_BB__43_58
   %44 = phi i32 [ 0, %42 ], [ %52, %51 ] (endState: LEGUP_F_main_BB__43_58)
   %exitcond = icmp eq i32 %44, 1 (endState: LEGUP_F_main_BB__43_58)
   br i1 %exitcond, label %53, label %45
   Transition: if (%exitcond): LEGUP_F_main_BB__53_68 default: LEGUP_F_main_BB__45_59
state: LEGUP_F_main_BB__45_59
   %46 = add i32 %41, %44 (endState: LEGUP_F_main_BB__45_59)
   Transition: default: LEGUP_F_main_BB__45_60
state: LEGUP_F_main_BB__45_60
   %scevgep = getelementptr [9 x [1 x i16]]* @g_116, i32 0, i32 %46, i32 0 (endState: LEGUP_F_main_BB__45_60)
   %47 = load i16* %scevgep, align 2 (endState: LEGUP_F_main_BB__45_62)
   Transition: default: LEGUP_F_main_BB__45_61
state: LEGUP_F_main_BB__45_61
   Transition: default: LEGUP_F_main_BB__45_62
state: LEGUP_F_main_BB__45_62
   %48 = zext i16 %47 to i64 (endState: LEGUP_F_main_BB__45_62)
   Transition: default: LEGUP_function_call_63
state: LEGUP_function_call_63
   call void @transparent_crc(i64 %48, i8* getelementptr inbounds ([12 x i8]* @.str10, i32 0, i32 0), i32 0) #2 (endState: LEGUP_function_call_63)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__45_64 default: LEGUP_function_call_63
state: LEGUP_F_main_BB__45_64
   br i1 false, label %49, label %50
   Transition: if (false): LEGUP_F_main_BB__49_65 default: LEGUP_F_main_BB__50_66
state: LEGUP_F_main_BB__49_65
   br label %50
   Transition: default: LEGUP_F_main_BB__50_66
state: LEGUP_F_main_BB__50_66
   br label %51
   Transition: default: LEGUP_F_main_BB__51_67
state: LEGUP_F_main_BB__51_67
   %52 = add nsw i32 %44, 1 (endState: LEGUP_F_main_BB__51_67)
   br label %43
   Transition: default: LEGUP_F_main_BB__43_58
state: LEGUP_F_main_BB__53_68
   br label %54
   Transition: default: LEGUP_F_main_BB__54_69
state: LEGUP_F_main_BB__54_69
   %55 = add nsw i32 %41, 1 (endState: LEGUP_F_main_BB__54_69)
   br label %40
   Transition: default: LEGUP_F_main_BB__40_56
state: LEGUP_F_main_BB__56_70
   %57 = load i32* @crc32_context, align 4 (endState: LEGUP_F_main_BB__56_72)
   Transition: default: LEGUP_F_main_BB__56_71
state: LEGUP_F_main_BB__56_71
   Transition: default: LEGUP_F_main_BB__56_72
state: LEGUP_F_main_BB__56_72
   %58 = xor i32 %57, -1 (endState: LEGUP_F_main_BB__56_72)
   Transition: default: LEGUP_function_call_73
state: LEGUP_function_call_73
   %59 = call i32 @platform_main_end(i32 %58, i32 0) #2 (endState: LEGUP_function_call_73)
   Transition: if (platform_main_end_finish_final): LEGUP_F_main_BB__56_74 default: LEGUP_function_call_73
state: LEGUP_F_main_BB__56_74
   ret i32 %59
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 15
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %11 Num States: 5
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
Basic Block: %19 Num States: 1
Basic Block: %21 Num States: 5
Basic Block: %24 Num States: 1
Basic Block: %26 Num States: 5
Basic Block: %29 Num States: 1
Basic Block: %30 Num States: 1
Basic Block: %31 Num States: 1
Basic Block: %33 Num States: 13
Basic Block: %40 Num States: 1
Basic Block: %42 Num States: 1
Basic Block: %43 Num States: 1
Basic Block: %45 Num States: 6
Basic Block: %49 Num States: 1
Basic Block: %50 Num States: 1
Basic Block: %51 Num States: 1
Basic Block: %53 Num States: 1
Basic Block: %54 Num States: 1
Basic Block: %56 Num States: 5
End Function: main
--------------------------------------------------------------------------------

