//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Jun 13 15:04:24 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: safe_lshift_func_uint16_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_sub_func_uint8_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_sub_func_int16_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_sub_func_int8_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_add_func_uint8_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_rshift_func_uint16_t_u_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_mul_func_uint16_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_mul_func_int8_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             
--------------------------------------------------------------------------------
Function: platform_main_begin
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: crc32_gentab
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             
--------------------------------------------------------------------------------
Function: func_1
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: transparent_crc
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             
--------------------------------------------------------------------------------
Function: platform_main_end
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: crc32_8bytes
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: crc32_byte
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             
--------------------------------------------------------------------------------
Function: safe_sub_func_int32_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: func_19
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: func_24
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_mod_func_int8_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
signed_modulus_32             1                             
--------------------------------------------------------------------------------
Function: safe_rshift_func_int16_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: func_39
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: safe_rshift_func_uint16_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_add_func_uint16_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_lshift_func_uint16_t_u_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_mul_func_int16_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_sub_func_uint16_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_lshift_func_int8_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_lshift_func_uint8_t_u_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_add_func_uint32_t_u_u
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_rshift_func_uint8_t_u_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
--------------------------------------------------------------------------------
Function: safe_div_func_int32_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               
signed_divide_32              1                             
--------------------------------------------------------------------------------
Function: safe_add_func_int32_t_s_s
--------------------------------------------------------------------------------
Function unit type:           Number Required               

Running Bipartite Weighted Matching on function: platform_main_begin

Running Bipartite Weighted Matching on function: crc32_gentab
State: LEGUP_F_crc32_gentab_BB__15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  crc32_gentab_mem_dual_port_0  
  store i32 %crc.0, i32* %scev... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  crc32_gentab_mem_dual_port_0  
  store i32 %crc.0, i32* %scev... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %crc.0, i32* %scev... (idx: 0) -> crc32_gentab_mem_dual_port_0 (mux inputs: 2)

Running Bipartite Weighted Matching on function: platform_main_end

Running Bipartite Weighted Matching on function: crc32_byte
State: LEGUP_F_crc32_byte_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  crc32_byte_mem_dual_port_0    
  %1 = load i32* @crc32_contex... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  crc32_byte_mem_dual_port_0    
  %1 = load i32* @crc32_contex... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* @crc32_contex... (idx: 0) -> crc32_byte_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_crc32_byte_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %6 = load i32* %5, align 4 can share an output register with another operation already assigned to crc32_byte_mem_dual_port_0
                                                  crc32_byte_mem_dual_port_0    
  %6 = load i32* %5, align 4 (idx: 0)             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  crc32_byte_mem_dual_port_0    
  %6 = load i32* %5, align 4 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load i32* %5, align 4 (idx: 0) -> crc32_byte_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_crc32_byte_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %7, i32* @crc32_co... can share an output register with another operation already assigned to crc32_byte_mem_dual_port_0
                                                  crc32_byte_mem_dual_port_0    
  store i32 %7, i32* @crc32_co... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  crc32_byte_mem_dual_port_0    
  store i32 %7, i32* @crc32_co... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %7, i32* @crc32_co... (idx: 0) -> crc32_byte_mem_dual_port_0 (mux inputs: 2)

Running Bipartite Weighted Matching on function: safe_rshift_func_uint16_t_u_s

Running Bipartite Weighted Matching on function: safe_mul_func_uint16_t_u_u

Running Bipartite Weighted Matching on function: safe_mul_func_int8_t_s_s

Running Bipartite Weighted Matching on function: safe_sub_func_int32_t_s_s

Running Bipartite Weighted Matching on function: func_24

Running Bipartite Weighted Matching on function: safe_mod_func_int8_t_s_s
State: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8
Binding functional unit type: signed_modulus_32
Weight matrix for operation/function unit matching:
                                                  safe_mod_func_int8_t_s_s_signed_modulus_32_0
  %11 = srem i32 %9, %10 (idx: 0)                 20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  safe_mod_func_int8_t_s_s_signed_modulus_32_0
  %11 = srem i32 %9, %10 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = srem i32 %9, %10 (idx: 0) -> safe_mod_func_int8_t_s_s_signed_modulus_32_0 (mux inputs: 2)

Running Bipartite Weighted Matching on function: safe_rshift_func_int16_t_s_s

Running Bipartite Weighted Matching on function: safe_rshift_func_uint16_t_u_u

Running Bipartite Weighted Matching on function: safe_add_func_uint16_t_u_u

Running Bipartite Weighted Matching on function: safe_lshift_func_uint16_t_u_s

Running Bipartite Weighted Matching on function: safe_mul_func_int16_t_s_s

Running Bipartite Weighted Matching on function: safe_sub_func_uint16_t_u_u

Running Bipartite Weighted Matching on function: safe_lshift_func_int8_t_s_s

Running Bipartite Weighted Matching on function: safe_lshift_func_uint16_t_u_u

Running Bipartite Weighted Matching on function: safe_sub_func_uint8_t_u_u

Running Bipartite Weighted Matching on function: safe_sub_func_int16_t_s_s

Running Bipartite Weighted Matching on function: safe_sub_func_int8_t_s_s

Running Bipartite Weighted Matching on function: safe_add_func_uint8_t_u_u

Running Bipartite Weighted Matching on function: safe_lshift_func_uint8_t_u_s

Running Bipartite Weighted Matching on function: safe_add_func_uint32_t_u_u

Running Bipartite Weighted Matching on function: safe_rshift_func_uint8_t_u_s

Running Bipartite Weighted Matching on function: safe_div_func_int32_t_s_s
State: LEGUP_F_safe_div_func_int32_t_s_s_BB__7
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  safe_div_func_int32_t_s_s_signed_divide_32_0
  %8 = sdiv i32 %si1, %si2 (idx: 0)               0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  safe_div_func_int32_t_s_s_signed_divide_32_0
  %8 = sdiv i32 %si1, %si2 (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = sdiv i32 %si1, %si2 (idx: 0) -> safe_div_func_int32_t_s_s_signed_divide_32_0 (mux inputs: 0)

Running Bipartite Weighted Matching on function: safe_add_func_int32_t_s_s

Running Bipartite Weighted Matching on function: crc32_8bytes

Running Bipartite Weighted Matching on function: func_19
State: LEGUP_F_func_19_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %1 = load i32* @g_2, align 4 (idx: 0)           0                             0                             
  %3 = load i8* @g_12, align 1 (idx: 1)           0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %1 = load i32* @g_2, align 4 (idx: 0)           1                             0                             
  %3 = load i8* @g_12, align 1 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* @g_2, align 4 (idx: 0) -> func_19_mem_dual_port_0 (mux inputs: 0)
  %3 = load i8* @g_12, align 1 (idx: 1) -> func_19_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_func_19_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %7 = load i32* getelementptr... can share an output register with another operation already assigned to func_19_mem_dual_port_0
  %7 = load i32* getelementptr... can share an output register with another operation already assigned to func_19_mem_dual_port_1
  %9 = load i32* getelementptr... can share an output register with another operation already assigned to func_19_mem_dual_port_0
  %9 = load i32* getelementptr... can share an output register with another operation already assigned to func_19_mem_dual_port_1
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %7 = load i32* getelementptr... (idx: 0)        -5                            -5                            
  %9 = load i32* getelementptr... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %7 = load i32* getelementptr... (idx: 0)        1                             0                             
  %9 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %7 = load i32* getelementptr... (idx: 0) -> func_19_mem_dual_port_0 (mux inputs: 0)
  %9 = load i32* getelementptr... (idx: 1) -> func_19_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_func_19_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %10 = load i32* @g_2, align ... can share an output register with another operation already assigned to func_19_mem_dual_port_0
  %10 = load i32* @g_2, align ... can share an output register with another operation already assigned to func_19_mem_dual_port_1
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %10 = load i32* @g_2, align ... (idx: 0)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %10 = load i32* @g_2, align ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load i32* @g_2, align ... (idx: 0) -> func_19_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_func_19_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %8, i32* getelemen... can share an output register with another operation already assigned to func_19_mem_dual_port_0
  store i32 %8, i32* getelemen... can share an output register with another operation already assigned to func_19_mem_dual_port_1
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  store i32 %8, i32* getelemen... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  store i32 %8, i32* getelemen... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %8, i32* getelemen... (idx: 0) -> func_19_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_func_19_BB__13
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %14 = load i32* getelementpt... can share an output register with another operation already assigned to func_19_mem_dual_port_0
  %14 = load i32* getelementpt... can share an output register with another operation already assigned to func_19_mem_dual_port_1
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %14 = load i32* getelementpt... (idx: 0)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_19_mem_dual_port_0       func_19_mem_dual_port_1       
  %14 = load i32* getelementpt... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load i32* getelementpt... (idx: 0) -> func_19_mem_dual_port_1 (mux inputs: 0)

Running Bipartite Weighted Matching on function: func_39
State: LEGUP_F_func_39_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  func_39_mem_dual_port_0       func_39_mem_dual_port_1       
  %1 = load i8* @g_12, align 1 (idx: 0)           0                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_39_mem_dual_port_0       func_39_mem_dual_port_1       
  %1 = load i8* @g_12, align 1 (idx: 0)           1                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i8* @g_12, align 1 (idx: 0) -> func_39_mem_dual_port_0 (mux inputs: 0)
  %3 = load i32* getelementptr... (idx: 1) -> func_39_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_func_39_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %4, i32* @g_44, al... can share an output register with another operation already assigned to func_39_mem_dual_port_0
  store i32 %4, i32* @g_44, al... can share an output register with another operation already assigned to func_39_mem_dual_port_1
                                                  func_39_mem_dual_port_0       func_39_mem_dual_port_1       
  store i32 %4, i32* @g_44, al... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_39_mem_dual_port_0       func_39_mem_dual_port_1       
  store i32 %4, i32* @g_44, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %4, i32* @g_44, al... (idx: 0) -> func_39_mem_dual_port_0 (mux inputs: 1)

Running Bipartite Weighted Matching on function: func_1
State: LEGUP_F_func_1_BB__3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 4, i32* %scevgep5,... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 4, i32* %scevgep5,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 4, i32* %scevgep5,... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_func_1_BB__7
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %storemerge, i32* ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %storemerge, i32* ... (idx: 0)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %storemerge, i32* ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %storemerge, i32* ... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_func_1_BB__16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 5790591, i32* %sce... can share an output register with another operation already assigned to func_1_mem_dual_port_0
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 5790591, i32* %sce... (idx: 0)        7                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 5790591, i32* %sce... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 5790591, i32* %sce... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_func_1_BB__24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %25 = load i32* %scevgep3, a... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %31 = load i32* @g_2, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %25 = load i32* %scevgep3, a... (idx: 0)        8                             10                            
  %31 = load i32* @g_2, align ... (idx: 1)        -2                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %25 = load i32* %scevgep3, a... (idx: 0)        1                             0                             
  %31 = load i32* @g_2, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %25 = load i32* %scevgep3, a... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 4)
  %31 = load i32* @g_2, align ... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_func_1_BB__24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %30 = load i32* %29, align 4 can share an output register with another operation already assigned to func_1_mem_dual_port_0
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %30 = load i32* %29, align 4 (idx: 0)           9                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %30 = load i32* %29, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load i32* %29, align 4 (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_func_1_BB__24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %26, i8* @g_12, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_0
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i8 %26, i8* @g_12, ali... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i8 %26, i8* @g_12, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %26, i8* @g_12, ali... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_func_1_BB__34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %35 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %35 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %37 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %37 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %35 = load i32* getelementpt... (idx: 0)        1                             -5                            
  %37 = load i32* getelementpt... (idx: 1)        1                             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %35 = load i32* getelementpt... (idx: 0)        1                             0                             
  %37 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* getelementpt... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 6)
  %37 = load i32* getelementpt... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_func_1_BB__34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %39 = load i8* @g_12, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %39 = load i8* @g_12, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %39 = load i8* @g_12, align ... (idx: 0)        1                             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %39 = load i8* @g_12, align ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = load i8* @g_12, align ... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_func_1_BB__34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %42 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %42 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %42 = load i32* getelementpt... (idx: 0)        1                             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %42 = load i32* getelementpt... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %42 = load i32* getelementpt... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_func_1_BB__34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %46, i8* @g_12, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i8 %46, i8* @g_12, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i8 %46, i8* @g_12, ali... (idx: 0)        11                            5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i8 %46, i8* @g_12, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %46, i8* @g_12, ali... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_func_1_BB__34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %49 = load i32* %scevgep3, a... can share an input with another operation already assigned to func_1_mem_dual_port_0
  %49 = load i32* %scevgep3, a... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %49 = load i32* %scevgep3, a... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %51 = load i32* @g_2, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %51 = load i32* @g_2, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %49 = load i32* %scevgep3, a... (idx: 0)        1                             6                             
  %51 = load i32* @g_2, align ... (idx: 1)        1                             -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %49 = load i32* %scevgep3, a... (idx: 0)        1                             0                             
  %51 = load i32* @g_2, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %49 = load i32* %scevgep3, a... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 6)
  %51 = load i32* @g_2, align ... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_func_1_BB__54
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %57 = load i32* %56, align 4 can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %57 = load i32* %56, align 4 can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %57 = load i32* %56, align 4 (idx: 0)           11                            6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %57 = load i32* %56, align 4 (idx: 0)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %57 = load i32* %56, align 4 (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_func_1_BB__54
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %58, i32* %56, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 %58, i32* %56, ali... can share an input with another operation already assigned to func_1_mem_dual_port_1
  store i32 %58, i32* %56, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %58, i32* %56, ali... (idx: 0)        21                            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %58, i32* %56, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %58, i32* %56, ali... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_func_1_BB__54
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %66 = load i32* @g_2, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %66 = load i32* @g_2, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %66 = load i32* @g_2, align ... (idx: 0)        1                             -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %66 = load i32* @g_2, align ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = load i32* @g_2, align ... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_func_1_BB__73
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %storemerge1, i8* @... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i8 %storemerge1, i8* @... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i8 %storemerge1, i8* @... (idx: 0)        11                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i8 %storemerge1, i8* @... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %storemerge1, i8* @... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_func_1_BB__75
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %76 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %76 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %76 = load i32* getelementpt... (idx: 0)        1                             -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %76 = load i32* getelementpt... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %76 = load i32* getelementpt... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_func_1_BB__79
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %80 = load i32* @g_44, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %80 = load i32* @g_44, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %80 = load i32* @g_44, align... (idx: 0)        1                             -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %80 = load i32* @g_44, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = load i32* @g_44, align... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_func_1_BB__83
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %84 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %84 = load i32* getelementpt... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %84 = load i32* getelementpt... (idx: 0)        1                             -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %84 = load i32* getelementpt... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = load i32* getelementpt... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_func_1_BB__88
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %89 = load i8* @g_12, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %89 = load i8* @g_12, align ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %89 = load i8* @g_12, align ... (idx: 0)        1                             -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %89 = load i8* @g_12, align ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %89 = load i8* @g_12, align ... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_func_1_BB__93
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %94 = load i32* @g_44, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %94 = load i32* @g_44, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %97 = load i32* %96, align 4 can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %97 = load i32* %96, align 4 can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %94 = load i32* @g_44, align... (idx: 0)        1                             -1                            
  %97 = load i32* %96, align 4 (idx: 1)           11                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %94 = load i32* @g_44, align... (idx: 0)        1                             0                             
  %97 = load i32* %96, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = load i32* @g_44, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 6)
  %97 = load i32* %96, align 4 (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_func_1_BB__102
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %104 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %104 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %109 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %109 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %104 = load i32* getelementp... (idx: 0)        1                             0                             
  %109 = load i32* @g_44, alig... (idx: 1)        1                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %104 = load i32* getelementp... (idx: 0)        1                             0                             
  %109 = load i32* @g_44, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %104 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 6)
  %109 = load i32* @g_44, alig... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_func_1_BB__102
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %111 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %111 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %111 = load i32* getelementp... (idx: 0)        1                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %111 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %111 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_func_1_BB__115
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %119 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %119 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %119 = load i32* @g_44, alig... (idx: 0)        1                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %119 = load i32* @g_44, alig... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %119 = load i32* @g_44, alig... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_func_1_BB__123
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %124 = load i32* @g_2, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %124 = load i32* @g_2, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %124 = load i32* @g_2, align... (idx: 0)        1                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %124 = load i32* @g_2, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %124 = load i32* @g_2, align... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_func_1_BB__126
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %134, i32* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 %134, i32* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %134, i32* getelem... (idx: 0)        11                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %134, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %134, i32* getelem... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_func_1_BB__135
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %137 = load i32* %136, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %137 = load i32* %136, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %137 = load i32* %136, align... (idx: 0)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %137 = load i32* %136, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %137 = load i32* %136, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_func_1_BB__135
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %144 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %146 = load i32* %145, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %146 = load i32* %145, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %144 = load i32* getelementp... (idx: 0)        2                             1                             
  %146 = load i32* %145, align... (idx: 1)        12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %144 = load i32* getelementp... (idx: 0)        1                             0                             
  %146 = load i32* %145, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 7)
  %146 = load i32* %145, align... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_func_1_BB__135
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %147 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %147 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %149 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %149 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %147 = load i32* @g_44, alig... (idx: 0)        2                             2                             
  %149 = load i32* getelementp... (idx: 1)        2                             2                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %147 = load i32* @g_44, alig... (idx: 0)        1                             0                             
  %149 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %147 = load i32* @g_44, alig... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 7)
  %149 = load i32* getelementp... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_func_1_BB__135
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %162 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %162 = load i32* @g_44, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %162 = load i32* @g_44, alig... (idx: 0)        2                             2                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %162 = load i32* @g_44, alig... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %162 = load i32* @g_44, alig... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_func_1_BB__135
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %165 = load i8* @g_12, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %165 = load i8* @g_12, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %165 = load i8* @g_12, align... (idx: 0)        2                             2                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %165 = load i8* @g_12, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %165 = load i8* @g_12, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_func_1_BB__169
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %174 = load i32* %173, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %174 = load i32* %173, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %174 = load i32* %173, align... (idx: 0)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %174 = load i32* %173, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %174 = load i32* %173, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_func_1_BB__179
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %180, i32* @g_77, ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 %180, i32* @g_77, ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %180, i32* @g_77, ... (idx: 0)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %180, i32* @g_77, ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %180, i32* @g_77, ... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_func_1_BB__182
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %184 = load i32* @g_2, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %184 = load i32* @g_2, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %185 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %185 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %184 = load i32* @g_2, align... (idx: 0)        3                             3                             
  %185 = load i32* getelementp... (idx: 1)        3                             3                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %184 = load i32* @g_2, align... (idx: 0)        1                             0                             
  %185 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %184 = load i32* @g_2, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 8)
  %185 = load i32* getelementp... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_func_1_BB__182
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %189, i32* @g_77, ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 %189, i32* @g_77, ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %189, i32* @g_77, ... (idx: 0)        13                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %189, i32* @g_77, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %189, i32* @g_77, ... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_func_1_BB__191
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %192 = load i32* @g_77, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %192 = load i32* @g_77, alig... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %192 = load i32* @g_77, alig... (idx: 0)        4                             3                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %192 = load i32* @g_77, alig... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %192 = load i32* @g_77, alig... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_func_1_BB__194
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %195 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %195 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %195 = load i32* getelementp... (idx: 0)        4                             3                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %195 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %195 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_func_1_BB__197
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i16 %202, i16* @g_113,... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i16 %202, i16* @g_113,... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i16 %202, i16* @g_113,... (idx: 0)        14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i16 %202, i16* @g_113,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %202, i16* @g_113,... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_func_1_BB__204
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %206, i32* @g_77, ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 %206, i32* @g_77, ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %206, i32* @g_77, ... (idx: 0)        14                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %206, i32* @g_77, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %206, i32* @g_77, ... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_func_1_BB__207
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %208 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %208 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %208 = load i32* getelementp... (idx: 0)        5                             4                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %208 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %208 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_func_1_BB__210
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %214 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %214 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %217 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %217 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %214 = load i32* getelementp... (idx: 0)        5                             4                             
  %217 = load i32* getelementp... (idx: 1)        5                             4                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %214 = load i32* getelementp... (idx: 0)        1                             0                             
  %217 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %214 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 10)
  %217 = load i32* getelementp... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_func_1_BB__210
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %223 = load i32* @g_114, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %223 = load i32* @g_114, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %223 = load i32* @g_114, ali... (idx: 0)        5                             4                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %223 = load i32* @g_114, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %223 = load i32* @g_114, ali... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_func_1_BB__210
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %226 = load i32* %scevgep3, ... can share an input with another operation already assigned to func_1_mem_dual_port_0
  %226 = load i32* %scevgep3, ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %226 = load i32* %scevgep3, ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %226 = load i32* %scevgep3, ... (idx: 0)        5                             14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %226 = load i32* %scevgep3, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %226 = load i32* %scevgep3, ... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_func_1_BB__210
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %230 = load i32* %229, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %230 = load i32* %229, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %230 = load i32* %229, align... (idx: 0)        15                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %230 = load i32* %229, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %230 = load i32* %229, align... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_func_1_BB__234
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %236 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %236 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %236 = load i32* getelementp... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %236 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %236 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_func_1_BB__243
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %244 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %244 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %244 = load i32* getelementp... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %244 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %244 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_func_1_BB__246
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %250 = load i32* %249, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %250 = load i32* %249, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %250 = load i32* %249, align... (idx: 0)        15                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %250 = load i32* %249, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %250 = load i32* %249, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_func_1_BB__246
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %254 = load i32* %253, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %254 = load i32* %253, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %254 = load i32* %253, align... (idx: 0)        16                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %254 = load i32* %253, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %254 = load i32* %253, align... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_func_1_BB__260
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %261 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %261 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %261 = load i32* getelementp... (idx: 0)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %261 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %261 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_func_1_BB__260
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i16 %262, i16* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i16 %262, i16* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i16 %262, i16* getelem... (idx: 0)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i16 %262, i16* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %262, i16* getelem... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_func_1_BB__260
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %264 = load i32* %scevgep3, ... can share an input with another operation already assigned to func_1_mem_dual_port_0
  %264 = load i32* %scevgep3, ... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %264 = load i32* %scevgep3, ... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %267 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %267 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %264 = load i32* %scevgep3, ... (idx: 0)        7                             16                            
  %267 = load i32* getelementp... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %264 = load i32* %scevgep3, ... (idx: 0)        1                             0                             
  %267 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %264 = load i32* %scevgep3, ... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 12)
  %267 = load i32* getelementp... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_func_1_BB__260
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %270 = load i16* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %270 = load i16* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %270 = load i16* getelementp... (idx: 0)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %270 = load i16* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %270 = load i16* getelementp... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_func_1_BB__273
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %274 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %274 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %274 = load i32* getelementp... (idx: 0)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %274 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %274 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_func_1_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @g_77, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 0, i32* @g_77, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %287 = load i8* @g_12, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %287 = load i8* @g_12, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 0, i32* @g_77, ali... (idx: 0)        7                             6                             
  %287 = load i8* @g_12, align... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 0, i32* @g_77, ali... (idx: 0)        1                             0                             
  %287 = load i8* @g_12, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @g_77, ali... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 12)
  %287 = load i8* @g_12, align... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_func_1_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %292 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %292 = load i32* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  %297 = load i16* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %297 = load i16* getelementp... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %292 = load i32* getelementp... (idx: 0)        7                             6                             
  %297 = load i16* getelementp... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %292 = load i32* getelementp... (idx: 0)        1                             0                             
  %297 = load i16* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %292 = load i32* getelementp... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 12)
  %297 = load i16* getelementp... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_func_1_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %299 = load i32* @g_114, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %299 = load i32* @g_114, ali... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %299 = load i32* @g_114, ali... (idx: 0)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %299 = load i32* @g_114, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %299 = load i32* @g_114, ali... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_func_1_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %293, i32* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 %293, i32* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_1
  store i16 %298, i16* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i16 %298, i16* getelem... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %293, i32* getelem... (idx: 0)        17                            16                            
  store i16 %298, i16* getelem... (idx: 1)        17                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %293, i32* getelem... (idx: 0)        1                             0                             
  store i16 %298, i16* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %293, i32* getelem... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 13)
  store i16 %298, i16* getelem... (idx: 1) -> func_1_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_func_1_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %300, i32* @g_114,... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  store i32 %300, i32* @g_114,... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %300, i32* @g_114,... (idx: 0)        18                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  store i32 %300, i32* @g_114,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %300, i32* @g_114,... (idx: 0) -> func_1_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_func_1_BB__302
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %303 = load i32* @g_2, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %303 = load i32* @g_2, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %303 = load i32* @g_2, align... (idx: 0)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %303 = load i32* @g_2, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %303 = load i32* @g_2, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 13)
State: LEGUP_F_func_1_BB__305
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %307 = load i32* %306, align... can share an output register with another operation already assigned to func_1_mem_dual_port_0
  %307 = load i32* %306, align... can share an output register with another operation already assigned to func_1_mem_dual_port_1
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %307 = load i32* %306, align... (idx: 0)        18                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  func_1_mem_dual_port_0        func_1_mem_dual_port_1        
  %307 = load i32* %306, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %307 = load i32* %306, align... (idx: 0) -> func_1_mem_dual_port_0 (mux inputs: 14)

Running Bipartite Weighted Matching on function: transparent_crc
State: LEGUP_F_transparent_crc_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  transparent_crc_mem_dual_port_0
  %3 = load i32* @crc32_contex... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  transparent_crc_mem_dual_port_0
  %3 = load i32* @crc32_contex... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load i32* @crc32_contex... (idx: 0) -> transparent_crc_mem_dual_port_0 (mux inputs: 0)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %2 = load i32* @g_2, align 4 (idx: 0)           0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %2 = load i32* @g_2, align 4 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load i32* @g_2, align 4 (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %4 = load i8* @g_12, align 1 can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %4 = load i8* @g_12, align 1 (idx: 0)           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %4 = load i8* @g_12, align 1 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i8* @g_12, align 1 (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_main_BB__11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %12 = load i32* %scevgep6, a... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %12 = load i32* %scevgep6, a... (idx: 0)        5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %12 = load i32* %scevgep6, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load i32* %scevgep6, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load i32* @g_44, align... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %22 = load i32* @g_44, align... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %22 = load i32* @g_44, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i32* @g_44, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__26
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load i32* %scevgep4, a... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %27 = load i32* %scevgep4, a... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %27 = load i32* %scevgep4, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load i32* %scevgep4, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %34 = load i32* @g_77, align... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %34 = load i32* @g_77, align... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %34 = load i32* @g_77, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = load i32* @g_77, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %36 = load i16* @g_113, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %36 = load i16* @g_113, alig... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %36 = load i16* @g_113, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load i16* @g_113, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %38 = load i32* @g_114, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %38 = load i32* @g_114, alig... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %38 = load i32* @g_114, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = load i32* @g_114, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__45
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %47 = load i16* %scevgep, al... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %47 = load i16* %scevgep, al... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %47 = load i16* %scevgep, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %47 = load i16* %scevgep, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__56
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %57 = load i32* @crc32_conte... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %57 = load i32* @crc32_conte... (idx: 0)        -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %57 = load i32* @crc32_conte... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %57 = load i32* @crc32_conte... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)

