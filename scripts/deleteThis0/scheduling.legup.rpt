//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Jun 13 14:59:16 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_begin
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_begin_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_begin_BB__0_1
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_begin
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_gentab
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_crc32_gentab_BB__1_1 default: LEGUP_0
state: LEGUP_F_crc32_gentab_BB__1_1
   %2 = phi i32 [ 0, %0 ], [ %17, %16 ] (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %scevgep = getelementptr [256 x i32]* @crc32_tab, i32 0, i32 %2 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %exitcond1 = icmp eq i32 %2, 256 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   br i1 %exitcond1, label %18, label %3
   Transition: if (%exitcond1): LEGUP_F_crc32_gentab_BB__18_12 default: LEGUP_F_crc32_gentab_BB__3_2
state: LEGUP_F_crc32_gentab_BB__3_2
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__4_3
   %indvar = phi i32 [ %indvar.next, %14 ], [ 0, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %crc.0 = phi i32 [ %crc.1, %14 ], [ %2, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %exitcond = icmp eq i32 %indvar, 8 (endState: LEGUP_F_crc32_gentab_BB__4_3)
   br i1 %exitcond, label %15, label %5
   Transition: if (%exitcond): LEGUP_F_crc32_gentab_BB__15_9 default: LEGUP_F_crc32_gentab_BB__5_4
state: LEGUP_F_crc32_gentab_BB__5_4
   %6 = and i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   %7 = icmp eq i32 %6, 0 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   br i1 %7, label %11, label %8
   Transition: if (%7): LEGUP_F_crc32_gentab_BB__11_6 default: LEGUP_F_crc32_gentab_BB__8_5
state: LEGUP_F_crc32_gentab_BB__8_5
   %9 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   %10 = xor i32 %9, -306674912 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__11_6
   %12 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__11_6)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__13_7
   %crc.1 = phi i32 [ %10, %8 ], [ %12, %11 ] (endState: LEGUP_F_crc32_gentab_BB__13_7)
   br label %14
   Transition: default: LEGUP_F_crc32_gentab_BB__14_8
state: LEGUP_F_crc32_gentab_BB__14_8
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_crc32_gentab_BB__14_8)
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__15_9
   store i32 %crc.0, i32* %scevgep, align 4 (endState: LEGUP_F_crc32_gentab_BB__15_10)
   Transition: default: LEGUP_F_crc32_gentab_BB__15_10
state: LEGUP_F_crc32_gentab_BB__15_10
   br label %16
   Transition: default: LEGUP_F_crc32_gentab_BB__16_11
state: LEGUP_F_crc32_gentab_BB__16_11
   %17 = add nsw i32 %2, 1 (endState: LEGUP_F_crc32_gentab_BB__16_11)
   br label %1
   Transition: default: LEGUP_F_crc32_gentab_BB__1_1
state: LEGUP_F_crc32_gentab_BB__18_12
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 2
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
End Function: crc32_gentab
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_end
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_end_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_end_BB__0_1
   %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str4, i32 0, i32 0), i32 %crc) #3 (endState: LEGUP_F_platform_main_end_BB__0_1)
   ret i32 %crc
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_end
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_byte
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_byte_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_byte_BB__0_1
   %1 = load i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %3 = zext i8 %b to i32 (endState: LEGUP_F_crc32_byte_BB__0_1)
   Transition: default: LEGUP_F_crc32_byte_BB__0_2
state: LEGUP_F_crc32_byte_BB__0_2
   Transition: default: LEGUP_F_crc32_byte_BB__0_3
state: LEGUP_F_crc32_byte_BB__0_3
   %2 = lshr i32 %1, 8 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %.masked = and i32 %1, 255 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %4 = xor i32 %.masked, %3 (endState: LEGUP_F_crc32_byte_BB__0_3)
   Transition: default: LEGUP_F_crc32_byte_BB__0_4
state: LEGUP_F_crc32_byte_BB__0_4
   %5 = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i32 %4 (endState: LEGUP_F_crc32_byte_BB__0_4)
   %6 = load i32* %5, align 4 (endState: LEGUP_F_crc32_byte_BB__0_6)
   Transition: default: LEGUP_F_crc32_byte_BB__0_5
state: LEGUP_F_crc32_byte_BB__0_5
   Transition: default: LEGUP_F_crc32_byte_BB__0_6
state: LEGUP_F_crc32_byte_BB__0_6
   %7 = xor i32 %2, %6 (endState: LEGUP_F_crc32_byte_BB__0_6)
   store i32 %7, i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_7)
   Transition: default: LEGUP_F_crc32_byte_BB__0_7
state: LEGUP_F_crc32_byte_BB__0_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 7
End Function: crc32_byte
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_4
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_4_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_4_BB__0_1
   store volatile i32 -1, i32* @g_74, align 4 (endState: LEGUP_F_func_4_BB__0_2)
   %1 = load i32* getelementptr inbounds ([2 x i32]* @g_70, i32 0, i32 0), align 4 (endState: LEGUP_F_func_4_BB__0_3)
   Transition: default: LEGUP_F_func_4_BB__0_2
state: LEGUP_F_func_4_BB__0_2
   Transition: default: LEGUP_F_func_4_BB__0_3
state: LEGUP_F_func_4_BB__0_3
   %2 = trunc i32 %1 to i8 (endState: LEGUP_F_func_4_BB__0_3)
   ret i8 %2
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
End Function: func_4
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_10
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_10_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_10_BB__0_1
   %1 = load i32* getelementptr inbounds ([2 x i32]* @g_70, i32 0, i32 0), align 4 (endState: LEGUP_F_func_10_BB__0_3)
   Transition: default: LEGUP_F_func_10_BB__0_2
state: LEGUP_F_func_10_BB__0_2
   Transition: default: LEGUP_F_func_10_BB__0_3
state: LEGUP_F_func_10_BB__0_3
   %2 = trunc i32 %1 to i16 (endState: LEGUP_F_func_10_BB__0_3)
   ret i16 %2
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
End Function: func_10
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_unary_minus_func_int16_t_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_unary_minus_func_int16_t_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_unary_minus_func_int16_t_s_BB__0_1
   %1 = sub i16 0, %si (endState: LEGUP_F_safe_unary_minus_func_int16_t_s_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_unary_minus_func_int16_t_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint16_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3
   %5 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %6 = lshr i32 65535, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4
   %9 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5
   %11 = zext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i16 (endState: LEGUP_F_safe_lshift_func_uint16_t_u_s_BB__13_6)
   ret i16 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint16_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1
   %1 = add i8 %si1, %si2 (endState: LEGUP_F_safe_add_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mul_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_1
   %1 = mul i8 %si1, %si2 (endState: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2)
   Transition: default: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
state: LEGUP_F_safe_mul_func_int8_t_s_s_BB__0_2
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 2
End Function: safe_mul_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__0_1
   %1 = icmp eq i8 %ui2, 0 (endState: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_mod_func_uint8_t_u_u_BB__2_2 default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_3
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__2_2
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_3
   %4 = urem i8 %ui1, %ui2 (endState: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_11)
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_4
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_5
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_6
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_7
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_8
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_9
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_10
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_11
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__3_11
   br label %5
   Transition: default: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12
state: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12
   %.in = phi i8 [ %ui1, %2 ], [ %4, %3 ] (endState: LEGUP_F_safe_mod_func_uint8_t_u_u_BB__5_12)
   ret i8 %.in
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 9
Basic Block: %5 Num States: 1
End Function: safe_mod_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1
   %1 = add i8 %ui1, %ui2 (endState: LEGUP_F_safe_add_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint8_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %6 = lshr i32 255, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4 default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4
   %9 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5
   %11 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
state: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   %15 = trunc i32 %14 to i8 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_s_BB__13_6)
   ret i8 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_uint8_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_rshift_func_uint8_t_u_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1
   %1 = icmp slt i32 %right, 0 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__0_1)
   br i1 %1, label %4, label %2
   Transition: if (%1): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2
   %3 = icmp sgt i32 %right, 31 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__2_2)
   br i1 %3, label %4, label %6
   Transition: if (%3): LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3 default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3
   %5 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__4_3)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4
   %7 = zext i8 %left to i32 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4)
   %8 = lshr i32 %7, %right (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__6_4)
   br label %9
   Transition: default: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
state: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5
   %10 = phi i32 [ %5, %4 ], [ %8, %6 ] (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5)
   %11 = trunc i32 %10 to i8 (endState: LEGUP_F_safe_rshift_func_uint8_t_u_s_BB__9_5)
   ret i8 %11
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %9 Num States: 1
End Function: safe_rshift_func_uint8_t_u_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__0_1
   %1 = icmp eq i8 %si2, 0 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__2_2
   %3 = icmp eq i8 %si1, -128 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_mod_func_int8_t_s_s_BB__4_3 default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__4_3
   %5 = icmp eq i8 %si2, -1 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5
   %9 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5)
   %10 = sext i8 %si2 to i32 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_5)
   %11 = srem i32 %9, %10 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_6
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_7
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_8
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_9
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_10
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_11
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_12
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_13
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_14
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_15
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_16
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_17
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_18
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_19
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_20
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_21
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_22
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_23
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_24
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_25
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_26
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_27
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_28
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_29
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_30
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_31
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_32
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_33
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_34
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_35
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_36
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_37
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i8 (endState: LEGUP_F_safe_mod_func_int8_t_s_s_BB__12_38)
   ret i8 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_mod_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1
   %1 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2
   %3 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   %4 = lshr i32 255, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   %5 = icmp sgt i32 %3, %4 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__2_2)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3 default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3
   %7 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__6_3)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4
   %9 = zext i8 %left to i32 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4)
   %10 = shl i32 %9, %right (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__8_4)
   br label %11
   Transition: default: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
state: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5
   %12 = phi i32 [ %7, %6 ], [ %10, %8 ] (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5)
   %13 = trunc i32 %12 to i8 (endState: LEGUP_F_safe_lshift_func_uint8_t_u_u_BB__11_5)
   ret i8 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
End Function: safe_lshift_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1
   %1 = icmp eq i32 %si2, 0 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2
   %3 = icmp eq i32 %si1, -2147483648 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__2_2)
   br i1 %3, label %4, label %7
   Transition: if (%3): LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3
   %5 = icmp eq i32 %si2, -1 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__4_3)
   br i1 %5, label %6, label %7
   Transition: if (%5): LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__6_4
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_5
   %8 = sdiv i32 %si1, %si2 (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37)
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_6
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_7
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_8
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_10
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_11
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_12
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_13
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_14
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_15
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_16
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_17
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_18
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_19
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_20
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_21
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_22
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_23
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_24
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_25
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_26
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_27
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_28
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_29
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_30
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_31
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_32
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_33
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_34
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_35
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_36
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__7_37
   br label %9
   Transition: default: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
state: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38
   %10 = phi i32 [ %si1, %6 ], [ %8, %7 ] (endState: LEGUP_F_safe_div_func_int32_t_s_s_BB__9_38)
   ret i32 %10
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %7 Num States: 33
Basic Block: %9 Num States: 1
End Function: safe_div_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_add_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_add_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_add_func_int16_t_s_s_BB__0_1
   %1 = add i16 %si1, %si2 (endState: LEGUP_F_safe_add_func_int16_t_s_s_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_add_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int32_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1
   %1 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %2 = xor i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %3 = and i32 %2, -2147483648 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %4 = xor i32 %3, %si1 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %5 = sub nsw i32 %4, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %6 = xor i32 %5, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %7 = and i32 %1, %6 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   %8 = icmp slt i32 %7, 0 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__0_1)
   br i1 %8, label %9, label %10
   Transition: if (%8): LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2 default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__9_2
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3
   %11 = sub nsw i32 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__10_3)
   br label %12
   Transition: default: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
state: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4
   %13 = phi i32 [ %si1, %9 ], [ %11, %10 ] (endState: LEGUP_F_safe_sub_func_int32_t_s_s_BB__12_4)
   ret i32 %13
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
End Function: safe_sub_func_int32_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_uint8_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1
   %1 = sub i8 %ui1, %ui2 (endState: LEGUP_F_safe_sub_func_uint8_t_u_u_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_uint8_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_lshift_func_int16_t_s_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_lshift_func_int16_t_s_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__0_1
   %1 = icmp slt i16 %left, 0 (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__0_1)
   br i1 %1, label %8, label %2
   Transition: if (%1): LEGUP_F_safe_lshift_func_int16_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__2_2
state: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__2_2
   %3 = icmp ugt i32 %right, 31 (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__2_2)
   br i1 %3, label %8, label %4
   Transition: if (%3): LEGUP_F_safe_lshift_func_int16_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__4_3
state: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__4_3
   %5 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__4_3)
   %6 = lshr i32 32767, %right (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__4_3)
   %7 = icmp sgt i32 %5, %6 (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__4_3)
   br i1 %7, label %8, label %10
   Transition: if (%7): LEGUP_F_safe_lshift_func_int16_t_s_u_BB__8_4 default: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__10_5
state: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__8_4
   %9 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__8_4)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__13_6
state: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__10_5
   %11 = sext i16 %left to i32 (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__10_5)
   %12 = shl i32 %11, %right (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__10_5)
   br label %13
   Transition: default: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__13_6
state: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__13_6
   %14 = phi i32 [ %9, %8 ], [ %12, %10 ] (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__13_6)
   %15 = trunc i32 %14 to i16 (endState: LEGUP_F_safe_lshift_func_int16_t_s_u_BB__13_6)
   ret i16 %15
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
End Function: safe_lshift_func_int16_t_s_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_mod_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_mod_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__0_1
   %1 = icmp eq i16 %si2, 0 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__2_2
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__2_2
   %3 = icmp eq i16 %si1, -32768 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_mod_func_int16_t_s_s_BB__4_3 default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__4_3
   %5 = icmp eq i16 %si2, -1 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4 default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4
   %7 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5
   %9 = sext i16 %si1 to i32 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5)
   %10 = sext i16 %si2 to i32 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_5)
   %11 = srem i32 %9, %10 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_6
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_7
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_8
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_9
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_10
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_11
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_12
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_13
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_14
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_15
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_16
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_17
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_18
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_19
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_20
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_21
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_22
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_23
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_24
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_25
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_26
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_27
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_28
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_29
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_30
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_31
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_32
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_33
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_34
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_35
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_36
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_37
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38
state: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i16 (endState: LEGUP_F_safe_mod_func_int16_t_s_s_BB__12_38)
   ret i16 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_mod_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1
   %1 = icmp eq i8 %si2, 0 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__0_1)
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2
   %3 = icmp eq i8 %si1, -128 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__2_2)
   br i1 %3, label %4, label %8
   Transition: if (%3): LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3
   %5 = icmp eq i8 %si2, -1 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__4_3)
   br i1 %5, label %6, label %8
   Transition: if (%5): LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4 default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4
   %7 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__6_4)
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5
   %9 = sext i8 %si1 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5)
   %10 = sext i8 %si2 to i32 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_5)
   %11 = sdiv i32 %9, %10 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37)
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_6
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_6
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_7
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_7
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_8
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_8
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_9
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_9
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_10
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_10
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_11
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_11
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_12
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_13
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_13
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_14
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_14
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_15
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_15
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_16
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_16
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_17
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_17
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_18
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_18
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_19
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_19
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_20
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_20
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_21
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_21
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_22
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_22
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_23
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_23
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_24
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_24
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_25
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_25
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_26
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_26
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_27
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_27
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_28
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_28
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_29
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_29
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_30
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_30
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_31
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_31
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_32
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_32
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_33
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_33
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_34
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_34
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_35
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_35
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_36
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_36
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__8_37
   br label %12
   Transition: default: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
state: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38
   %13 = phi i32 [ %7, %6 ], [ %11, %8 ] (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38)
   %14 = trunc i32 %13 to i8 (endState: LEGUP_F_safe_div_func_int8_t_s_s_BB__12_38)
   ret i8 %14
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 33
Basic Block: %12 Num States: 1
End Function: safe_div_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int16_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1
   %1 = sub i16 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int16_t_s_s_BB__0_1)
   ret i16 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_int16_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_sub_func_int8_t_s_s
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1
   %1 = sub i8 %si1, %si2 (endState: LEGUP_F_safe_sub_func_int8_t_s_s_BB__0_1)
   ret i8 %1
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: safe_sub_func_int8_t_s_s
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: safe_div_func_uint16_t_u_u
state: LEGUP_0
   Transition: if (start): LEGUP_F_safe_div_func_uint16_t_u_u_BB__0_1 default: LEGUP_0
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__0_1
   %1 = icmp eq i16 %ui2, 0 (endState: LEGUP_F_safe_div_func_uint16_t_u_u_BB__0_1)
   br i1 %1, label %2, label %3
   Transition: if (%1): LEGUP_F_safe_div_func_uint16_t_u_u_BB__2_2 default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_3
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__2_2
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_3
   %div = udiv i16 %ui1, %ui2 (endState: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_19)
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_4
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_4
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_5
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_5
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_6
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_6
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_7
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_7
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_8
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_8
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_9
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_9
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_10
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_10
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_11
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_11
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_12
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_12
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_13
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_13
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_14
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_14
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_15
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_15
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_16
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_16
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_17
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_17
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_18
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_18
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_19
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__3_19
   br label %4
   Transition: default: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20
state: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20
   %.in = phi i16 [ %ui1, %2 ], [ %div, %3 ] (endState: LEGUP_F_safe_div_func_uint16_t_u_u_BB__4_20)
   ret i16 %.in
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 17
Basic Block: %4 Num States: 1
End Function: safe_div_func_uint16_t_u_u
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_2
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_2_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_2_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %dt = alloca i16*, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %st = alloca i16*, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_2)
   %2 = bitcast i8* %d to i16* (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   store i16* %2, i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_2)
   %3 = bitcast i8* %s to i16* (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   %4 = lshr i32 %n, 1 (endState: LEGUP_F_legup_memcpy_2_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__0_2
state: LEGUP_F_legup_memcpy_2_BB__0_2
   store i16* %3, i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__0_3
state: LEGUP_F_legup_memcpy_2_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_4
state: LEGUP_F_legup_memcpy_2_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_5
state: LEGUP_F_legup_memcpy_2_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_6
state: LEGUP_F_legup_memcpy_2_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_2_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_7
state: LEGUP_F_legup_memcpy_2_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_2_BB__15_14 default: LEGUP_F_legup_memcpy_2_BB__9_8
state: LEGUP_F_legup_memcpy_2_BB__9_8
   %10 = load i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   %13 = load i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_9
state: LEGUP_F_legup_memcpy_2_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_10
state: LEGUP_F_legup_memcpy_2_BB__9_10
   %11 = getelementptr inbounds i16* %10, i32 1 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   store i16* %11, i16** %st, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_11)
   %12 = load i16* %10, align 2 (endState: LEGUP_F_legup_memcpy_2_BB__9_12)
   %14 = getelementptr inbounds i16* %13, i32 1 (endState: LEGUP_F_legup_memcpy_2_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_11
state: LEGUP_F_legup_memcpy_2_BB__9_11
   store i16* %14, i16** %dt, align 4 (endState: LEGUP_F_legup_memcpy_2_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_12
state: LEGUP_F_legup_memcpy_2_BB__9_12
   store i16 %12, i16* %13, align 2 (endState: LEGUP_F_legup_memcpy_2_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_2_BB__9_13
state: LEGUP_F_legup_memcpy_2_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_2_BB__5_4
state: LEGUP_F_legup_memcpy_2_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_2
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_4
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_4_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_4_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %dt = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %st = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %2 = bitcast i8* %d to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32* %2, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %3 = bitcast i8* %s to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %4 = lshr i32 %n, 2 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_2
state: LEGUP_F_legup_memcpy_4_BB__0_2
   store i32* %3, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_3
state: LEGUP_F_legup_memcpy_4_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_5
state: LEGUP_F_legup_memcpy_4_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_6
state: LEGUP_F_legup_memcpy_4_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_7
state: LEGUP_F_legup_memcpy_4_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_4_BB__15_14 default: LEGUP_F_legup_memcpy_4_BB__9_8
state: LEGUP_F_legup_memcpy_4_BB__9_8
   %10 = load i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   %13 = load i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_9
state: LEGUP_F_legup_memcpy_4_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_10
state: LEGUP_F_legup_memcpy_4_BB__9_10
   %11 = getelementptr inbounds i32* %10, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   store i32* %11, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_11)
   %12 = load i32* %10, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   %14 = getelementptr inbounds i32* %13, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_11
state: LEGUP_F_legup_memcpy_4_BB__9_11
   store i32* %14, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_12
state: LEGUP_F_legup_memcpy_4_BB__9_12
   store i32 %12, i32* %13, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_13
state: LEGUP_F_legup_memcpy_4_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_4
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_8bytes
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_8bytes_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_8bytes_BB__0_1
   %1 = trunc i64 %val to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %2 = lshr i64 %val, 8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %3 = trunc i64 %2 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %4 = lshr i64 %val, 16 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %5 = trunc i64 %4 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %6 = lshr i64 %val, 24 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %7 = trunc i64 %6 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %8 = lshr i64 %val, 32 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %9 = trunc i64 %8 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %10 = lshr i64 %val, 40 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %11 = trunc i64 %10 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %12 = lshr i64 %val, 48 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %13 = trunc i64 %12 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %14 = lshr i64 %val, 56 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %15 = trunc i64 %14 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_byte(i8 zeroext %1) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_crc32_8bytes_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_byte(i8 zeroext %3) #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_crc32_8bytes_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   call void @crc32_byte(i8 zeroext %5) #3 (endState: LEGUP_function_call_6)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_crc32_8bytes_BB__0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @crc32_byte(i8 zeroext %7) #3 (endState: LEGUP_function_call_8)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_crc32_8bytes_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @crc32_byte(i8 zeroext %9) #3 (endState: LEGUP_function_call_10)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_crc32_8bytes_BB__0_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   call void @crc32_byte(i8 zeroext %11) #3 (endState: LEGUP_function_call_12)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_crc32_8bytes_BB__0_13
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @crc32_byte(i8 zeroext %13) #3 (endState: LEGUP_function_call_14)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_crc32_8bytes_BB__0_15
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @crc32_byte(i8 zeroext %15) #3 (endState: LEGUP_function_call_16)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_crc32_8bytes_BB__0_17
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
End Function: crc32_8bytes
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_16
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_16_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_16_BB__0_1
   %l_50 = alloca [10 x i32], align 4 (endState: LEGUP_F_func_16_BB__0_1)
   %1 = bitcast [10 x i32]* %l_50 to i8* (endState: LEGUP_F_func_16_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_4(i8* %1, i8* bitcast ([10 x i32]* @func_16.l_50 to i8*), i32 40) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_16_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_func_16_BB__0_3
   br label %2
   Transition: default: LEGUP_F_func_16_BB__2_4
state: LEGUP_F_func_16_BB__2_4
   %l_51.0 = phi i32 [ 2107626899, %0 ], [ %39, %36 ] (endState: LEGUP_F_func_16_BB__2_4)
   %.02 = phi i32 [ %p_19, %0 ], [ %38, %36 ] (endState: LEGUP_F_func_16_BB__2_4)
   %.01 = phi i32 [ 12, %0 ], [ %phitmp, %36 ] (endState: LEGUP_F_func_16_BB__2_4)
   %3 = icmp eq i32 %.01, -21 (endState: LEGUP_F_func_16_BB__2_4)
   br i1 %3, label %41, label %4
   Transition: if (%3): LEGUP_F_func_16_BB__41_44 default: LEGUP_F_func_16_BB__4_5
state: LEGUP_F_func_16_BB__4_5
   %5 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__4_7)
   %6 = trunc i32 %p_20 to i8 (endState: LEGUP_F_func_16_BB__4_5)
   %12 = getelementptr inbounds [10 x i32]* %l_50, i32 0, i32 7 (endState: LEGUP_F_func_16_BB__4_5)
   Transition: default: LEGUP_F_func_16_BB__4_6
state: LEGUP_F_func_16_BB__4_6
   Transition: default: LEGUP_F_func_16_BB__4_7
state: LEGUP_F_func_16_BB__4_7
   %7 = sext i8 %5 to i16 (endState: LEGUP_F_func_16_BB__4_7)
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   %8 = call signext i16 @safe_add_func_int16_t_s_s(i16 signext %7, i16 signext 0) #3 (endState: LEGUP_function_call_8)
   Transition: if (safe_add_func_int16_t_s_s_finish_final): LEGUP_F_func_16_BB__4_9 default: LEGUP_function_call_8
state: LEGUP_F_func_16_BB__4_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   %9 = call i32 @safe_div_func_int32_t_s_s(i32 0, i32 0) #3 (endState: LEGUP_function_call_10)
   Transition: if (safe_div_func_int32_t_s_s_finish_final): LEGUP_F_func_16_BB__4_11 default: LEGUP_function_call_10
state: LEGUP_F_func_16_BB__4_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   %10 = call zeroext i8 @safe_lshift_func_uint8_t_u_u(i8 zeroext 1, i32 0) #3 (endState: LEGUP_function_call_12)
   Transition: if (safe_lshift_func_uint8_t_u_u_finish_final): LEGUP_F_func_16_BB__4_13 default: LEGUP_function_call_12
state: LEGUP_F_func_16_BB__4_13
   %11 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__4_15)
   %13 = load i32* %12, align 4 (endState: LEGUP_F_func_16_BB__4_15)
   Transition: default: LEGUP_F_func_16_BB__4_14
state: LEGUP_F_func_16_BB__4_14
   Transition: default: LEGUP_F_func_16_BB__4_15
state: LEGUP_F_func_16_BB__4_15
   %14 = trunc i32 %13 to i8 (endState: LEGUP_F_func_16_BB__4_15)
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   %15 = call signext i8 @safe_mod_func_int8_t_s_s(i8 signext %11, i8 signext %14) #3 (endState: LEGUP_function_call_16)
   Transition: if (safe_mod_func_int8_t_s_s_finish_final): LEGUP_F_func_16_BB__4_17 default: LEGUP_function_call_16
state: LEGUP_F_func_16_BB__4_17
   %16 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__4_19)
   Transition: default: LEGUP_F_func_16_BB__4_18
state: LEGUP_F_func_16_BB__4_18
   Transition: default: LEGUP_F_func_16_BB__4_19
state: LEGUP_F_func_16_BB__4_19
   %17 = sext i8 %16 to i32 (endState: LEGUP_F_func_16_BB__4_19)
   Transition: default: LEGUP_function_call_20
state: LEGUP_function_call_20
   %18 = call zeroext i8 @safe_rshift_func_uint8_t_u_s(i8 zeroext %15, i32 %17) #3 (endState: LEGUP_function_call_20)
   Transition: if (safe_rshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_16_BB__4_21 default: LEGUP_function_call_20
state: LEGUP_F_func_16_BB__4_21
   Transition: default: LEGUP_function_call_22
state: LEGUP_function_call_22
   %19 = call zeroext i8 @safe_lshift_func_uint8_t_u_s(i8 zeroext %18, i32 2) #3 (endState: LEGUP_function_call_22)
   Transition: if (safe_lshift_func_uint8_t_u_s_finish_final): LEGUP_F_func_16_BB__4_23 default: LEGUP_function_call_22
state: LEGUP_F_func_16_BB__4_23
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   %20 = call zeroext i8 @safe_add_func_uint8_t_u_u(i8 zeroext %6, i8 zeroext 0) #3 (endState: LEGUP_function_call_24)
   Transition: if (safe_add_func_uint8_t_u_u_finish_final): LEGUP_F_func_16_BB__4_25 default: LEGUP_function_call_24
state: LEGUP_F_func_16_BB__4_25
   %21 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__4_27)
   Transition: default: LEGUP_F_func_16_BB__4_26
state: LEGUP_F_func_16_BB__4_26
   Transition: default: LEGUP_F_func_16_BB__4_27
state: LEGUP_F_func_16_BB__4_27
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   %22 = call zeroext i8 @safe_mod_func_uint8_t_u_u(i8 zeroext 0, i8 zeroext %21) #3 (endState: LEGUP_function_call_28)
   Transition: if (safe_mod_func_uint8_t_u_u_finish_final): LEGUP_F_func_16_BB__4_29 default: LEGUP_function_call_28
state: LEGUP_F_func_16_BB__4_29
   br i1 false, label %23, label %24
   Transition: if (false): LEGUP_F_func_16_BB__23_30 default: LEGUP_F_func_16_BB__24_31
state: LEGUP_F_func_16_BB__23_30
   br label %24
   Transition: default: LEGUP_F_func_16_BB__24_31
state: LEGUP_F_func_16_BB__24_31
   %25 = icmp slt i8 %5, 0 (endState: LEGUP_F_func_16_BB__24_31)
   br i1 %25, label %30, label %26
   Transition: if (%25): LEGUP_F_func_16_BB__30_36 default: LEGUP_F_func_16_BB__26_32
state: LEGUP_F_func_16_BB__26_32
   %27 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__26_34)
   Transition: default: LEGUP_F_func_16_BB__26_33
state: LEGUP_F_func_16_BB__26_33
   Transition: default: LEGUP_F_func_16_BB__26_34
state: LEGUP_F_func_16_BB__26_34
   %28 = icmp eq i8 %27, 0 (endState: LEGUP_F_func_16_BB__26_34)
   br i1 %28, label %30, label %29
   Transition: if (%28): LEGUP_F_func_16_BB__30_36 default: LEGUP_F_func_16_BB__29_35
state: LEGUP_F_func_16_BB__29_35
   br label %30
   Transition: default: LEGUP_F_func_16_BB__30_36
state: LEGUP_F_func_16_BB__30_36
   %31 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__30_38)
   Transition: default: LEGUP_F_func_16_BB__30_37
state: LEGUP_F_func_16_BB__30_37
   Transition: default: LEGUP_F_func_16_BB__30_38
state: LEGUP_F_func_16_BB__30_38
   %32 = icmp eq i8 %31, 0 (endState: LEGUP_F_func_16_BB__30_38)
   br i1 %32, label %33, label %34
   Transition: if (%32): LEGUP_F_func_16_BB__33_39 default: LEGUP_F_func_16_BB__34_40
state: LEGUP_F_func_16_BB__33_39
   br label %34
   Transition: default: LEGUP_F_func_16_BB__34_40
state: LEGUP_F_func_16_BB__34_40
   %35 = icmp eq i32 %l_51.0, 1 (endState: LEGUP_F_func_16_BB__34_40)
   br label %36
   Transition: default: LEGUP_F_func_16_BB__36_41
state: LEGUP_F_func_16_BB__36_41
   %37 = zext i1 %35 to i32 (endState: LEGUP_F_func_16_BB__36_41)
   %38 = xor i32 %37, 1 (endState: LEGUP_F_func_16_BB__36_41)
   %39 = zext i1 %35 to i32 (endState: LEGUP_F_func_16_BB__36_41)
   Transition: default: LEGUP_function_call_42
state: LEGUP_function_call_42
   %40 = call i32 @safe_sub_func_int32_t_s_s(i32 %.01, i32 5) #3 (endState: LEGUP_function_call_42)
   Transition: if (safe_sub_func_int32_t_s_s_finish_final): LEGUP_F_func_16_BB__36_43 default: LEGUP_function_call_42
state: LEGUP_F_func_16_BB__36_43
   %sext = shl i32 %40, 16 (endState: LEGUP_F_func_16_BB__36_43)
   %phitmp = ashr exact i32 %sext, 16 (endState: LEGUP_F_func_16_BB__36_43)
   br label %2
   Transition: default: LEGUP_F_func_16_BB__2_4
state: LEGUP_F_func_16_BB__41_44
   br label %42
   Transition: default: LEGUP_F_func_16_BB__42_45
state: LEGUP_F_func_16_BB__42_45
   %.021 = phi i32 [ undef, %44 ], [ %.02, %41 ] (endState: LEGUP_F_func_16_BB__42_45)
   br i1 false, label %43, label %45
   Transition: if (false): LEGUP_F_func_16_BB__43_46 default: LEGUP_F_func_16_BB__45_48
state: LEGUP_F_func_16_BB__43_46
   br label %107
   Transition: default: LEGUP_F_func_16_BB__107_87
state: LEGUP_F_func_16_BB__44_47
   br label %42
   Transition: default: LEGUP_F_func_16_BB__42_45
state: LEGUP_F_func_16_BB__45_48
   %46 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__45_50)
   %47 = getelementptr inbounds [10 x i32]* %l_50, i32 0, i32 6 (endState: LEGUP_F_func_16_BB__45_48)
   %48 = load i32* %47, align 4 (endState: LEGUP_F_func_16_BB__45_50)
   Transition: default: LEGUP_F_func_16_BB__45_49
state: LEGUP_F_func_16_BB__45_49
   Transition: default: LEGUP_F_func_16_BB__45_50
state: LEGUP_F_func_16_BB__45_50
   %49 = icmp eq i8 %46, 0 (endState: LEGUP_F_func_16_BB__45_50)
   br i1 %49, label %50, label %63
   Transition: if (%49): LEGUP_F_func_16_BB__50_51 default: LEGUP_F_func_16_BB__63_56
state: LEGUP_F_func_16_BB__50_51
   %51 = and i32 %.021, 33328 (endState: LEGUP_F_func_16_BB__50_51)
   %52 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__50_53)
   %57 = getelementptr inbounds [10 x i32]* %l_50, i32 0, i32 6 (endState: LEGUP_F_func_16_BB__50_51)
   %58 = load i32* %57, align 4 (endState: LEGUP_F_func_16_BB__50_53)
   %61 = trunc i32 %.021 to i16 (endState: LEGUP_F_func_16_BB__50_51)
   Transition: default: LEGUP_F_func_16_BB__50_52
state: LEGUP_F_func_16_BB__50_52
   Transition: default: LEGUP_F_func_16_BB__50_53
state: LEGUP_F_func_16_BB__50_53
   %53 = sext i8 %52 to i32 (endState: LEGUP_F_func_16_BB__50_53)
   %54 = or i32 %51, %53 (endState: LEGUP_F_func_16_BB__50_53)
   %55 = icmp ult i32 %54, -739161654 (endState: LEGUP_F_func_16_BB__50_53)
   %56 = zext i1 %55 to i32 (endState: LEGUP_F_func_16_BB__50_53)
   %59 = xor i32 %56, %58 (endState: LEGUP_F_func_16_BB__50_53)
   %60 = trunc i32 %59 to i16 (endState: LEGUP_F_func_16_BB__50_53)
   Transition: default: LEGUP_function_call_54
state: LEGUP_function_call_54
   %62 = call zeroext i16 @safe_div_func_uint16_t_u_u(i16 zeroext %60, i16 zeroext %61) #3 (endState: LEGUP_function_call_54)
   Transition: if (safe_div_func_uint16_t_u_u_finish_final): LEGUP_F_func_16_BB__50_55 default: LEGUP_function_call_54
state: LEGUP_F_func_16_BB__50_55
   br label %63
   Transition: default: LEGUP_F_func_16_BB__63_56
state: LEGUP_F_func_16_BB__63_56
   %64 = getelementptr inbounds [10 x i32]* %l_50, i32 0, i32 6 (endState: LEGUP_F_func_16_BB__63_56)
   %65 = load i32* %64, align 4 (endState: LEGUP_F_func_16_BB__63_58)
   Transition: default: LEGUP_F_func_16_BB__63_57
state: LEGUP_F_func_16_BB__63_57
   Transition: default: LEGUP_F_func_16_BB__63_58
state: LEGUP_F_func_16_BB__63_58
   %66 = icmp ugt i32 %65, 44437 (endState: LEGUP_F_func_16_BB__63_58)
   %67 = zext i1 %66 to i8 (endState: LEGUP_F_func_16_BB__63_58)
   Transition: default: LEGUP_function_call_59
state: LEGUP_function_call_59
   %68 = call signext i8 @safe_sub_func_int8_t_s_s(i8 signext %46, i8 signext %67) #3 (endState: LEGUP_function_call_59)
   Transition: if (safe_sub_func_int8_t_s_s_finish_final): LEGUP_F_func_16_BB__63_60 default: LEGUP_function_call_59
state: LEGUP_F_func_16_BB__63_60
   %69 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__63_62)
   Transition: default: LEGUP_F_func_16_BB__63_61
state: LEGUP_F_func_16_BB__63_61
   Transition: default: LEGUP_F_func_16_BB__63_62
state: LEGUP_F_func_16_BB__63_62
   %70 = icmp sle i8 %68, %69 (endState: LEGUP_F_func_16_BB__63_62)
   %71 = zext i1 %70 to i16 (endState: LEGUP_F_func_16_BB__63_62)
   Transition: default: LEGUP_function_call_63
state: LEGUP_function_call_63
   %72 = call signext i16 @safe_sub_func_int16_t_s_s(i16 signext %71, i16 signext -24242) #3 (endState: LEGUP_function_call_63)
   Transition: if (safe_sub_func_int16_t_s_s_finish_final): LEGUP_F_func_16_BB__63_64 default: LEGUP_function_call_63
state: LEGUP_F_func_16_BB__63_64
   br i1 true, label %73, label %74
   Transition: if (true): LEGUP_F_func_16_BB__73_65 default: LEGUP_F_func_16_BB__74_66
state: LEGUP_F_func_16_BB__73_65
   br label %74
   Transition: default: LEGUP_F_func_16_BB__74_66
state: LEGUP_F_func_16_BB__74_66
   %75 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__74_68)
   %81 = getelementptr inbounds [10 x i32]* %l_50, i32 0, i32 6 (endState: LEGUP_F_func_16_BB__74_66)
   %87 = trunc i32 %.021 to i16 (endState: LEGUP_F_func_16_BB__74_66)
   %.lobit = lshr i8 %46, 7 (endState: LEGUP_F_func_16_BB__74_66)
   %93 = zext i8 %.lobit to i32 (endState: LEGUP_F_func_16_BB__74_66)
   %.not = xor i32 %93, 1 (endState: LEGUP_F_func_16_BB__74_66)
   Transition: default: LEGUP_F_func_16_BB__74_67
state: LEGUP_F_func_16_BB__74_67
   Transition: default: LEGUP_F_func_16_BB__74_68
state: LEGUP_F_func_16_BB__74_68
   %76 = sext i8 %75 to i32 (endState: LEGUP_F_func_16_BB__74_68)
   %77 = icmp sgt i32 %76, %p_20 (endState: LEGUP_F_func_16_BB__74_68)
   %78 = zext i1 %77 to i8 (endState: LEGUP_F_func_16_BB__74_68)
   Transition: default: LEGUP_function_call_69
state: LEGUP_function_call_69
   %79 = call signext i8 @safe_div_func_int8_t_s_s(i8 signext %78, i8 signext -8) #3 (endState: LEGUP_function_call_69)
   Transition: if (safe_div_func_int8_t_s_s_finish_final): LEGUP_F_func_16_BB__74_70 default: LEGUP_function_call_69
state: LEGUP_F_func_16_BB__74_70
   %80 = sext i8 %79 to i32 (endState: LEGUP_F_func_16_BB__74_70)
   %82 = load i32* %81, align 4 (endState: LEGUP_F_func_16_BB__74_72)
   Transition: default: LEGUP_F_func_16_BB__74_71
state: LEGUP_F_func_16_BB__74_71
   Transition: default: LEGUP_F_func_16_BB__74_72
state: LEGUP_F_func_16_BB__74_72
   %83 = icmp uge i32 %80, %82 (endState: LEGUP_F_func_16_BB__74_72)
   %84 = zext i1 %83 to i32 (endState: LEGUP_F_func_16_BB__74_72)
   %85 = icmp eq i32 %48, %84 (endState: LEGUP_F_func_16_BB__74_72)
   %86 = zext i1 %85 to i16 (endState: LEGUP_F_func_16_BB__74_72)
   Transition: default: LEGUP_function_call_73
state: LEGUP_function_call_73
   %88 = call signext i16 @safe_mod_func_int16_t_s_s(i16 signext %86, i16 signext %87) #3 (endState: LEGUP_function_call_73)
   Transition: if (safe_mod_func_int16_t_s_s_finish_final): LEGUP_F_func_16_BB__74_74 default: LEGUP_function_call_73
state: LEGUP_F_func_16_BB__74_74
   %89 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__74_76)
   Transition: default: LEGUP_F_func_16_BB__74_75
state: LEGUP_F_func_16_BB__74_75
   Transition: default: LEGUP_F_func_16_BB__74_76
state: LEGUP_F_func_16_BB__74_76
   %90 = sext i8 %89 to i32 (endState: LEGUP_F_func_16_BB__74_76)
   Transition: default: LEGUP_function_call_77
state: LEGUP_function_call_77
   %91 = call signext i16 @safe_lshift_func_int16_t_s_u(i16 signext %88, i32 %90) #3 (endState: LEGUP_function_call_77)
   Transition: if (safe_lshift_func_int16_t_s_u_finish_final): LEGUP_F_func_16_BB__74_78 default: LEGUP_function_call_77
state: LEGUP_F_func_16_BB__74_78
   %92 = sext i16 %91 to i32 (endState: LEGUP_F_func_16_BB__74_78)
   store i32 %92, i32* getelementptr inbounds ([2 x i32]* @g_70, i32 0, i32 0), align 4 (endState: LEGUP_F_func_16_BB__74_79)
   %94 = load i8* @g_2, align 1 (endState: LEGUP_F_func_16_BB__74_80)
   Transition: default: LEGUP_F_func_16_BB__74_79
state: LEGUP_F_func_16_BB__74_79
   Transition: default: LEGUP_F_func_16_BB__74_80
state: LEGUP_F_func_16_BB__74_80
   %95 = sext i8 %94 to i32 (endState: LEGUP_F_func_16_BB__74_80)
   %96 = or i32 %.not, %95 (endState: LEGUP_F_func_16_BB__74_80)
   %97 = icmp eq i32 %96, 0 (endState: LEGUP_F_func_16_BB__74_80)
   br i1 %97, label %98, label %101
   Transition: if (%97): LEGUP_F_func_16_BB__98_81 default: LEGUP_F_func_16_BB__101_84
state: LEGUP_F_func_16_BB__98_81
   %99 = load i32* getelementptr inbounds ([2 x i32]* @g_70, i32 0, i32 0), align 4 (endState: LEGUP_F_func_16_BB__98_83)
   Transition: default: LEGUP_F_func_16_BB__98_82
state: LEGUP_F_func_16_BB__98_82
   Transition: default: LEGUP_F_func_16_BB__98_83
state: LEGUP_F_func_16_BB__98_83
   %100 = icmp ne i32 %99, 0 (endState: LEGUP_F_func_16_BB__98_83)
   br label %101
   Transition: default: LEGUP_F_func_16_BB__101_84
state: LEGUP_F_func_16_BB__101_84
   %102 = phi i1 [ true, %74 ], [ %100, %98 ] (endState: LEGUP_F_func_16_BB__101_84)
   %103 = zext i1 %102 to i8 (endState: LEGUP_F_func_16_BB__101_84)
   Transition: default: LEGUP_function_call_85
state: LEGUP_function_call_85
   %104 = call zeroext i8 @safe_sub_func_uint8_t_u_u(i8 zeroext %103, i8 zeroext -5) #3 (endState: LEGUP_function_call_85)
   Transition: if (safe_sub_func_uint8_t_u_u_finish_final): LEGUP_F_func_16_BB__101_86 default: LEGUP_function_call_85
state: LEGUP_F_func_16_BB__101_86
   %105 = zext i8 %104 to i16 (endState: LEGUP_F_func_16_BB__101_86)
   %106 = and i16 %105, 1 (endState: LEGUP_F_func_16_BB__101_86)
   br label %107
   Transition: default: LEGUP_F_func_16_BB__107_87
state: LEGUP_F_func_16_BB__107_87
   %.0 = phi i16 [ 28421, %43 ], [ %106, %101 ] (endState: LEGUP_F_func_16_BB__107_87)
   ret i16 %.0
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 1
Basic Block: %4 Num States: 25
Basic Block: %23 Num States: 1
Basic Block: %24 Num States: 1
Basic Block: %26 Num States: 3
Basic Block: %29 Num States: 1
Basic Block: %30 Num States: 3
Basic Block: %33 Num States: 1
Basic Block: %34 Num States: 1
Basic Block: %36 Num States: 3
Basic Block: %41 Num States: 1
Basic Block: %42 Num States: 1
Basic Block: %43 Num States: 1
Basic Block: %44 Num States: 1
Basic Block: %45 Num States: 3
Basic Block: %50 Num States: 5
Basic Block: %63 Num States: 9
Basic Block: %73 Num States: 1
Basic Block: %74 Num States: 15
Basic Block: %98 Num States: 3
Basic Block: %101 Num States: 3
Basic Block: %107 Num States: 1
End Function: func_16
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_1_BB__0_1
   %l_9 = alloca [9 x i16], align 2 (endState: LEGUP_F_func_1_BB__0_1)
   %1 = bitcast [9 x i16]* %l_9 to i8* (endState: LEGUP_F_func_1_BB__0_1)
   %4 = getelementptr inbounds [9 x i16]* %l_9, i32 0, i32 4 (endState: LEGUP_F_func_1_BB__0_1)
   %14 = getelementptr inbounds [9 x i16]* %l_9, i32 0, i32 0 (endState: LEGUP_F_func_1_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_2(i8* %1, i8* bitcast ([9 x i16]* @func_1.l_9 to i8*), i32 18) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_2_finish_final): LEGUP_F_func_1_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_func_1_BB__0_3
   %2 = load i8* @g_2, align 1 (endState: LEGUP_F_func_1_BB__0_5)
   %5 = load i16* %4, align 2 (endState: LEGUP_F_func_1_BB__0_5)
   Transition: default: LEGUP_F_func_1_BB__0_4
state: LEGUP_F_func_1_BB__0_4
   Transition: default: LEGUP_F_func_1_BB__0_5
state: LEGUP_F_func_1_BB__0_5
   %3 = sext i8 %2 to i32 (endState: LEGUP_F_func_1_BB__0_5)
   %6 = sext i16 %5 to i32 (endState: LEGUP_F_func_1_BB__0_5)
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %7 = call signext i16 @safe_unary_minus_func_int16_t_s(i16 signext -5) #3 (endState: LEGUP_function_call_6)
   Transition: if (safe_unary_minus_func_int16_t_s_finish_final): LEGUP_F_func_1_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_func_1_BB__0_7
   %8 = load i8* @g_2, align 1 (endState: LEGUP_F_func_1_BB__0_9)
   Transition: default: LEGUP_F_func_1_BB__0_8
state: LEGUP_F_func_1_BB__0_8
   Transition: default: LEGUP_F_func_1_BB__0_9
state: LEGUP_F_func_1_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   %9 = call signext i8 @safe_mul_func_int8_t_s_s(i8 signext %8, i8 signext 6) #3 (endState: LEGUP_function_call_10)
   Transition: if (safe_mul_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_func_1_BB__0_11
   %10 = load i8* @g_2, align 1 (endState: LEGUP_F_func_1_BB__0_13)
   Transition: default: LEGUP_F_func_1_BB__0_12
state: LEGUP_F_func_1_BB__0_12
   Transition: default: LEGUP_F_func_1_BB__0_13
state: LEGUP_F_func_1_BB__0_13
   %11 = icmp sgt i8 %9, %10 (endState: LEGUP_F_func_1_BB__0_13)
   %12 = zext i1 %11 to i8 (endState: LEGUP_F_func_1_BB__0_13)
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   %13 = call signext i8 @safe_add_func_int8_t_s_s(i8 signext %12, i8 signext 6) #3 (endState: LEGUP_function_call_14)
   Transition: if (safe_add_func_int8_t_s_s_finish_final): LEGUP_F_func_1_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_func_1_BB__0_15
   %15 = load i16* %14, align 2 (endState: LEGUP_F_func_1_BB__0_17)
   Transition: default: LEGUP_F_func_1_BB__0_16
state: LEGUP_F_func_1_BB__0_16
   Transition: default: LEGUP_F_func_1_BB__0_17
state: LEGUP_F_func_1_BB__0_17
   %16 = icmp eq i16 %15, 0 (endState: LEGUP_F_func_1_BB__0_17)
   br i1 %16, label %18, label %17
   Transition: if (%16): LEGUP_F_func_1_BB__18_19 default: LEGUP_F_func_1_BB__17_18
state: LEGUP_F_func_1_BB__17_18
   br label %18
   Transition: default: LEGUP_F_func_1_BB__18_19
state: LEGUP_F_func_1_BB__18_19
   %19 = phi i16 [ 0, %0 ], [ 1, %17 ] (endState: LEGUP_F_func_1_BB__18_19)
   %28 = getelementptr inbounds [9 x i16]* %l_9, i32 0, i32 3 (endState: LEGUP_F_func_1_BB__18_19)
   Transition: default: LEGUP_function_call_20
state: LEGUP_function_call_20
   %20 = call zeroext i16 @safe_lshift_func_uint16_t_u_s(i16 zeroext %19, i32 6) #3 (endState: LEGUP_function_call_20)
   Transition: if (safe_lshift_func_uint16_t_u_s_finish_final): LEGUP_F_func_1_BB__18_21 default: LEGUP_function_call_20
state: LEGUP_F_func_1_BB__18_21
   %21 = load i8* @g_2, align 1 (endState: LEGUP_F_func_1_BB__18_23)
   Transition: default: LEGUP_F_func_1_BB__18_22
state: LEGUP_F_func_1_BB__18_22
   Transition: default: LEGUP_F_func_1_BB__18_23
state: LEGUP_F_func_1_BB__18_23
   %22 = sext i8 %21 to i32 (endState: LEGUP_F_func_1_BB__18_23)
   %23 = sext i8 %21 to i32 (endState: LEGUP_F_func_1_BB__18_23)
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   %24 = call zeroext i16 @func_16(i16 signext %7, i32 -1, i32 %22, i32 %23) #3 (endState: LEGUP_function_call_24)
   Transition: if (func_16_finish_final): LEGUP_F_func_1_BB__18_25 default: LEGUP_function_call_24
state: LEGUP_F_func_1_BB__18_25
   %25 = load i8* @g_2, align 1 (endState: LEGUP_F_func_1_BB__18_27)
   %29 = load i16* %28, align 2 (endState: LEGUP_F_func_1_BB__18_27)
   Transition: default: LEGUP_F_func_1_BB__18_26
state: LEGUP_F_func_1_BB__18_26
   Transition: default: LEGUP_F_func_1_BB__18_27
state: LEGUP_F_func_1_BB__18_27
   %26 = sext i8 %25 to i16 (endState: LEGUP_F_func_1_BB__18_27)
   %27 = sext i8 %25 to i32 (endState: LEGUP_F_func_1_BB__18_27)
   %30 = sext i16 %29 to i32 (endState: LEGUP_F_func_1_BB__18_27)
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   %31 = call signext i16 @func_10(i16 zeroext %24, i16 signext %26, i8 zeroext -1, i32 %27, i32 %30) #3 (endState: LEGUP_function_call_28)
   Transition: if (func_10_finish_final): LEGUP_F_func_1_BB__18_29 default: LEGUP_function_call_28
state: LEGUP_F_func_1_BB__18_29
   %32 = load i8* @g_2, align 1 (endState: LEGUP_F_func_1_BB__18_31)
   Transition: default: LEGUP_F_func_1_BB__18_30
state: LEGUP_F_func_1_BB__18_30
   Transition: default: LEGUP_F_func_1_BB__18_31
state: LEGUP_F_func_1_BB__18_31
   %33 = sext i8 %32 to i32 (endState: LEGUP_F_func_1_BB__18_31)
   Transition: default: LEGUP_function_call_32
state: LEGUP_function_call_32
   %34 = call zeroext i8 @func_4(i32 %3, i32 %6, i16 signext %31, i32 %33) #3 (endState: LEGUP_function_call_32)
   Transition: if (func_4_finish_final): LEGUP_F_func_1_BB__18_33 default: LEGUP_function_call_32
state: LEGUP_F_func_1_BB__18_33
   %35 = load volatile i32* @g_74, align 4 (endState: LEGUP_F_func_1_BB__18_35)
   Transition: default: LEGUP_F_func_1_BB__18_34
state: LEGUP_F_func_1_BB__18_34
   Transition: default: LEGUP_F_func_1_BB__18_35
state: LEGUP_F_func_1_BB__18_35
   %36 = trunc i32 %35 to i8 (endState: LEGUP_F_func_1_BB__18_35)
   ret i8 %36
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
Basic Block: %17 Num States: 1
Basic Block: %18 Num States: 17
End Function: func_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: transparent_crc
state: LEGUP_0
   Transition: if (start): LEGUP_F_transparent_crc_BB__0_1 default: LEGUP_0
state: LEGUP_F_transparent_crc_BB__0_1
   %1 = icmp eq i32 %flag, 0 (endState: LEGUP_F_transparent_crc_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_8bytes(i64 %val) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_8bytes_finish_final): LEGUP_F_transparent_crc_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_transparent_crc_BB__0_3
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_transparent_crc_BB__6_7 default: LEGUP_F_transparent_crc_BB__2_4
state: LEGUP_F_transparent_crc_BB__2_4
   %3 = load i32* @crc32_context, align 4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   Transition: default: LEGUP_F_transparent_crc_BB__2_5
state: LEGUP_F_transparent_crc_BB__2_5
   Transition: default: LEGUP_F_transparent_crc_BB__2_6
state: LEGUP_F_transparent_crc_BB__2_6
   %4 = xor i32 %3, -1 (endState: LEGUP_F_transparent_crc_BB__2_6)
   %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str5, i32 0, i32 0), i8* %vname, i32 %4) #4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   br label %6
   Transition: default: LEGUP_F_transparent_crc_BB__6_7
state: LEGUP_F_transparent_crc_BB__6_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 3
Basic Block: %6 Num States: 1
End Function: transparent_crc
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @platform_main_begin() #3 (endState: LEGUP_function_call_2)
   Transition: if (platform_main_begin_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_gentab() #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_gentab_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %1 = call zeroext i8 @func_1() #3 (endState: LEGUP_function_call_6)
   Transition: if (func_1_finish_final): LEGUP_F_main_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB__0_7
   %2 = load i8* @g_2, align 1 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   %3 = sext i8 %2 to i64 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @transparent_crc(i64 %3, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_10)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB__0_11
   br label %4
   Transition: default: LEGUP_F_main_BB__4_12
state: LEGUP_F_main_BB__4_12
   %5 = phi i32 [ 0, %0 ], [ %12, %11 ] (endState: LEGUP_F_main_BB__4_12)
   %exitcond = icmp eq i32 %5, 2 (endState: LEGUP_F_main_BB__4_12)
   br i1 %exitcond, label %13, label %6
   Transition: if (%exitcond): LEGUP_F_main_BB__13_21 default: LEGUP_F_main_BB__6_13
state: LEGUP_F_main_BB__6_13
   %scevgep = getelementptr [2 x i32]* @g_70, i32 0, i32 %5 (endState: LEGUP_F_main_BB__6_13)
   %7 = load i32* %scevgep, align 4 (endState: LEGUP_F_main_BB__6_15)
   Transition: default: LEGUP_F_main_BB__6_14
state: LEGUP_F_main_BB__6_14
   Transition: default: LEGUP_F_main_BB__6_15
state: LEGUP_F_main_BB__6_15
   %8 = zext i32 %7 to i64 (endState: LEGUP_F_main_BB__6_15)
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @transparent_crc(i64 %8, i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_16)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__6_17 default: LEGUP_function_call_16
state: LEGUP_F_main_BB__6_17
   br i1 false, label %9, label %10
   Transition: if (false): LEGUP_F_main_BB__9_18 default: LEGUP_F_main_BB__10_19
state: LEGUP_F_main_BB__9_18
   br label %10
   Transition: default: LEGUP_F_main_BB__10_19
state: LEGUP_F_main_BB__10_19
   br label %11
   Transition: default: LEGUP_F_main_BB__11_20
state: LEGUP_F_main_BB__11_20
   %12 = add nsw i32 %5, 1 (endState: LEGUP_F_main_BB__11_20)
   br label %4
   Transition: default: LEGUP_F_main_BB__4_12
state: LEGUP_F_main_BB__13_21
   %14 = load volatile i32* @g_74, align 4 (endState: LEGUP_F_main_BB__13_23)
   Transition: default: LEGUP_F_main_BB__13_22
state: LEGUP_F_main_BB__13_22
   Transition: default: LEGUP_F_main_BB__13_23
state: LEGUP_F_main_BB__13_23
   %15 = sext i32 %14 to i64 (endState: LEGUP_F_main_BB__13_23)
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   call void @transparent_crc(i64 %15, i8* getelementptr inbounds ([5 x i8]* @.str3, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_24)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__13_25 default: LEGUP_function_call_24
state: LEGUP_F_main_BB__13_25
   %16 = load i32* @crc32_context, align 4 (endState: LEGUP_F_main_BB__13_27)
   Transition: default: LEGUP_F_main_BB__13_26
state: LEGUP_F_main_BB__13_26
   Transition: default: LEGUP_F_main_BB__13_27
state: LEGUP_F_main_BB__13_27
   %17 = xor i32 %16, -1 (endState: LEGUP_F_main_BB__13_27)
   Transition: default: LEGUP_function_call_28
state: LEGUP_function_call_28
   %18 = call i32 @platform_main_end(i32 %17, i32 0) #3 (endState: LEGUP_function_call_28)
   Transition: if (platform_main_end_finish_final): LEGUP_F_main_BB__13_29 default: LEGUP_function_call_28
state: LEGUP_F_main_BB__13_29
   ret i32 %18
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 11
Basic Block: %4 Num States: 1
Basic Block: %6 Num States: 5
Basic Block: %9 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 9
End Function: main
--------------------------------------------------------------------------------

