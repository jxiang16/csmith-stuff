//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  5 16:23:28 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Jun 12 19:47:24 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_begin
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_begin_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_begin_BB__0_1
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_begin
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_gentab
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_crc32_gentab_BB__1_1 default: LEGUP_0
state: LEGUP_F_crc32_gentab_BB__1_1
   %2 = phi i32 [ 0, %0 ], [ %17, %16 ] (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %scevgep = getelementptr [256 x i32]* @crc32_tab, i32 0, i32 %2 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   %exitcond1 = icmp eq i32 %2, 256 (endState: LEGUP_F_crc32_gentab_BB__1_1)
   br i1 %exitcond1, label %18, label %3
   Transition: if (%exitcond1): LEGUP_F_crc32_gentab_BB__18_12 default: LEGUP_F_crc32_gentab_BB__3_2
state: LEGUP_F_crc32_gentab_BB__3_2
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__4_3
   %indvar = phi i32 [ %indvar.next, %14 ], [ 0, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %crc.0 = phi i32 [ %crc.1, %14 ], [ %2, %3 ] (endState: LEGUP_F_crc32_gentab_BB__4_3)
   %exitcond = icmp eq i32 %indvar, 8 (endState: LEGUP_F_crc32_gentab_BB__4_3)
   br i1 %exitcond, label %15, label %5
   Transition: if (%exitcond): LEGUP_F_crc32_gentab_BB__15_9 default: LEGUP_F_crc32_gentab_BB__5_4
state: LEGUP_F_crc32_gentab_BB__5_4
   %6 = and i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   %7 = icmp eq i32 %6, 0 (endState: LEGUP_F_crc32_gentab_BB__5_4)
   br i1 %7, label %11, label %8
   Transition: if (%7): LEGUP_F_crc32_gentab_BB__11_6 default: LEGUP_F_crc32_gentab_BB__8_5
state: LEGUP_F_crc32_gentab_BB__8_5
   %9 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   %10 = xor i32 %9, -306674912 (endState: LEGUP_F_crc32_gentab_BB__8_5)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__11_6
   %12 = lshr i32 %crc.0, 1 (endState: LEGUP_F_crc32_gentab_BB__11_6)
   br label %13
   Transition: default: LEGUP_F_crc32_gentab_BB__13_7
state: LEGUP_F_crc32_gentab_BB__13_7
   %crc.1 = phi i32 [ %10, %8 ], [ %12, %11 ] (endState: LEGUP_F_crc32_gentab_BB__13_7)
   br label %14
   Transition: default: LEGUP_F_crc32_gentab_BB__14_8
state: LEGUP_F_crc32_gentab_BB__14_8
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_crc32_gentab_BB__14_8)
   br label %4
   Transition: default: LEGUP_F_crc32_gentab_BB__4_3
state: LEGUP_F_crc32_gentab_BB__15_9
   store i32 %crc.0, i32* %scevgep, align 4 (endState: LEGUP_F_crc32_gentab_BB__15_10)
   Transition: default: LEGUP_F_crc32_gentab_BB__15_10
state: LEGUP_F_crc32_gentab_BB__15_10
   br label %16
   Transition: default: LEGUP_F_crc32_gentab_BB__16_11
state: LEGUP_F_crc32_gentab_BB__16_11
   %17 = add nsw i32 %2, 1 (endState: LEGUP_F_crc32_gentab_BB__16_11)
   br label %1
   Transition: default: LEGUP_F_crc32_gentab_BB__1_1
state: LEGUP_F_crc32_gentab_BB__18_12
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 1
Basic Block: %3 Num States: 1
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %14 Num States: 1
Basic Block: %15 Num States: 2
Basic Block: %16 Num States: 1
Basic Block: %18 Num States: 1
End Function: crc32_gentab
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: platform_main_end
state: LEGUP_0
   Transition: if (start): LEGUP_F_platform_main_end_BB__0_1 default: LEGUP_0
state: LEGUP_F_platform_main_end_BB__0_1
   %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str4, i32 0, i32 0), i32 %crc) #3 (endState: LEGUP_F_platform_main_end_BB__0_1)
   ret i32 %crc
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
End Function: platform_main_end
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_byte
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_byte_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_byte_BB__0_1
   %1 = load i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %3 = zext i8 %b to i32 (endState: LEGUP_F_crc32_byte_BB__0_1)
   Transition: default: LEGUP_F_crc32_byte_BB__0_2
state: LEGUP_F_crc32_byte_BB__0_2
   Transition: default: LEGUP_F_crc32_byte_BB__0_3
state: LEGUP_F_crc32_byte_BB__0_3
   %2 = lshr i32 %1, 8 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %.masked = and i32 %1, 255 (endState: LEGUP_F_crc32_byte_BB__0_3)
   %4 = xor i32 %.masked, %3 (endState: LEGUP_F_crc32_byte_BB__0_3)
   Transition: default: LEGUP_F_crc32_byte_BB__0_4
state: LEGUP_F_crc32_byte_BB__0_4
   %5 = getelementptr inbounds [256 x i32]* @crc32_tab, i32 0, i32 %4 (endState: LEGUP_F_crc32_byte_BB__0_4)
   %6 = load i32* %5, align 4 (endState: LEGUP_F_crc32_byte_BB__0_6)
   Transition: default: LEGUP_F_crc32_byte_BB__0_5
state: LEGUP_F_crc32_byte_BB__0_5
   Transition: default: LEGUP_F_crc32_byte_BB__0_6
state: LEGUP_F_crc32_byte_BB__0_6
   %7 = xor i32 %2, %6 (endState: LEGUP_F_crc32_byte_BB__0_6)
   store i32 %7, i32* @crc32_context, align 4 (endState: LEGUP_F_crc32_byte_BB__0_7)
   Transition: default: LEGUP_F_crc32_byte_BB__0_7
state: LEGUP_F_crc32_byte_BB__0_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 7
End Function: crc32_byte
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: legup_memcpy_4
state: LEGUP_0
   Transition: if (start): LEGUP_F_legup_memcpy_4_BB__0_1 default: LEGUP_0
state: LEGUP_F_legup_memcpy_4_BB__0_1
   %1 = alloca i32, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %dt = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %st = alloca i32*, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32 %n, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %2 = bitcast i8* %d to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   store i32* %2, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_2)
   %3 = bitcast i8* %s to i32* (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   %4 = lshr i32 %n, 2 (endState: LEGUP_F_legup_memcpy_4_BB__0_1)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_2
state: LEGUP_F_legup_memcpy_4_BB__0_2
   store i32* %3, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   store i32 %4, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__0_3)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__0_3
state: LEGUP_F_legup_memcpy_4_BB__0_3
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__5_4
   %6 = load i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_5
state: LEGUP_F_legup_memcpy_4_BB__5_5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_6
state: LEGUP_F_legup_memcpy_4_BB__5_6
   %7 = add i32 %6, -1 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   store i32 %7, i32* %1, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__5_7)
   %8 = icmp eq i32 %6, 0 (endState: LEGUP_F_legup_memcpy_4_BB__5_6)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_7
state: LEGUP_F_legup_memcpy_4_BB__5_7
   br i1 %8, label %15, label %9
   Transition: if (%8): LEGUP_F_legup_memcpy_4_BB__15_14 default: LEGUP_F_legup_memcpy_4_BB__9_8
state: LEGUP_F_legup_memcpy_4_BB__9_8
   %10 = load i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   %13 = load i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_9
state: LEGUP_F_legup_memcpy_4_BB__9_9
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_10
state: LEGUP_F_legup_memcpy_4_BB__9_10
   %11 = getelementptr inbounds i32* %10, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   store i32* %11, i32** %st, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_11)
   %12 = load i32* %10, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   %14 = getelementptr inbounds i32* %13, i32 1 (endState: LEGUP_F_legup_memcpy_4_BB__9_10)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_11
state: LEGUP_F_legup_memcpy_4_BB__9_11
   store i32* %14, i32** %dt, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_12)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_12
state: LEGUP_F_legup_memcpy_4_BB__9_12
   store i32 %12, i32* %13, align 4 (endState: LEGUP_F_legup_memcpy_4_BB__9_13)
   Transition: default: LEGUP_F_legup_memcpy_4_BB__9_13
state: LEGUP_F_legup_memcpy_4_BB__9_13
   br label %5
   Transition: default: LEGUP_F_legup_memcpy_4_BB__5_4
state: LEGUP_F_legup_memcpy_4_BB__15_14
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %5 Num States: 4
Basic Block: %9 Num States: 6
Basic Block: %15 Num States: 1
End Function: legup_memcpy_4
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: func_1
state: LEGUP_0
   Transition: if (start): LEGUP_F_func_1_BB__0_1 default: LEGUP_0
state: LEGUP_F_func_1_BB__0_1
   %l_2 = alloca [3 x [2 x [5 x i32]]], align 4 (endState: LEGUP_F_func_1_BB__0_1)
   %1 = bitcast [3 x [2 x [5 x i32]]]* %l_2 to i8* (endState: LEGUP_F_func_1_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @legup_memcpy_4(i8* %1, i8* bitcast ([3 x [2 x [5 x i32]]]* @func_1.l_2 to i8*), i32 120) (endState: LEGUP_function_call_2)
   Transition: if (legup_memcpy_4_finish_final): LEGUP_F_func_1_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_func_1_BB__0_3
   br label %2
   Transition: default: LEGUP_F_func_1_BB__2_4
state: LEGUP_F_func_1_BB__2_4
   %storemerge = phi i32 [ 0, %0 ], [ %25, %23 ] (endState: LEGUP_F_func_1_BB__2_4)
   store i32 %storemerge, i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__2_5)
   %3 = icmp slt i32 %storemerge, 3 (endState: LEGUP_F_func_1_BB__2_4)
   Transition: default: LEGUP_F_func_1_BB__2_5
state: LEGUP_F_func_1_BB__2_5
   br i1 %3, label %4, label %26
   Transition: if (%3): LEGUP_F_func_1_BB__4_6 default: LEGUP_F_func_1_BB__26_28
state: LEGUP_F_func_1_BB__4_6
   br label %5
   Transition: default: LEGUP_F_func_1_BB__5_7
state: LEGUP_F_func_1_BB__5_7
   %storemerge1 = phi i32 [ 0, %4 ], [ %21, %19 ] (endState: LEGUP_F_func_1_BB__5_7)
   store i32 %storemerge1, i32* @g_4, align 4 (endState: LEGUP_F_func_1_BB__5_8)
   %6 = icmp slt i32 %storemerge1, 2 (endState: LEGUP_F_func_1_BB__5_7)
   Transition: default: LEGUP_F_func_1_BB__5_8
state: LEGUP_F_func_1_BB__5_8
   br i1 %6, label %7, label %22
   Transition: if (%6): LEGUP_F_func_1_BB__7_9 default: LEGUP_F_func_1_BB__22_24
state: LEGUP_F_func_1_BB__7_9
   br label %8
   Transition: default: LEGUP_F_func_1_BB__8_10
state: LEGUP_F_func_1_BB__8_10
   %storemerge2 = phi i32 [ 0, %7 ], [ %17, %15 ] (endState: LEGUP_F_func_1_BB__8_10)
   store i32 %storemerge2, i32* getelementptr inbounds ([5 x [3 x [6 x i32]]]* @g_5, i32 0, i32 1, i32 1, i32 5), align 4 (endState: LEGUP_F_func_1_BB__8_11)
   %9 = icmp slt i32 %storemerge2, 5 (endState: LEGUP_F_func_1_BB__8_10)
   Transition: default: LEGUP_F_func_1_BB__8_11
state: LEGUP_F_func_1_BB__8_11
   br i1 %9, label %10, label %18
   Transition: if (%9): LEGUP_F_func_1_BB__10_12 default: LEGUP_F_func_1_BB__18_20
state: LEGUP_F_func_1_BB__10_12
   %11 = load i32* getelementptr inbounds ([5 x [3 x [6 x i32]]]* @g_5, i32 0, i32 1, i32 1, i32 5), align 4 (endState: LEGUP_F_func_1_BB__10_14)
   %12 = load i32* @g_4, align 4 (endState: LEGUP_F_func_1_BB__10_14)
   Transition: default: LEGUP_F_func_1_BB__10_13
state: LEGUP_F_func_1_BB__10_13
   %13 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__10_15)
   Transition: default: LEGUP_F_func_1_BB__10_14
state: LEGUP_F_func_1_BB__10_14
   Transition: default: LEGUP_F_func_1_BB__10_15
state: LEGUP_F_func_1_BB__10_15
   %14 = getelementptr inbounds [3 x [2 x [5 x i32]]]* %l_2, i32 0, i32 %13, i32 %12, i32 %11 (endState: LEGUP_F_func_1_BB__10_15)
   store i32 581676169, i32* %14, align 4 (endState: LEGUP_F_func_1_BB__10_16)
   Transition: default: LEGUP_F_func_1_BB__10_16
state: LEGUP_F_func_1_BB__10_16
   br label %15
   Transition: default: LEGUP_F_func_1_BB__15_17
state: LEGUP_F_func_1_BB__15_17
   %16 = load i32* getelementptr inbounds ([5 x [3 x [6 x i32]]]* @g_5, i32 0, i32 1, i32 1, i32 5), align 4 (endState: LEGUP_F_func_1_BB__15_19)
   Transition: default: LEGUP_F_func_1_BB__15_18
state: LEGUP_F_func_1_BB__15_18
   Transition: default: LEGUP_F_func_1_BB__15_19
state: LEGUP_F_func_1_BB__15_19
   %17 = add nsw i32 %16, 1 (endState: LEGUP_F_func_1_BB__15_19)
   br label %8
   Transition: default: LEGUP_F_func_1_BB__8_10
state: LEGUP_F_func_1_BB__18_20
   br label %19
   Transition: default: LEGUP_F_func_1_BB__19_21
state: LEGUP_F_func_1_BB__19_21
   %20 = load i32* @g_4, align 4 (endState: LEGUP_F_func_1_BB__19_23)
   Transition: default: LEGUP_F_func_1_BB__19_22
state: LEGUP_F_func_1_BB__19_22
   Transition: default: LEGUP_F_func_1_BB__19_23
state: LEGUP_F_func_1_BB__19_23
   %21 = add nsw i32 %20, 1 (endState: LEGUP_F_func_1_BB__19_23)
   br label %5
   Transition: default: LEGUP_F_func_1_BB__5_7
state: LEGUP_F_func_1_BB__22_24
   br label %23
   Transition: default: LEGUP_F_func_1_BB__23_25
state: LEGUP_F_func_1_BB__23_25
   %24 = load i32* @g_3, align 4 (endState: LEGUP_F_func_1_BB__23_27)
   Transition: default: LEGUP_F_func_1_BB__23_26
state: LEGUP_F_func_1_BB__23_26
   Transition: default: LEGUP_F_func_1_BB__23_27
state: LEGUP_F_func_1_BB__23_27
   %25 = add nsw i32 %24, 1 (endState: LEGUP_F_func_1_BB__23_27)
   br label %2
   Transition: default: LEGUP_F_func_1_BB__2_4
state: LEGUP_F_func_1_BB__26_28
   %27 = getelementptr inbounds [3 x [2 x [5 x i32]]]* %l_2, i32 0, i32 2, i32 0, i32 2 (endState: LEGUP_F_func_1_BB__26_28)
   %28 = load i32* %27, align 4 (endState: LEGUP_F_func_1_BB__26_30)
   Transition: default: LEGUP_F_func_1_BB__26_29
state: LEGUP_F_func_1_BB__26_29
   Transition: default: LEGUP_F_func_1_BB__26_30
state: LEGUP_F_func_1_BB__26_30
   ret i32 %28
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 2
Basic Block: %4 Num States: 1
Basic Block: %5 Num States: 2
Basic Block: %7 Num States: 1
Basic Block: %8 Num States: 2
Basic Block: %10 Num States: 5
Basic Block: %15 Num States: 3
Basic Block: %18 Num States: 1
Basic Block: %19 Num States: 3
Basic Block: %22 Num States: 1
Basic Block: %23 Num States: 3
Basic Block: %26 Num States: 3
End Function: func_1
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: crc32_8bytes
state: LEGUP_0
   Transition: if (start): LEGUP_F_crc32_8bytes_BB__0_1 default: LEGUP_0
state: LEGUP_F_crc32_8bytes_BB__0_1
   %1 = trunc i64 %val to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %2 = lshr i64 %val, 8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %3 = trunc i64 %2 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %4 = lshr i64 %val, 16 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %5 = trunc i64 %4 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %6 = lshr i64 %val, 24 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %7 = trunc i64 %6 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %8 = lshr i64 %val, 32 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %9 = trunc i64 %8 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %10 = lshr i64 %val, 40 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %11 = trunc i64 %10 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %12 = lshr i64 %val, 48 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %13 = trunc i64 %12 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %14 = lshr i64 %val, 56 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   %15 = trunc i64 %14 to i8 (endState: LEGUP_F_crc32_8bytes_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_byte(i8 zeroext %1) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_crc32_8bytes_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_byte(i8 zeroext %3) #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_crc32_8bytes_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   call void @crc32_byte(i8 zeroext %5) #3 (endState: LEGUP_function_call_6)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_crc32_8bytes_BB__0_7
   Transition: default: LEGUP_function_call_8
state: LEGUP_function_call_8
   call void @crc32_byte(i8 zeroext %7) #3 (endState: LEGUP_function_call_8)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_9 default: LEGUP_function_call_8
state: LEGUP_F_crc32_8bytes_BB__0_9
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @crc32_byte(i8 zeroext %9) #3 (endState: LEGUP_function_call_10)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_crc32_8bytes_BB__0_11
   Transition: default: LEGUP_function_call_12
state: LEGUP_function_call_12
   call void @crc32_byte(i8 zeroext %11) #3 (endState: LEGUP_function_call_12)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_13 default: LEGUP_function_call_12
state: LEGUP_F_crc32_8bytes_BB__0_13
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @crc32_byte(i8 zeroext %13) #3 (endState: LEGUP_function_call_14)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_crc32_8bytes_BB__0_15
   Transition: default: LEGUP_function_call_16
state: LEGUP_function_call_16
   call void @crc32_byte(i8 zeroext %15) #3 (endState: LEGUP_function_call_16)
   Transition: if (crc32_byte_finish_final): LEGUP_F_crc32_8bytes_BB__0_17 default: LEGUP_function_call_16
state: LEGUP_F_crc32_8bytes_BB__0_17
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 17
End Function: crc32_8bytes
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: transparent_crc
state: LEGUP_0
   Transition: if (start): LEGUP_F_transparent_crc_BB__0_1 default: LEGUP_0
state: LEGUP_F_transparent_crc_BB__0_1
   %1 = icmp eq i32 %flag, 0 (endState: LEGUP_F_transparent_crc_BB__0_1)
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @crc32_8bytes(i64 %val) #3 (endState: LEGUP_function_call_2)
   Transition: if (crc32_8bytes_finish_final): LEGUP_F_transparent_crc_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_transparent_crc_BB__0_3
   br i1 %1, label %6, label %2
   Transition: if (%1): LEGUP_F_transparent_crc_BB__6_7 default: LEGUP_F_transparent_crc_BB__2_4
state: LEGUP_F_transparent_crc_BB__2_4
   %3 = load i32* @crc32_context, align 4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   Transition: default: LEGUP_F_transparent_crc_BB__2_5
state: LEGUP_F_transparent_crc_BB__2_5
   Transition: default: LEGUP_F_transparent_crc_BB__2_6
state: LEGUP_F_transparent_crc_BB__2_6
   %4 = xor i32 %3, -1 (endState: LEGUP_F_transparent_crc_BB__2_6)
   %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str5, i32 0, i32 0), i8* %vname, i32 %4) #4 (endState: LEGUP_F_transparent_crc_BB__2_6)
   br label %6
   Transition: default: LEGUP_F_transparent_crc_BB__6_7
state: LEGUP_F_transparent_crc_BB__6_7
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 3
Basic Block: %2 Num States: 3
Basic Block: %6 Num States: 1
End Function: transparent_crc
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   Transition: default: LEGUP_function_call_2
state: LEGUP_function_call_2
   call void @platform_main_begin() #3 (endState: LEGUP_function_call_2)
   Transition: if (platform_main_begin_finish_final): LEGUP_F_main_BB__0_3 default: LEGUP_function_call_2
state: LEGUP_F_main_BB__0_3
   Transition: default: LEGUP_function_call_4
state: LEGUP_function_call_4
   call void @crc32_gentab() #3 (endState: LEGUP_function_call_4)
   Transition: if (crc32_gentab_finish_final): LEGUP_F_main_BB__0_5 default: LEGUP_function_call_4
state: LEGUP_F_main_BB__0_5
   Transition: default: LEGUP_function_call_6
state: LEGUP_function_call_6
   %1 = call i32 @func_1() #3 (endState: LEGUP_function_call_6)
   Transition: if (func_1_finish_final): LEGUP_F_main_BB__0_7 default: LEGUP_function_call_6
state: LEGUP_F_main_BB__0_7
   %2 = load i32* @g_3, align 4 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   %3 = sext i32 %2 to i64 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_function_call_10
state: LEGUP_function_call_10
   call void @transparent_crc(i64 %3, i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_10)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_11 default: LEGUP_function_call_10
state: LEGUP_F_main_BB__0_11
   %4 = load i32* @g_4, align 4 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_F_main_BB__0_12
state: LEGUP_F_main_BB__0_12
   Transition: default: LEGUP_F_main_BB__0_13
state: LEGUP_F_main_BB__0_13
   %5 = sext i32 %4 to i64 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_function_call_14
state: LEGUP_function_call_14
   call void @transparent_crc(i64 %5, i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_14)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__0_15 default: LEGUP_function_call_14
state: LEGUP_F_main_BB__0_15
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__6_16
   %7 = phi i32 [ 0, %0 ], [ %26, %25 ] (endState: LEGUP_F_main_BB__6_16)
   %exitcond3 = icmp eq i32 %7, 5 (endState: LEGUP_F_main_BB__6_16)
   br i1 %exitcond3, label %27, label %8
   Transition: if (%exitcond3): LEGUP_F_main_BB__27_33 default: LEGUP_F_main_BB__8_17
state: LEGUP_F_main_BB__8_17
   br label %9
   Transition: default: LEGUP_F_main_BB__9_18
state: LEGUP_F_main_BB__9_18
   %10 = phi i32 [ 0, %8 ], [ %23, %22 ] (endState: LEGUP_F_main_BB__9_18)
   %exitcond1 = icmp eq i32 %10, 3 (endState: LEGUP_F_main_BB__9_18)
   br i1 %exitcond1, label %24, label %11
   Transition: if (%exitcond1): LEGUP_F_main_BB__24_31 default: LEGUP_F_main_BB__11_19
state: LEGUP_F_main_BB__11_19
   br label %12
   Transition: default: LEGUP_F_main_BB__12_20
state: LEGUP_F_main_BB__12_20
   %13 = phi i32 [ 0, %11 ], [ %20, %19 ] (endState: LEGUP_F_main_BB__12_20)
   %exitcond = icmp eq i32 %13, 6 (endState: LEGUP_F_main_BB__12_20)
   br i1 %exitcond, label %21, label %14
   Transition: if (%exitcond): LEGUP_F_main_BB__21_29 default: LEGUP_F_main_BB__14_21
state: LEGUP_F_main_BB__14_21
   %scevgep = getelementptr [5 x [3 x [6 x i32]]]* @g_5, i32 0, i32 %7, i32 %10, i32 %13 (endState: LEGUP_F_main_BB__14_21)
   %15 = load i32* %scevgep, align 4 (endState: LEGUP_F_main_BB__14_23)
   Transition: default: LEGUP_F_main_BB__14_22
state: LEGUP_F_main_BB__14_22
   Transition: default: LEGUP_F_main_BB__14_23
state: LEGUP_F_main_BB__14_23
   %16 = sext i32 %15 to i64 (endState: LEGUP_F_main_BB__14_23)
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   call void @transparent_crc(i64 %16, i8* getelementptr inbounds ([13 x i8]* @.str2, i32 0, i32 0), i32 0) #3 (endState: LEGUP_function_call_24)
   Transition: if (transparent_crc_finish_final): LEGUP_F_main_BB__14_25 default: LEGUP_function_call_24
state: LEGUP_F_main_BB__14_25
   br i1 false, label %17, label %18
   Transition: if (false): LEGUP_F_main_BB__17_26 default: LEGUP_F_main_BB__18_27
state: LEGUP_F_main_BB__17_26
   br label %18
   Transition: default: LEGUP_F_main_BB__18_27
state: LEGUP_F_main_BB__18_27
   br label %19
   Transition: default: LEGUP_F_main_BB__19_28
state: LEGUP_F_main_BB__19_28
   %20 = add nsw i32 %13, 1 (endState: LEGUP_F_main_BB__19_28)
   br label %12
   Transition: default: LEGUP_F_main_BB__12_20
state: LEGUP_F_main_BB__21_29
   br label %22
   Transition: default: LEGUP_F_main_BB__22_30
state: LEGUP_F_main_BB__22_30
   %23 = add nsw i32 %10, 1 (endState: LEGUP_F_main_BB__22_30)
   br label %9
   Transition: default: LEGUP_F_main_BB__9_18
state: LEGUP_F_main_BB__24_31
   br label %25
   Transition: default: LEGUP_F_main_BB__25_32
state: LEGUP_F_main_BB__25_32
   %26 = add nsw i32 %7, 1 (endState: LEGUP_F_main_BB__25_32)
   br label %6
   Transition: default: LEGUP_F_main_BB__6_16
state: LEGUP_F_main_BB__27_33
   %28 = load i32* @crc32_context, align 4 (endState: LEGUP_F_main_BB__27_35)
   Transition: default: LEGUP_F_main_BB__27_34
state: LEGUP_F_main_BB__27_34
   Transition: default: LEGUP_F_main_BB__27_35
state: LEGUP_F_main_BB__27_35
   %29 = xor i32 %28, -1 (endState: LEGUP_F_main_BB__27_35)
   Transition: default: LEGUP_function_call_36
state: LEGUP_function_call_36
   %30 = call i32 @platform_main_end(i32 %29, i32 0) #3 (endState: LEGUP_function_call_36)
   Transition: if (platform_main_end_finish_final): LEGUP_F_main_BB__27_37 default: LEGUP_function_call_36
state: LEGUP_F_main_BB__27_37
   ret i32 %30
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 15
Basic Block: %6 Num States: 1
Basic Block: %8 Num States: 1
Basic Block: %9 Num States: 1
Basic Block: %11 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %14 Num States: 5
Basic Block: %17 Num States: 1
Basic Block: %18 Num States: 1
Basic Block: %19 Num States: 1
Basic Block: %21 Num States: 1
Basic Block: %22 Num States: 1
Basic Block: %24 Num States: 1
Basic Block: %25 Num States: 1
Basic Block: %27 Num States: 5
End Function: main
--------------------------------------------------------------------------------

